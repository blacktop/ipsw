before:
  hooks:
    - go mod tidy
    - go generate ./...
    - ./hack/make/completions
    - ./hack/make/manpages
    - ./hack/make/json_mini

snapshot:
  name_template: "{{ incpatch .Version }}-next"

builds:
  - id: darwin_build
    main: ./cmd/ipsw
    binary: ipsw
    env:
      - CGO_ENABLED=1
    goos:
      - darwin
    goarch:
      - amd64
      - arm64
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags: -s -w -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppVersion={{.Version}} -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppBuildTime={{.Date}}
  - id: darwin_ios_build
    main: ./cmd/ipsw
    binary: ipsw
    env:
      - CGO_ENABLED=1
      - CC=$GOROOT/misc/ios/clangwrap.sh
    goos:
      - ios
    goarch:
      - arm64
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags: -s -w -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppVersion={{.Version}} -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppBuildTime={{.Date}}
    hooks:
      post:
        - ./hack/make/codesign {{ .Path }}
  - id: darwin_amd64_extras_build
    main: ./cmd/ipsw
    binary: ipsw
    env:
      - CGO_ENABLED=1
      - CGO_LDFLAGS=-L/usr/local/homebrew/lib -framework IOKit
      - CGO_CFLAGS=-I/usr/local/homebrew/include
      - CC=sandbox-exec -f $PWD/hack/goreleaser/profile.sb cc
    goos:
      - darwin
    goarch:
      - amd64
    tags:
      - libusb
      - unicorn
      - objc
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags: -s -w -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppVersion={{.Version}} -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppBuildTime={{.Date}}
    hooks:
      post:
        - ./hack/make/delete-all-rpaths {{ .Path }}
  - id: darwin_arm64_extras_build
    main: ./cmd/ipsw
    binary: ipsw
    env:
      - CGO_ENABLED=1
      - CGO_LDFLAGS=-L/opt/homebrew/lib -framework IOKit
      - CGO_CFLAGS=-I/opt/homebrew/include
      - CC=sandbox-exec -f $PWD/hack/goreleaser/profile.sb cc
    goos:
      - darwin
    goarch:
      - arm64
    tags:
      - libusb
      - unicorn
      - objc
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags: -s -w -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppVersion={{.Version}} -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppBuildTime={{.Date}}
    hooks:
      post:
        - ./hack/make/delete-all-rpaths {{ .Path }}
  - id: darwin_amd64_frida_build
    main: ./cmd/ipsw
    binary: ipsw
    env:
      - CGO_ENABLED=1
      - CGO_LDFLAGS=-L/usr/local/homebrew/lib
      - CGO_CFLAGS=-I/usr/local/homebrew/include
    goos:
      - darwin
    goarch:
      - amd64
    tags:
      - frida
      - libusb
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags: -s -w -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppVersion={{.Version}} -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppBuildTime={{.Date}}
    hooks:
      post:
        - ./hack/make/delete-all-rpaths {{ .Path }}
  - id: darwin_arm64_frida_build
    main: ./cmd/ipsw
    binary: ipsw
    env:
      - CGO_ENABLED=1
      - CGO_LDFLAGS=-L/opt/homebrew/lib
      - CGO_CFLAGS=-I/opt/homebrew/include
    goos:
      - darwin
    goarch:
      - arm64
    tags:
      - frida
      - libusb
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags: -s -w -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppVersion={{.Version}} -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppBuildTime={{.Date}}
    hooks:
      post:
        - ./hack/make/delete-all-rpaths {{ .Path }}
  - id: linux_amd64_build
    main: ./cmd/ipsw
    binary: ipsw
    env:
      - CGO_ENABLED=1
      - CC=zig cc -target x86_64-linux-musl
      - CC=zig c++ -target x86_64-linux-musl
    goos:
      - linux
    goarch:
      - amd64
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags: -s -w -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppVersion={{.Version}} -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppBuildTime={{.Date}}
  - id: linux_arm64_build
    main: ./cmd/ipsw
    binary: ipsw
    env:
      - CGO_ENABLED=1
      - CC=zig cc -target aarch64-linux-musl
      - CC=zig c++ -target aarch64-linux-musl
    goos:
      - linux
    goarch:
      - arm64
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags: -s -w -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppVersion={{.Version}} -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppBuildTime={{.Date}}
  # - id: linux_amd64_extras_build
  #   hooks:
  #     pre:
  #       - hack/make/libusb x86_64
  #       - hack/make/unicorn x86_64
  #     post:
  #       - /opt/homebrew/opt/llvm/bin/llvm-strip {{ .Path }}
  #   main: ./cmd/ipsw
  #   binary: ipsw
  #   env:
  #     - CGO_ENABLED=1
  #     - CC=zig cc -target x86_64-linux-musl
  #     - CC=zig c++ -target x86_64-linux-musl
  #     - CGO_LDFLAGS=-L/tmp/install_x86_64/usr/local/lib
  #     - PKG_CONFIG_PATH=/tmp/install_x86_64/usr/local/lib/pkgconfig
  #     - CGO_CFLAGS=-I/tmp/install_x86_64/usr/local/include/libusb-1.0 -I/tmp/install_x86_64/usr/local/include
  #   tags:
  #     - libusb
  #     - unicorn
  #   goos:
  #     - linux
  #   goarch:
  #     - amd64
  #   mod_timestamp: "{{ .CommitTimestamp }}"
  #   flags:
  #     - -trimpath
  #   ldflags: -s -w -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppVersion={{.Version}} -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppBuildTime={{.Date}}
  # - id: linux_arm64_extras_build
  #   hooks:
  #     pre:
  #       - hack/make/libusb aarch64
  #       - hack/make/unicorn aarch64
  #     post:
  #       - /opt/homebrew/opt/llvm/bin/llvm-strip {{ .Path }}
  #   main: ./cmd/ipsw
  #   binary: ipsw
  #   env:
  #     - CGO_ENABLED=1
  #     - CC=zig cc -target aarch64-linux-musl
  #     - CC=zig c++ -target aarch64-linux-musl
  #     - CGO_LDFLAGS=-L/tmp/install_aarch64/usr/local/lib
  #     - PKG_CONFIG_PATH=/tmp/install_aarch64/usr/local/lib/pkgconfig
  #     - CGO_CFLAGS=-I/tmp/install_aarch64/usr/local/include/libusb-1.0 -I/tmp/install_aarch64/usr/local/include
  #   tags:
  #     - libusb
  #     - unicorn
  #   goos:
  #     - linux
  #   goarch:
  #     - arm64
  #   mod_timestamp: "{{ .CommitTimestamp }}"
  #   flags:
  #     - -trimpath
  #   ldflags: -s -w -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppVersion={{.Version}} -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppBuildTime={{.Date}}
  - id: windows_amd64_build
    main: ./cmd/ipsw
    binary: ipsw
    env:
      - CGO_ENABLED=1
      - CC=zig cc -target x86_64-windows-gnu
      - CC=zig c++ -target x86_64-windows-gnu
    goos:
      - windows
    goarch:
      - amd64
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags: -s -w -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppVersion={{.Version}} -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppBuildTime={{.Date}}
  - id: windows_arm64_build
    main: ./cmd/ipsw
    binary: ipsw
    env:
      - CGO_ENABLED=1
      - CC=zig cc -target aarch64-windows-gnu
      - CC=zig c++ -target aarch64-windows-gnu
    goos:
      - windows
    goarch:
      - arm64
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags: -s -w -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppVersion={{.Version}} -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppBuildTime={{.Date}}

universal_binaries:
  - id: darwin_build
    replace: false

archives:
  - id: default_archive
    builds:
      - darwin_build
      - darwin_ios_build
      - darwin_universal
      - linux_amd64_build
      - linux_arm64_build
      - windows_amd64_build
      - windows_arm64_build
    name_template: >-
      {{ .ProjectName }}_
      {{- if eq .Os "darwin" }}macOS
      {{- else if eq .Os "ios" }}iOS
      {{- else }}{{ .Os }}{{ end }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else if eq .Arch "all" }}universal
      {{- else }}{{ .Arch }}{{ end }}
    rlcp: true
    files:
      - README.md
      - LICENSE
      - completions/*
      - manpages/*
    wrap_in_directory: true
  - id: extras_archive
    builds:
      - darwin_amd64_extras_build
      - darwin_arm64_extras_build
      # - linux_amd64_extras_build
      # - linux_arm64_extras_build
    name_template: >-
      {{ .ProjectName }}_
      {{- if eq .Os "darwin" }}macOS
      {{- else if eq .Os "ios" }}iOS
      {{- else }}{{ .Os }}{{ end }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else if eq .Arch "all" }}universal
      {{- else }}{{ .Arch }}{{ end }}_extras
    rlcp: true
    files:
      - README.md
      - LICENSE
      - completions/*
      - manpages/*
    wrap_in_directory: true
  - id: frida_archive
    builds:
      - darwin_amd64_frida_build
      - darwin_arm64_frida_build
    name_template: >-
      {{ .ProjectName }}_
      {{- if eq .Os "darwin" }}macOS
      {{- else if eq .Os "ios" }}iOS
      {{- else }}{{ .Os }}{{ end }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else if eq .Arch "all" }}universal
      {{- else }}{{ .Arch }}{{ end }}_frida
    rlcp: true
    files:
      - README.md
      - LICENSE
      - completions/*
      - manpages/*
    wrap_in_directory: true

brews:
  - tap:
      owner: blacktop
      name: homebrew-tap
    ids:
      - extras_archive
    folder: Formula
    homepage: "https://github.com/blacktop/ipsw"
    description: "iOS/macOS Research Swiss Army Knife"
    license: MIT
    dependencies:
      - name: bat
        type: optional
      - name: libusb
        type: optional
      - name: unicorn
        type: optional
      - name: git-delta
        type: optional
    conflicts:
      - ipsw-frida
    install: |
      bin.install "ipsw"
      bash_completion.install "completions/_bash" => "ipsw"
      zsh_completion.install "completions/_zsh" => "_ipsw"
      fish_completion.install "completions/_fish" => "ipsw.fish"
      man1.install Dir["manpages/*"]
    test: |
      system "#{bin}/ipsw --version"
  - name: ipsw-frida
    tap:
      owner: blacktop
      name: homebrew-tap
    ids:
      - frida_archive
    folder: Formula
    homepage: "https://github.com/blacktop/ipsw"
    description: "iOS/macOS Research Swiss Army Knife"
    license: MIT
    dependencies:
      - name: bat
        type: optional
      - name: libusb
        type: optional
    conflicts:
      - ipsw
    install: |
      bin.install "ipsw"
      bash_completion.install "completions/_bash" => "ipsw"
      zsh_completion.install "completions/_zsh" => "_ipsw"
      fish_completion.install "completions/_fish" => "ipsw.fish"
      man1.install Dir["manpages/*"]
    test: |
      system "#{bin}/ipsw --version"

checksum:
  name_template: "checksums.txt"

signs:
  - artifacts: checksum

sboms:
  - artifacts: archive

aurs:
  - homepage: https://github.com/blacktop/ipsw
    description: iOS/macOS Research Swiss Army Knife
    maintainers:
      - "Blacktop <https://github.com/blacktop>"
    license: MIT
    private_key: /Users/blacktop/.ssh/aur
    git_url: "ssh://aur@aur.archlinux.org/ipsw-bin.git"
    package: |-
      # bin
      install -Dm755 "./ipsw" "${pkgdir}/usr/bin/ipsw"

      # license
      install -Dm644 "./LICENSE.md" "${pkgdir}/usr/share/licenses/ipsw/LICENSE"

      # completions
      mkdir -p "${pkgdir}/usr/share/bash-completion/completions/"
      mkdir -p "${pkgdir}/usr/share/zsh/site-functions/"
      mkdir -p "${pkgdir}/usr/share/fish/vendor_completions.d/"
      install -Dm644 "./completions/ipsw" "${pkgdir}/usr/share/bash-completion/completions/ipsw"
      install -Dm644 "./completions/_ipsw" "${pkgdir}/usr/share/zsh/site-functions/_ipsw"
      install -Dm644 "./completions/ipsw.fish" "${pkgdir}/usr/share/fish/vendor_completions.d/ipsw.fish"

      # man pages
      install -Dm644 "./manpages/ipsw.1.gz" "${pkgdir}/usr/share/man/man1/ipsw.1.gz"

nfpms:
  - id: packages
    builds:
      - linux_amd64_build
      - linux_arm64_build
    homepage: https://github.com/blacktop/ipsw
    description: |-
      iOS/macOS Research Swiss Army Knife.
    maintainer: Blacktop <https://github.com/blacktop>
    license: MIT
    vendor: Blacktop
    bindir: /usr/bin
    section: utils
    contents:
      - src: ./completions/_bash
        dst: /usr/share/bash-completion/completions/ipsw
        file_info:
          mode: 0644
      - src: ./completions/_fish
        dst: /usr/share/fish/vendor_completions.d/ipsw.fish
        file_info:
          mode: 0644
      - src: ./completions/_zsh
        dst: /usr/share/zsh/vendor-completions/_ipsw
        file_info:
          mode: 0644
      - src: ./manpages/ipsw.1.gz
        dst: /usr/share/man/man1/ipsw.1.gz
        file_info:
          mode: 0644
      - src: ./LICENSE
        dst: /usr/share/doc/ipsw/copyright
        file_info:
          mode: 0644
    file_name_template: >-
      {{ .ProjectName }}_
      {{- .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
    formats:
      - deb
      - rpm
      - apk
      - archlinux
    deb:
      lintian_overrides:
        - statically-linked-binary
        - changelog-file-missing-in-native-package
# - id: packages_extras
#   file_name_template: "{{ .PackageName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}_extras"
#   builds:
#     - linux_amd64_extras_build
#     - linux_arm64_extras_build
#   homepage:  https://github.com/blacktop/ipsw
#   description: |-
#     iOS/macOS Research Swiss Army Knife.
#   maintainer: Blacktop <https://github.com/blacktop>
#   license: MIT
#   vendor: Blacktop
#   bindir: /usr/bin
#   section: utils
#   contents:
#     - src: ./completions/_bash
#       dst: /usr/share/bash-completion/completions/ipsw
#       file_info:
#         mode: 0644
#     - src: ./completions/_fish
#       dst: /usr/share/fish/completions/ipsw.fish
#       file_info:
#         mode: 0644
#     - src: ./completions/_zsh
#       dst:  /usr/share/zsh/vendor-completions/_ipsw
#       file_info:
#         mode: 0644
#     - src: ./manpages/ipsw.1.gz
#       dst: /usr/share/man/man1/ipsw.1.gz
#       file_info:
#         mode: 0644
#     - src: ./LICENSE
#       dst: /usr/share/doc/ipsw/copyright
#       file_info:
#         mode: 0644
#   replacements:
#     amd64: x86_64
#   formats:
#   - apk
#   - deb
#   - rpm
#   deb:
#     lintian_overrides:
#       - statically-linked-binary
#       - changelog-file-missing-in-native-package

snapcrafts:
  - id: snaps
    builds:
      - linux_amd64_build
      - linux_arm64_build
      # - linux_amd64_extras_build
      # - linux_arm64_extras_build
    summary: iOS/macOS Research Swiss Army Knife.
    description: |
      iOS/macOS Research Swiss Army Knife.
    grade: stable
    confinement: strict
    publish: true
    license: MIT
    extra_files:
      - source: ./completions/_bash
        destination: /usr/share/bash-completion/completions/ipsw
        mode: 0644
      - source: ./completions/_fish
        destination: /usr/share/fish/vendor_completions.d/ipsw.fish
        mode: 0644
      - source: ./completions/_zsh
        destination: /usr/share/zsh/vendor-completions/_ipsw
        mode: 0644
      - source: ./manpages/ipsw.1.gz
        destination: /usr/share/man/man1/ipsw.1.gz
        mode: 0644
      - source: ./LICENSE
        destination: /usr/share/doc/ipsw/copyright
        mode: 0644
    apps:
      ipsw:
        command: ipsw
        plugs: ["home", "network"]

scoop:
  bucket:
    owner: blacktop
    name: scoop-bucket
  homepage: https://blacktop.github.io/ipsw
  description: iOS/macOS Research Swiss Army Knife
  license: MIT

# chocolateys:
#   - project_url: https://github.com/blacktop/ipsw
#     icon_url: https://github.com/blacktop/ipsw/raw/master/docs/static/images/ipsw.png
#     license_url: https://github.com/blacktop/ipsw/blob/master/LICENSE
#     authors: blacktop
#     release_notes: "https://github.com/blacktop/ipsw/releases/tag/v{{ .Version }}"
#     copyright: 2018-2022 blacktop
#     project_source_url: https://github.com/blacktop/ipsw
#     docs_url: https://blacktop.github.io/ipsw/
#     summary: iOS/macOS Research Swiss Army Knife
#     description: Everything you need to do security research on iOS and macOS.
#     tags: "iOS macOS security research swiss-army-knife"

changelog:
  sort: asc
  use: github
  groups:
    - title: Dependency updates
      regexp: '^.*?(feat|fix)\(deps\)!?:.+$'
      order: 300
    - title: "New Features"
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 100
    - title: "Bug fixes"
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 200
    - title: "Documentation updates"
      regexp: ^.*?doc(\([[:word:]]+\))??!?:.+$
      order: 400
    - title: Other work
      order: 9999
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - '^chore'
      - "^bumping"
      - "^Update"
      - "^Delete"
      - "^Working"
      - "reorg"
      - "updates"
      - 'merge conflict'
      - Merge pull request
      - Merge remote-tracking branch
      - Merge branch

release:
  footer: |
    ### Summary
    **Full Changelog**: https://github.com/blacktop/ipsw/compare/{{ .PreviousTag }}...{{ .Tag }}
    ## What to do next?
    - Read the [documentation](https://blacktop.github.io/ipsw/docs/)
    - Join our [Discord server](https://discord.gg/xx2y9yrcgs)
    - Follow us on [Twitter](https://twitter.com/blacktop__)

announce:
  discord:
    enabled: true
    message_template: "`ipsw` {{ .Tag }} is out! Check it out: https://github.com/blacktop/ipsw/releases/tag/{{ .Tag }}"
  mastodon:
    enabled: false
    message_template: "`ipsw` {{ .Tag }} is out! Check it out: https://github.com/blacktop/ipsw/releases/tag/{{ .Tag }}"
    server: https://mastodon.social
