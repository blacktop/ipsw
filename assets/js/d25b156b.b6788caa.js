"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7272],{90886:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>a,frontMatter:()=>t,metadata:()=>d,toc:()=>c});var r=i(85893),n=i(11151);const t={id:"debugserver",title:"debugserver",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"debugserver",description:"Prep device for remote debugging"},o=void 0,d={id:"cli/ipsw/ssh/debugserver",title:"debugserver",description:"Prep device for remote debugging",source:"@site/docs/cli/ipsw/ssh/debugserver.md",sourceDirName:"cli/ipsw/ssh",slug:"/cli/ipsw/ssh/debugserver",permalink:"/ipsw/docs/cli/ipsw/ssh/debugserver",draft:!1,unlisted:!1,editUrl:"https://github.com/blacktop/ipsw/tree/master/www/docs/cli/ipsw/ssh/debugserver.md",tags:[],version:"current",frontMatter:{id:"debugserver",title:"debugserver",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"debugserver",description:"Prep device for remote debugging"},sidebar:"cli",previous:{title:"ssh",permalink:"/ipsw/docs/cli/ipsw/ssh/"},next:{title:"shsh",permalink:"/ipsw/docs/cli/ipsw/ssh/shsh"}},l={},c=[{value:"ipsw ssh debugserver",id:"ipsw-ssh-debugserver",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function p(e){const s={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h2,{id:"ipsw-ssh-debugserver",children:"ipsw ssh debugserver"}),"\n",(0,r.jsx)(s.p,{children:"Prep device for remote debugging"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"ipsw ssh debugserver [flags]\n"})}),"\n",(0,r.jsx)(s.h3,{id:"options",children:"Options"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"  -f, --force          overwrite file on device\n  -h, --help           help for debugserver\n  -m, --image string   path to DeveloperDiskImage.dmg\n"})}),"\n",(0,r.jsx)(s.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:'      --color             colorize output\n      --config string     config file (default is $HOME/.config/ipsw/config.yaml)\n  -t, --host string       ssh host (default "localhost")\n  -n, --insecure          ignore known_hosts\n  -i, --key string        ssh key (default "$HOME/.ssh/id_rsa")\n      --no-color          disable colorize output\n  -s, --password string   ssh password (default "alpine")\n  -p, --port string       ssh port (default "2222")\n  -u, --user string       ssh user (default "root")\n  -V, --verbose           verbose output\n'})}),"\n",(0,r.jsx)(s.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"/docs/cli/ipsw/ssh",children:"ipsw ssh"}),"\t - SSH into a jailbroken device"]}),"\n"]})]})}function a(e={}){const{wrapper:s}={...(0,n.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},11151:(e,s,i)=>{i.d(s,{Z:()=>d,a:()=>o});var r=i(67294);const n={},t=r.createContext(n);function o(e){const s=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),r.createElement(t.Provider,{value:s},e.children)}}}]);