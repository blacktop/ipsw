"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6922],{50472:(i,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>r,default:()=>a,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var s=n(85893),t=n(11151);const o={id:"sign",title:"sign",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"sign",description:"Personalize DDI"},r=void 0,c={id:"cli/ipsw/idev/img/sign",title:"sign",description:"Personalize DDI",source:"@site/docs/cli/ipsw/idev/img/sign.md",sourceDirName:"cli/ipsw/idev/img",slug:"/cli/ipsw/idev/img/sign",permalink:"/ipsw/docs/cli/ipsw/idev/img/sign",draft:!1,unlisted:!1,editUrl:"https://github.com/blacktop/ipsw/tree/master/www/docs/cli/ipsw/idev/img/sign.md",tags:[],version:"current",frontMatter:{id:"sign",title:"sign",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"sign",description:"Personalize DDI"},sidebar:"cli",previous:{title:"nonce",permalink:"/ipsw/docs/cli/ipsw/idev/img/nonce"},next:{title:"unmount",permalink:"/ipsw/docs/cli/ipsw/idev/img/unmount"}},d={},l=[{value:"ipsw idev img sign",id:"ipsw-idev-img-sign",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function p(i){const e={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...i.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h2,{id:"ipsw-idev-img-sign",children:"ipsw idev img sign"}),"\n",(0,s.jsx)(e.p,{children:"Personalize DDI"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"ipsw idev img sign [flags]\n"})}),"\n",(0,s.jsx)(e.h3,{id:"options",children:"Options"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"  -a, --ap-item string                     Ap'Item to personalize (example: --ap-item 'Ap,SikaFuse')\n  -b, --board-id uint                      Device ApBoardID\n  -c, --chip-id uint                       Device ApChipID\n  -e, --ecid uint                          Device ApECID\n  -h, --help                               help for sign\n  -i, --input ipsw idev img nonce --json   JSON file from ipsw idev img nonce --json command\n      --insecure                           do not verify ssl certs\n  -m, --manifest string                    BuildManifest.plist to use\n  -n, --nonce string                       Device ApNonce\n  -o, --output string                      Folder to write signature to\n      --proxy string                       HTTP/HTTPS proxy\n  -x, --xcode string                       Path to Xcode.app\n"})}),"\n",(0,s.jsx)(e.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"      --color           colorize output\n      --config string   config file (default is $HOME/.config/ipsw/config.yaml)\n      --no-color        disable colorize output\n  -u, --udid string     Device UniqueDeviceID to connect to\n  -V, --verbose         verbose output\n"})}),"\n",(0,s.jsx)(e.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"/docs/cli/ipsw/idev/img",children:"ipsw idev img"}),"\t - Image commands"]}),"\n"]})]})}function a(i={}){const{wrapper:e}={...(0,t.a)(),...i.components};return e?(0,s.jsx)(e,{...i,children:(0,s.jsx)(p,{...i})}):p(i)}},11151:(i,e,n)=>{n.d(e,{Z:()=>c,a:()=>r});var s=n(67294);const t={},o=s.createContext(t);function r(i){const e=s.useContext(o);return s.useMemo((function(){return"function"==typeof i?i(e):{...e,...i}}),[e,i])}function c(i){let e;return e=i.disableParentContext?"function"==typeof i.components?i.components(t):i.components||t:r(i.components),s.createElement(o.Provider,{value:e},i.children)}}}]);