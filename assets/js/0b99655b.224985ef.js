"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4638],{9288:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>r,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var d=i(85893),n=i(11151);const s={id:"tbd",title:"tbd",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"tbd",description:"Generate a .tbd file for a dylib"},l=void 0,o={id:"cli/ipsw/dyld/tbd",title:"tbd",description:"Generate a .tbd file for a dylib",source:"@site/docs/cli/ipsw/dyld/tbd.md",sourceDirName:"cli/ipsw/dyld",slug:"/cli/ipsw/dyld/tbd",permalink:"/ipsw/docs/cli/ipsw/dyld/tbd",draft:!1,unlisted:!1,editUrl:"https://github.com/blacktop/ipsw/tree/master/www/docs/cli/ipsw/dyld/tbd.md",tags:[],version:"current",frontMatter:{id:"tbd",title:"tbd",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"tbd",description:"Generate a .tbd file for a dylib"},sidebar:"cli",previous:{title:"symaddr",permalink:"/ipsw/docs/cli/ipsw/dyld/symaddr"},next:{title:"webkit",permalink:"/ipsw/docs/cli/ipsw/dyld/webkit"}},r={},c=[{value:"ipsw dyld tbd",id:"ipsw-dyld-tbd",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function a(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(t.h2,{id:"ipsw-dyld-tbd",children:"ipsw dyld tbd"}),"\n",(0,d.jsx)(t.p,{children:"Generate a .tbd file for a dylib"}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{children:"ipsw dyld tbd <dyld_shared_cache> <image> [flags]\n"})}),"\n",(0,d.jsx)(t.h3,{id:"options",children:"Options"}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{children:"  -h, --help   help for tbd\n"})}),"\n",(0,d.jsx)(t.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{children:"      --color           colorize output\n      --config string   config file (default is $HOME/.config/ipsw/config.yaml)\n  -V, --verbose         verbose output\n"})}),"\n",(0,d.jsx)(t.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,d.jsxs)(t.ul,{children:["\n",(0,d.jsxs)(t.li,{children:[(0,d.jsx)(t.a,{href:"/docs/cli/ipsw/dyld",children:"ipsw dyld"}),"\t - Parse dyld_shared_cache"]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(a,{...e})}):a(e)}},11151:(e,t,i)=>{i.d(t,{Z:()=>o,a:()=>l});var d=i(67294);const n={},s=d.createContext(n);function l(e){const t=d.useContext(s);return d.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),d.createElement(s.Provider,{value:t},e.children)}}}]);