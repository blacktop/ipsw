"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7201],{17588:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>r,default:()=>m,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var t=n(85893),o=n(11151);const s={id:"mount",title:"mount",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"mount",description:"Mount an image"},r=void 0,c={id:"cli/ipsw/idev/img/mount",title:"mount",description:"Mount an image",source:"@site/docs/cli/ipsw/idev/img/mount.md",sourceDirName:"cli/ipsw/idev/img",slug:"/cli/ipsw/idev/img/mount",permalink:"/ipsw/docs/cli/ipsw/idev/img/mount",draft:!1,unlisted:!1,editUrl:"https://github.com/blacktop/ipsw/tree/master/www/docs/cli/ipsw/idev/img/mount.md",tags:[],version:"current",frontMatter:{id:"mount",title:"mount",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"mount",description:"Mount an image"},sidebar:"cli",previous:{title:"ls",permalink:"/ipsw/docs/cli/ipsw/idev/img/ls"},next:{title:"nonce",permalink:"/ipsw/docs/cli/ipsw/idev/img/nonce"}},d={},l=[{value:"ipsw idev img mount",id:"ipsw-idev-img-mount",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function a(e){const i={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h2,{id:"ipsw-idev-img-mount",children:"ipsw idev img mount"}),"\n",(0,t.jsx)(i.p,{children:"Mount an image"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"ipsw idev img mount [flags]\n"})}),"\n",(0,t.jsx)(i.h3,{id:"options",children:"Options"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"  -d, --ddi-img string      DDI.dmg to mount\n  -h, --help                help for mount\n  -t, --image-type string   Image type to mount (i.e. Developer)\n      --insecure            do not verify ssl certs\n  -m, --manifest string     BuildManifest.plist to use\n      --proxy string        HTTP/HTTPS proxy\n  -s, --signature string    Image signature to use\n  -c, --trustcache string   trustcache to use\n  -x, --xcode string        Path to Xcode.app (i.e. /Applications/Xcode.app)\n"})}),"\n",(0,t.jsx)(i.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"      --color           colorize output\n      --config string   config file (default is $HOME/.config/ipsw/config.yaml)\n      --no-color        disable colorize output\n  -u, --udid string     Device UniqueDeviceID to connect to\n  -V, --verbose         verbose output\n"})}),"\n",(0,t.jsx)(i.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"/docs/cli/ipsw/idev/img",children:"ipsw idev img"}),"\t - Image commands"]}),"\n"]})]})}function m(e={}){const{wrapper:i}={...(0,o.a)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},11151:(e,i,n)=>{n.d(i,{Z:()=>c,a:()=>r});var t=n(67294);const o={},s=t.createContext(o);function r(e){const i=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(s.Provider,{value:i},e.children)}}}]);