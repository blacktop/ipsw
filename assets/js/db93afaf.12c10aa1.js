"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2121],{500:(s,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>a,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var n=i(74848),t=i(28453);const o={id:"ssh",title:"ssh",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"ssh",description:"SSH into a jailbroken device"},r=void 0,l={id:"cli/ipsw/ssh/ssh",title:"ssh",description:"SSH into a jailbroken device",source:"@site/docs/cli/ipsw/ssh/ssh.md",sourceDirName:"cli/ipsw/ssh",slug:"/cli/ipsw/ssh/",permalink:"/ipsw/docs/cli/ipsw/ssh/",draft:!1,unlisted:!1,editUrl:"https://github.com/blacktop/ipsw/tree/master/www/docs/cli/ipsw/ssh/ssh.md",tags:[],version:"current",frontMatter:{id:"ssh",title:"ssh",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"ssh",description:"SSH into a jailbroken device"},sidebar:"cli",previous:{title:"pongo",permalink:"/ipsw/docs/cli/ipsw/pongo"},next:{title:"debugserver",permalink:"/ipsw/docs/cli/ipsw/ssh/debugserver"}},c={},d=[{value:"ipsw ssh",id:"ipsw-ssh",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function h(s){const e={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...s.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{id:"ipsw-ssh",children:"ipsw ssh"}),"\n",(0,n.jsx)(e.p,{children:"SSH into a jailbroken device"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:"ipsw ssh [flags]\n"})}),"\n",(0,n.jsx)(e.h3,{id:"options",children:"Options"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:'  -h, --help              help for ssh\n  -t, --host string       ssh host (default "localhost")\n  -n, --insecure          ignore known_hosts\n  -i, --key string        ssh key (default "$HOME/.ssh/id_rsa")\n  -s, --password string   ssh password (default "alpine")\n  -p, --port string       ssh port (default "2222")\n  -u, --user string       ssh user (default "root")\n'})}),"\n",(0,n.jsx)(e.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:"      --color           colorize output\n      --config string   config file (default is $HOME/.config/ipsw/config.yaml)\n      --no-color        disable colorize output\n  -V, --verbose         verbose output\n"})}),"\n",(0,n.jsx)(e.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.a,{href:"/docs/cli/ipsw",children:"ipsw"}),"\t - Download and Parse IPSWs (and SO much more)"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.a,{href:"/docs/cli/ipsw/ssh/debugserver",children:"ipsw ssh debugserver"}),"\t - Prep device for remote debugging"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.a,{href:"/docs/cli/ipsw/ssh/shsh",children:"ipsw ssh shsh"}),"\t - Get shsh blobs from device"]}),"\n"]})]})}function a(s={}){const{wrapper:e}={...(0,t.R)(),...s.components};return e?(0,n.jsx)(e,{...s,children:(0,n.jsx)(h,{...s})}):h(s)}},28453:(s,e,i)=>{i.d(e,{R:()=>r,x:()=>l});var n=i(96540);const t={},o=n.createContext(t);function r(s){const e=n.useContext(o);return n.useMemo((function(){return"function"==typeof s?s(e):{...e,...s}}),[e,s])}function l(s){let e;return e=s.disableParentContext?"function"==typeof s.components?s.components(t):s.components||t:r(s.components),n.createElement(o.Provider,{value:e},s.children)}}}]);