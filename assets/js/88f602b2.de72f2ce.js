"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7557],{78034:(e,i,o)=>{o.r(i),o.d(i,{assets:()=>c,contentTitle:()=>s,default:()=>a,frontMatter:()=>r,metadata:()=>d,toc:()=>p});var n=o(74848),t=o(28453);const r={id:"proxy",title:"proxy",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"proxy",description:"Create a TCP proxy (for ssh/debugging)"},s=void 0,d={id:"cli/ipsw/idev/proxy",title:"proxy",description:"Create a TCP proxy (for ssh/debugging)",source:"@site/docs/cli/ipsw/idev/proxy.md",sourceDirName:"cli/ipsw/idev",slug:"/cli/ipsw/idev/proxy",permalink:"/ipsw/docs/cli/ipsw/idev/proxy",draft:!1,unlisted:!1,editUrl:"https://github.com/blacktop/ipsw/tree/master/www/docs/cli/ipsw/idev/proxy.md",tags:[],version:"current",frontMatter:{id:"proxy",title:"proxy",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"proxy",description:"Create a TCP proxy (for ssh/debugging)"},sidebar:"cli",previous:{title:"rm",permalink:"/ipsw/docs/cli/ipsw/idev/prov/rm"},next:{title:"ps",permalink:"/ipsw/docs/cli/ipsw/idev/ps"}},c={},p=[{value:"ipsw idev proxy",id:"ipsw-idev-proxy",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function l(e){const i={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h2,{id:"ipsw-idev-proxy",children:"ipsw idev proxy"}),"\n",(0,n.jsx)(i.p,{children:"Create a TCP proxy (for ssh/debugging)"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"ipsw idev proxy [flags]\n"})}),"\n",(0,n.jsx)(i.h3,{id:"options",children:"Options"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"  -h, --help        help for proxy\n  -l, --lport int   host port\n  -r, --rport int   device port\n"})}),"\n",(0,n.jsx)(i.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"      --color           colorize output\n      --config string   config file (default is $HOME/.config/ipsw/config.yaml)\n      --no-color        disable colorize output\n  -u, --udid string     Device UniqueDeviceID to connect to\n  -V, --verbose         verbose output\n"})}),"\n",(0,n.jsx)(i.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.a,{href:"/docs/cli/ipsw/idev",children:"ipsw idev"}),"\t - USB connected device commands"]}),"\n"]})]})}function a(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,i,o)=>{o.d(i,{R:()=>s,x:()=>d});var n=o(96540);const t={},r=n.createContext(t);function s(e){const i=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),n.createElement(r.Provider,{value:i},e.children)}}}]);