"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9066],{3905:(e,t,i)=>{i.d(t,{Zo:()=>p,kt:()=>w});var n=i(7294);function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function o(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function a(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?o(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function c(e,t){if(null==e)return{};var i,n,r=function(e,t){if(null==e)return{};var i,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)i=o[n],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)i=o[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var l=n.createContext({}),s=function(e){var t=n.useContext(l),i=t;return e&&(i="function"==typeof e?e(t):a(a({},t),e)),i},p=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var i=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=s(i),u=r,w=d["".concat(l,".").concat(u)]||d[u]||f[u]||o;return i?n.createElement(w,a(a({ref:t},p),{},{components:i})):n.createElement(w,a({ref:t},p))}));function w(e,t){var i=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=i.length,a=new Array(o);a[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[d]="string"==typeof e?e:r,a[1]=c;for(var s=2;s<o;s++)a[s]=i[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,i)}u.displayName="MDXCreateElement"},5562:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var n=i(7462),r=(i(7294),i(3905));const o={id:"wifi",title:"wifi",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"wifi",description:"Get/Set wifi connections state",last_update:{date:new Date("2023-01-17T06:32:27.000Z"),author:"blacktop"}},a=void 0,c={unversionedId:"cli/ipsw/idev/wifi",id:"cli/ipsw/idev/wifi",title:"wifi",description:"Get/Set wifi connections state",source:"@site/docs/cli/ipsw/idev/wifi.md",sourceDirName:"cli/ipsw/idev",slug:"/cli/ipsw/idev/wifi",permalink:"/ipsw/docs/cli/ipsw/idev/wifi",draft:!1,editUrl:"https://github.com/blacktop/ipsw/tree/master/www/docs/cli/ipsw/idev/wifi.md",tags:[],version:"current",frontMatter:{id:"wifi",title:"wifi",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"wifi",description:"Get/Set wifi connections state",last_update:{date:"2023-01-17T06:32:27.000Z",author:"blacktop"}},sidebar:"cli",previous:{title:"syslog",permalink:"/ipsw/docs/cli/ipsw/idev/syslog"},next:{title:"img4",permalink:"/ipsw/docs/cli/ipsw/img4/"}},l={},s=[{value:"ipsw idev wifi",id:"ipsw-idev-wifi",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],p={toc:s};function d(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"ipsw-idev-wifi"},"ipsw idev wifi"),(0,r.kt)("p",null,"Get/Set wifi connections state"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"ipsw idev wifi [flags]\n")),(0,r.kt)("h3",{id:"options"},"Options"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"  -h, --help   help for wifi\n      --off    Turn WiFi off\n      --on     Turn WiFi on\n")),(0,r.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"      --color           colorize output\n      --config string   config file (default is $HOME/.ipsw/config.yaml)\n  -u, --udid string     Device UniqueDeviceID to connect to\n  -V, --verbose         verbose output\n")),(0,r.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/cli/ipsw/idev"},"ipsw idev"),"\t - USB connected device commands")))}d.isMDXComponent=!0}}]);