"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8899],{27272:(s,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>h,toc:()=>c});var n=i(74848),t=i(28453);const o={id:"shsh",title:"shsh",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"shsh",description:"Get shsh blobs from device"},r=void 0,h={id:"cli/ipsw/ssh/shsh",title:"shsh",description:"Get shsh blobs from device",source:"@site/docs/cli/ipsw/ssh/shsh.md",sourceDirName:"cli/ipsw/ssh",slug:"/cli/ipsw/ssh/shsh",permalink:"/ipsw/docs/cli/ipsw/ssh/shsh",draft:!1,unlisted:!1,editUrl:"https://github.com/blacktop/ipsw/tree/master/www/docs/cli/ipsw/ssh/shsh.md",tags:[],version:"current",frontMatter:{id:"shsh",title:"shsh",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"shsh",description:"Get shsh blobs from device"},sidebar:"cli",previous:{title:"debugserver",permalink:"/ipsw/docs/cli/ipsw/ssh/debugserver"},next:{title:"swift-dump",permalink:"/ipsw/docs/cli/ipsw/swift-dump"}},l={},c=[{value:"ipsw ssh shsh",id:"ipsw-ssh-shsh",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function d(s){const e={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...s.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{id:"ipsw-ssh-shsh",children:"ipsw ssh shsh"}),"\n",(0,n.jsx)(e.p,{children:"Get shsh blobs from device"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:"ipsw ssh shsh [flags]\n"})}),"\n",(0,n.jsx)(e.h3,{id:"options",children:"Options"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:"  -h, --help   help for shsh\n"})}),"\n",(0,n.jsx)(e.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:'      --color             colorize output\n      --config string     config file (default is $HOME/.config/ipsw/config.yaml)\n  -t, --host string       ssh host (default "localhost")\n  -n, --insecure          ignore known_hosts\n  -i, --key string        ssh key (default "$HOME/.ssh/id_rsa")\n      --no-color          disable colorize output\n  -s, --password string   ssh password (default "alpine")\n  -p, --port string       ssh port (default "2222")\n  -u, --user string       ssh user (default "root")\n  -V, --verbose           verbose output\n'})}),"\n",(0,n.jsx)(e.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.a,{href:"/docs/cli/ipsw/ssh",children:"ipsw ssh"}),"\t - SSH into a jailbroken device"]}),"\n"]})]})}function p(s={}){const{wrapper:e}={...(0,t.R)(),...s.components};return e?(0,n.jsx)(e,{...s,children:(0,n.jsx)(d,{...s})}):d(s)}},28453:(s,e,i)=>{i.d(e,{R:()=>r,x:()=>h});var n=i(96540);const t={},o=n.createContext(t);function r(s){const e=n.useContext(o);return n.useMemo((function(){return"function"==typeof s?s(e):{...e,...s}}),[e,s])}function h(s){let e;return e=s.disableParentContext?"function"==typeof s.components?s.components(t):s.components||t:r(s.components),n.createElement(o.Provider,{value:e},s.children)}}}]);