"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[505],{3905:(e,a,t)=>{t.d(a,{Zo:()=>c,kt:()=>y});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function s(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?s(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=n.createContext({}),l=function(e){var a=n.useContext(d),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},c=function(e){var a=l(e.components);return n.createElement(d.Provider,{value:a},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},b=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,s=e.originalType,d=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=l(t),b=r,y=p["".concat(d,".").concat(b)]||p[b]||m[b]||s;return t?n.createElement(y,i(i({ref:a},c),{},{components:t})):n.createElement(y,i({ref:a},c))}));function y(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var s=t.length,i=new Array(s);i[0]=b;var o={};for(var d in a)hasOwnProperty.call(a,d)&&(o[d]=a[d]);o.originalType=e,o[p]="string"==typeof e?e:r,i[1]=o;for(var l=2;l<s;l++)i[l]=t[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}b.displayName="MDXCreateElement"},5493:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var n=t(7462),r=(t(7294),t(3905));const s={description:"All the MANY ways you can parse DSC files."},i="Parse dyld_shared_cache",o={unversionedId:"guides/dyld",id:"guides/dyld",title:"Parse dyld_shared_cache",description:"All the MANY ways you can parse DSC files.",source:"@site/docs/guides/dyld.md",sourceDirName:"guides",slug:"/guides/dyld",permalink:"/ipsw/docs/guides/dyld",draft:!1,editUrl:"https://github.com/blacktop/ipsw/tree/master/www/docs/guides/dyld.md",tags:[],version:"current",frontMatter:{description:"All the MANY ways you can parse DSC files."},sidebar:"docs",previous:{title:"Parse kernelcache",permalink:"/ipsw/docs/guides/kernel"},next:{title:"Parse OTAs",permalink:"/ipsw/docs/guides/ota"}},d={},l=[{value:"<strong>dyld info</strong>",id:"dyld-info",level:3},{value:"<strong>dyld image</strong>",id:"dyld-image",level:3},{value:"<strong>dyld extract</strong>",id:"dyld-extract",level:3},{value:"<strong>dyld macho</strong>",id:"dyld-macho",level:3},{value:"Print a dylibs load commands AND dump the ObjC runtime data",id:"print-a-dylibs-load-commands-and-dump-the-objc-runtime-data",level:4},{value:"Dump a dylib&#39;s header as JSON",id:"dump-a-dylibs-header-as-json",level:4},{value:"Search for byte pattern",id:"search-for-byte-pattern",level:4},{value:"<strong>dyld stubs</strong>",id:"dyld-stubs",level:3},{value:"<strong>dyld symaddr</strong>",id:"dyld-symaddr",level:3},{value:"<strong>dyld a2s</strong>",id:"dyld-a2s",level:3},{value:"<strong>dyld a2f</strong>",id:"dyld-a2f",level:3},{value:"<strong>dyld objc</strong>",id:"dyld-objc",level:3},{value:"Dump ObjC addresses",id:"dump-objc-addresses",level:4},{value:"<strong>dyld objc class</strong>",id:"dyld-objc-class",level:3},{value:"<strong>dyld objc proto</strong>",id:"dyld-objc-proto",level:3},{value:"<strong>dyld objc sel</strong>",id:"dyld-objc-sel",level:3},{value:"<strong>dyld split</strong>",id:"dyld-split",level:3},{value:"<strong>dyld webkit</strong>",id:"dyld-webkit",level:3},{value:"<strong>dyld patches</strong>",id:"dyld-patches",level:3},{value:"<strong>dyld slide</strong>",id:"dyld-slide",level:3},{value:"<strong>dyld str</strong>",id:"dyld-str",level:3},{value:"<strong>dyld swift</strong>",id:"dyld-swift",level:3},{value:"<strong>dyld a2o</strong>",id:"dyld-a2o",level:3},{value:"<strong>dyld o2a</strong>",id:"dyld-o2a",level:3},{value:"<strong>dyld disass</strong>",id:"dyld-disass",level:3},{value:"<strong>dyld imports</strong>",id:"dyld-imports",level:3},{value:"<strong>dyld xref</strong>",id:"dyld-xref",level:3},{value:"<strong>dyld tbd</strong>",id:"dyld-tbd",level:3},{value:"<strong>dyld dump</strong>",id:"dyld-dump",level:3}],c={toc:l};function p(e){let{components:a,...t}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"parse-dyld_shared_cache"},"Parse dyld_shared_cache"),(0,r.kt)("h3",{id:"dyld-info"},(0,r.kt)("strong",{parentName:"h3"},"dyld info")),(0,r.kt)("p",null,"Similar to ",(0,r.kt)("inlineCode",{parentName:"p"},"jtool -h -l dyld_shared_cache")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'\u276f ipsw dyld info -l -s dyld_shared_cache | head -n35\n\nHeader\n======\nMagic            = "dyld_v1  arm64e"\nUUID             = 92537455-A74B-3198-96CD-F2D2D2778315\nPlatform         = iOS\nFormat           = 10 (BuiltFromChainedFixups)\nMax Slide        = 0x33940000 (ASLR entropy: 16-bits)\n\nLocal Symbols (nlist array):     78MB,  offset:  0x62144260 -> 0x66F98340\nLocal Symbols (string pool):    256MB,  offset:  0x66F98340 -> 0x7701333B\nCode Signature:                   3MB,  offset:  0x77014000 -> 0x773D0000\nImagesText Info (2072 entries):  64KB,  offset:  0x00000300 -> 0x00010600\nSlide Info (v3):                  0KB,  offset:  0x00000000 -> 0x00000000\nBranch Pool:                      0MB,  offset:  0x00000000 -> 0x00000000\nAccelerate Tab:                   0KB,  address: 0x00000000 -> 0x00000000\nPatch Info:                     512KB,  address: 0x1E798654C -> 0x1E7A068BC\nClosures:                         6MB,  address: 0x1E7AE0000 -> 0x1E8129748\nClosures Trie:                   53KB,  address: 0x1E8129748 -> 0x1E8136D40\nShared Region:                    4GB,  address: 0x180000000 -> 0x280000000\n\nMappings\n========\n| SEG        | INITPROT | MAXPROT | SIZE    | ADDRESS                | FILE OFFSET          | SLIDE INFO OFFSET    | FLAGS |\n| ---------- | -------- | ------- | ------- | ---------------------- | -------------------- | -------------------- | ----- |\n| __TEXT     | r-x      | r-x     | 1222 MB | 180000000 -> 1CC6C0000 | 00000000 -> 4C6C0000 | 00000000 -> 00000000 | 0     |\n| __DATA     | rw-      | rw-     | 116 MB  | 1CE6C0000 -> 1D5B18000 | 4C6C0000 -> 53B18000 | 58CA4000 -> 58CB4000 | 0     |\n| __AUTH     | rw-      | rw-     | 81 MB   | 1D7B18000 -> 1DCCA4000 | 53B18000 -> 58CA4000 | 58CB8000 -> 58CC4000 | 1     |\n| __LINKEDIT | r--      | r--     | 148 MB  | 1DECA4000 -> 1E8138000 | 58CA4000 -> 62138000 | 00000000 -> 00000000 | 0     |\n\nCode Signature\n==============\nCode Directory (3963356 bytes)\n    Version:     ExecSeg\n    Flags:       Adhoc\n    CodeLimit:   0x78f24000\n    Identifier:  com.apple.dyld.cache.arm64e.release (@0x58)\n    TeamID:\n    CDHash:      7d32d18703679ac152a74ff872e38dda69339eabe29a0a6837861cec3d05de87 (computed)\n    # of hashes: 123849 code (16384 pages) + 2 special\n    Hashes @188 size: 32 Type: Sha256\nRequirement Set (12 bytes) with 1 requirement\n    0: 0x0 (@0, 12 bytes): empty requirement set\n\nImages\n======\n   1: 0x180045000 /usr/lib/system/libsystem_trace.dylib                                                           (1264.0.0)\n   2: 0x18005C000 /usr/lib/system/libxpc.dylib                                                                    (2001.0.0)\n   3: 0x180091000 /usr/lib/system/libsystem_blocks.dylib                                                          (76.0.0)\n   4: 0x180093000 /usr/lib/system/libsystem_c.dylib                                                               (1431.0.0)\n')),(0,r.kt)("admonition",{title:"note",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"We added the ",(0,r.kt)("inlineCode",{parentName:"p"},"-s")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"--sig")," flag to also parse the ",(0,r.kt)("em",{parentName:"p"},"CodeDirectory"),".")),(0,r.kt)("p",null,"You can also dump the ",(0,r.kt)("inlineCode",{parentName:"p"},"launch closures")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld info dyld_shared_cache --closures\n\nProg Closure Offsets\n====================\n0x1f1ec10f4     /usr/sbin/wifid\n0x1f1ebfe54     /usr/sbin/syslogd\n0x1f1ebda8c     /usr/sbin/spindump\n0x1f1ebad54     /usr/sbin/scutil\n0x1f1eb8d30     /usr/sbin/pppd\n0x1f1eb7de0     /usr/sbin/otctl\n0x1f1eb7818     /usr/sbin/nvram\n0x1f1eb6ab4     /usr/sbin/mediaserverd\n0x1f1eb24b8     /usr/sbin/mDNSResponder\n0x1f1eb612c     /usr/sbin/mDNSResponderHelper\n0x1f1eb197c     /usr/sbin/ipconfig\n0x1f1eb1240     /usr/sbin/hdik\n0x1f1eb02d8     /usr/sbin/fairplayd.H2\n0x1f1eaf770     /usr/sbin/ckksctl\n<SNIP>\n")),(0,r.kt)("p",null,"You can also dump the ",(0,r.kt)("inlineCode",{parentName:"p"},"dlopen image/bundle(s)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld info dyld_shared_cache --dlopen\n\ndlopen(s) Image/Bundle IDs\n==========================\n5004: /usr/lib/xpc/support.bundle/support\n5003: /usr/lib/libobjc-trampolines.dylib\n5002: /usr/lib/libffi-trampolines.dylib\n5001: /usr/lib/libCoreKE.dylib\n5000: /System/Library/VoiceServices/PlugIns/Base.vsplugin/Base\n4999: /System/Library/VideoProcessors/CCPortrait.bundle/CCPortrait\n4998: /System/Library/UserNotifications/Bundles/com.apple.tailspin.notifications.bundle/com.apple.tailspin.notifications\n4997: /System/Library/UserNotifications/Bundles/com.apple.studentd.notifications.bundle/com.apple.studentd.notifications\n4996: /System/Library/UserNotifications/Bundles/com.apple.reminders.bundle/com.apple.reminders\n4995: /System/Library/UserNotifications/Bundles/com.apple.iCloud.FollowUp.bundle/com.apple.iCloud.FollowUp\n4994: /System/Library/UserNotifications/Bundles/com.apple.donotdisturb.bundle/com.apple.donotdisturb\n<SNIP>\n")),(0,r.kt)("h3",{id:"dyld-image"},(0,r.kt)("strong",{parentName:"h3"},"dyld image")),(0,r.kt)("p",null,"To dump info from ",(0,r.kt)("inlineCode",{parentName:"p"},"dylibsImageArray"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"otherImageArray")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"progClosures")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld image dyld_shared_cache_arm64 CoreFoundation -V\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"ID:                4\nName:              /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation\nFlags:             objc|plus_loads|dylib|in_cache\nUUID:              5BBDEA97-01D2-30D8-8123-43118E96A409\nCache Segments:\n    offset: 0x00354000, size: 0x003ad000, perms: r-x\n    offset: 0x53130af0, size: 0x0021c370, perms: rw-\n    offset: 0x5334ce60, size: 0x00008530, perms: rw-\n    offset: 0x529ea080, size: 0x00007d88, perms: rw-\n    offset: 0x65d94000, size: 0x00093000, perms: r--\n    offset: 0x661a4000, size: 0x001a8000, perms: r--\n\nDependents:\n    reExport) /usr/lib/libobjc.dylib\n    regular ) /usr/lib/libicucore.dylib\n    regular ) /usr/lib/librpcsvc.dylib\n\nInit Order:\n    /usr/lib/system/libsystem_blocks.dylib\n    /usr/lib/system/libdispatch.dylib\n    /usr/lib/system/libxpc.dylib\n    /usr/lib/system/libsystem_trace.dylib\n    /usr/lib/librpcsvc.dylib\n    /usr/lib/libc++.dylib\n    /usr/lib/libobjc.dylib\n    /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation\n\nInitializers:\n    0x9de90\n\nDOF Offsets:\n    0x3a63a0\n    0x3a6d04\n")),(0,r.kt)("admonition",{title:"note",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"In macOS12+/iOS15+ caches replaced this data with ",(0,r.kt)("inlineCode",{parentName:"p"},"prebuilt loader sets")," which contain much of the same data and are still VERY powerful  ",(0,r.kt)("em",{parentName:"p"},"(this cmd outputs both types)"))),(0,r.kt)("h3",{id:"dyld-extract"},(0,r.kt)("strong",{parentName:"h3"},"dyld extract")),(0,r.kt)("p",null,"Extract dylib from ",(0,r.kt)("em",{parentName:"p"},"dyld_shared_cache")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld extract dyld_shared_cache_arm64e JavaScriptCore\n   \u2022 Created JavaScriptCore\n")),(0,r.kt)("p",null,"Extract all dylibs from ",(0,r.kt)("em",{parentName:"p"},"dyld_shared_cache")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld extract dyld_shared_cache_arm64e --all\n   \u2022 Extracting all dylibs from dyld_shared_cache_arm64e\n      \u2705  [=============================================================| 2700/2700 ]\n")),(0,r.kt)("admonition",{title:"note",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"This command allows you to extract dylibs on non-darwin systems and it will add all local symbols to the symbol table as well as apply the DSC slide info for the pages included in the dylib if you supply the ",(0,r.kt)("inlineCode",{parentName:"p"},"--slide")," flag ",(0,r.kt)("em",{parentName:"p"},"(this removes PACed pointers)"))),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"This command isn't \ud83d\udcaf done yet and is missing some features:"),(0,r.kt)("ul",{parentName:"admonition",className:"contains-task-list"},(0,r.kt)("li",{parentName:"ul",className:"task-list-item"},(0,r.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Repairing the ObjC runtime data"),(0,r.kt)("li",{parentName:"ul",className:"task-list-item"},(0,r.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Patching the stubs  "),(0,r.kt)("li",{parentName:"ul",className:"task-list-item"},(0,r.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","\ud83e\udd14 Create an ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/blacktop/ipsw/issues"},"issue")," if you find something else missing"))),(0,r.kt)("h3",{id:"dyld-macho"},(0,r.kt)("strong",{parentName:"h3"},"dyld macho")),(0,r.kt)("p",null,"Parse a cached ",(0,r.kt)("inlineCode",{parentName:"p"},"dylib")," MachO file"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld macho --help\nParse a dylib file\n\nUsage:\n  ipsw dyld macho <dyld_shared_cache> <dylib> [flags]\n\nFlags:\n  -a, --all             Parse ALL dylibs\n  -x, --extract         \ud83d\udea7 Extract the dylib\n      --force           Overwrite existing extracted dylib(s)\n  -h, --help            help for macho\n  -j, --json            Print the TOC as JSON\n  -l, --loads           Print the load commands\n  -o, --objc            Print ObjC info\n  -r, --objc-refs       Print ObjC references\n      --output string   Directory to extract the dylib(s)\n      --search string   Search for byte pattern\n  -f, --starts          Print function starts\n  -s, --strings         Print cstrings\n  -b, --stubs           Print stubs\n  -n, --symbols         Print symbols\n\nGlobal Flags:\n      --color           colorize output\n      --config string   config file (default is $HOME/.ipsw/config.yaml)\n  -V, --verbose         verbose output\n")),(0,r.kt)("h4",{id:"print-a-dylibs-load-commands-and-dump-the-objc-runtime-data"},"Print a dylibs load commands AND dump the ObjC runtime data"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld macho dyld_shared_cache JavaScriptCore --loads --objc\n\nMagic         = 64-bit MachO\nType          = Dylib\nCPU           = AARCH64, ARM64e caps: PAC00\nCommands      = 49 (Size: 6680)\nFlags         = NoUndefs, DyldLink, TwoLevel, NoReexportedDylibs, AppExtensionSafe, NlistOutofsyncWithDyldinfo, DylibInCache\n000: LC_SEGMENT_64 sz=0x0027d000 off=0x390d8000-0x39355000 addr=0x1b90d8000-0x1b9355000 r-x/r-x   __TEXT\n        sz=0x0022e8f4 off=0x390da674-0x39308f68 addr=0x1b90da674-0x1b9308f68            __TEXT.__text                   PureInstructions|SomeInstructions\n        sz=0x00001af0 off=0x39308f68-0x3930aa58 addr=0x1b9308f68-0x1b930aa58            __TEXT.__auth_stubs             PureInstructions|SomeInstructions (SymbolStubs)\n        sz=0x00004524 off=0x3930aa58-0x3930ef7c addr=0x1b930aa58-0x1b930ef7c            __TEXT.__objc_methlist\n<SNIP>\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-objc"},'0x001e39fc000 JSContext : NSObject {\n  // instance variables\n  +0x08 @"JSVirtualMachine" m_virtualMachine (0x8)\n  +0x10 ^{OpaqueJSContext=} m_context (0x8)\n  +0x18 {Strong<JSC::JSObject, JSC::ShouldStrongDestructorGrabLock::No>="m_slot"^{JSValue}} m_exception (0x8)\n  +0x20 {WeakObjCPtr<id<JSModuleLoaderDelegate> >="m_weakReference"@} m_moduleLoaderDelegate (0x8)\n  +0x28 @? _exceptionHandler (0x8)\n}\n\n @property (T@"JSValue",R) globalObject\n @property (T@"JSValue",&) exception\n @property (T@?,C,V_exceptionHandler) exceptionHandler\n @property (T@"JSVirtualMachine",R) virtualMachine\n @property (T@"NSString",C) name\n\n  // class methods\n  0x0018a04680c +[JSContext currentContext]\n  0x0018a046854 +[JSContext currentThis]\n  0x0018a0468e8 +[JSContext currentCallee]\n  0x00189e1b8d4 +[JSContext currentArguments]\n  0x00189e1b4f8 +[JSContext contextWithJSGlobalContextRef:]\n\n  // instance methods\n  0x0018a046afc -[JSContext _setRemoteInspectionEnabled:]\n  0x0018a046b1c -[JSContext _debuggerRunLoop]\n  0x00189e19ce4 -[JSContext wrapperForJSObject:]\n  0x0018a046b08 -[JSContext _includesNativeCallStackWhenReportingExceptions]\n  0x00189e1c908 -[JSContext exception]\n  0x00189e1ba58 -[JSContext objectForKeyedSubscript:]\n  0x00189e19294 -[JSContext evaluateScript:withSourceURL:]\n  0x00189e1b588 -[JSContext globalObject]\n  0x0018a046b44 -[JSContext exceptionHandler]\n  0x0018a0469dc -[JSContext setName:]\n  0x00189e1bb28 -[JSContext setException:]\n  0x00189e19eb4 -[JSContext wrapperForObjCObject:]\n  0x0018a046984 -[JSContext virtualMachine]\n  0x0018a046470 -[JSContext dependencyIdentifiersForModuleJSScript:]\n  0x0018a046b30 -[JSContext moduleLoaderDelegate]\n  0x0018a046b50 -[JSContext setExceptionHandler:]\n  0x0018a046cf4 -[JSContext valueFromNotifyException:]\n  0x00189e1c940 -[JSContext setObject:forKeyedSubscript:]\n  0x00189e19b48 -[JSContext dealloc]\n  0x0018a046b10 -[JSContext _setIncludesNativeCallStackWhenReportingExceptions:]\n  0x0018a046b38 -[JSContext setModuleLoaderDelegate:]\n  0x00189e19a98 -[JSContext initWithVirtualMachine:]\n  0x0018a046d44 -[JSContext boolFromNotifyException:]\n  0x0018a046bb0 -[JSContext initWithGlobalContextRef:]\n  0x0018a04698c -[JSContext name]\n  0x0018a046d68 -[JSContext wrapperMap]\n  0x00189e1c298 -[JSContext beginCallbackWithData:calleeValue:thisValue:argumentCount:arguments:]\n  0x00189e1c208 -[JSContext ensureWrapperMap]\n  0x0018a046c78 -[JSContext notifyException:]\n  0x00189e1ba44 -[JSContext evaluateScript:]\n  0x00189e19c88 -[JSContext init]\n  0x00189e1c900 -[JSContext .cxx_construct]\n  0x0018a0461e8 -[JSContext evaluateJSScript:]\n  0x0018a046b24 -[JSContext _setDebuggerRunLoop:]\n  0x0018a046b58 -[JSContext .cxx_destruct]\n  0x0018a04679c -[JSContext _setITMLDebuggableType]\n  0x00189e1ba30 -[JSContext JSGlobalContextRef]\n  0x00189e1baa0 -[JSContext endCallbackWithData:]\n  0x0018a046af4 -[JSContext _remoteInspectionEnabled]\n<SNIP>\n')),(0,r.kt)("admonition",{title:"note",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Make the output look amazing by piping to ",(0,r.kt)("inlineCode",{parentName:"p"},'bat -l m --tabs 0 -p --theme Nord --wrap=never --pager "less -S"'))),(0,r.kt)("h4",{id:"dump-a-dylibs-header-as-json"},"Dump a dylib's header as JSON"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld macho dyld_shared_cache_arm64e JavaScriptCore --json | jq . -C | less -Sr\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "header": {\n    "magic": "64-bit MachO",\n    "type": "DYLIB",\n    "cpu": "AARCH64, ARM64e caps: USR00",\n    "commands": 24,\n    "commands_size": 4736,\n    "flags": [\n      "NoUndefs",\n      "DyldLink",\n      "TwoLevel",\n      "BindsToWeak",\n      "NoReexportedDylibs",\n      "AppExtensionSafe",\n      "DylibInCache"\n    ]\n  },\n  "loads": [\n    {\n      "load_cmd": "LC_SEGMENT_64",\n      "len": 1112,\n      "name": "__TEXT",\n      "addr": 6885064704,\n      "memsz": 21749760,\n      "offset": 376832,\n      "filesz": 21749760,\n      "maxprot": "r-x",\n      "prot": "r-x",\n      "nsect": 13,\n      "sections": [\n        {\n          "name": "__text",\n          "segment": "__TEXT",\n          "addr": 6885070320,\n          "size": 20555936,\n          "offset": 382448,\n          "align": 4,\n          "reloff": 0,\n          "nreloc": 0,\n          "type": 64\n        },\n<SNIP>        \n')),(0,r.kt)("h4",{id:"search-for-byte-pattern"},"Search for byte pattern"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'\u276f ipsw dyld macho dyld_shared_cache_arm64e JavaScriptCore --search "7f 23 03 d5 * * * * f6 57 01 a9"\n\nSearch Results\n--------------\n0x199f25c80\n0x199f26804\n0x199f285c4\n0x199f286c4\n0x199f28860\n0x199f289d8\n0x199f2966c\n<SNIP>\n')),(0,r.kt)("h3",{id:"dyld-stubs"},(0,r.kt)("strong",{parentName:"h3"},"dyld stubs")),(0,r.kt)("p",null,"Print out the \ud83c\udd95 stubs islands"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld stubs dyld_shared_cache_arm64e | head\n   \u2022 Loading symbol cache file...\n0x199ce7640: _CMPhotoJPEGWriteMPFWithJPEG\n0x1ad5d5970: _objc_autorelease\n0x1c8d0f350: _$ss10_HashTableV12previousHole6beforeAB6BucketVAF_tF\n0x1cf7eba00: _$s5TeaUI14KeyCommandItemVMa\n0x1bb1f8a40: _swift_task_switch\n0x1ec2127d0: _CGColorGetColorSpace\n0x207434db0: __swift_stdlib_strtod_clocale\n0x1a0622e00: _objc_retain_x20\n0x1c1f87d30: _swift_getTupleTypeLayout3\n0x1bb220d70: _fcntl\n")),(0,r.kt)("h3",{id:"dyld-symaddr"},(0,r.kt)("strong",{parentName:"h3"},"dyld symaddr")),(0,r.kt)("p",null,"Find all instances of a symbol's ",(0,r.kt)("em",{parentName:"p"},"(unslid)")," addresses in shared cache"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld symaddr dyld_shared_cache <SYMBOL_NAME> --all\n")),(0,r.kt)("p",null,"Speed it up by supplying the dylib name"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld symaddr --image JavaScriptCore dyld_shared_cache <SYMBOL_NAME>\n")),(0,r.kt)("admonition",{title:"note",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"You don't have to supply the full image path")),(0,r.kt)("p",null,"Dump ALL teh symbolz!!!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld symaddr dyld_shared_cache\n")),(0,r.kt)("p",null,"Read in a JSON symbol lookup file"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'\u276f jq . sym_lookup.json\n[\n  {\n    "name": "__platform_memmove",\n    "image": "libsystem_platform.dylib"\n  },\n  {\n    "name": "_memcpy",\n    "image": "libsystem_c.dylib"\n  }\n]\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'\u276f ipsw dyld symaddr dyld_shared_cache --in sym_lookup.json | jq .\n[\n  {\n    "name": "__platform_memmove",\n    "image": "/usr/lib/system/libsystem_platform.dylib",\n    "address": 8351373904\n  },\n  {\n    "name": "_memcpy",\n    "image": "/usr/lib/system/libsystem_c.dylib",\n    "address": 8351373904\n  }\n]\n')),(0,r.kt)("h3",{id:"dyld-a2s"},(0,r.kt)("strong",{parentName:"h3"},"dyld a2s")),(0,r.kt)("p",null,"Lookup what symbol is at a given ",(0,r.kt)("em",{parentName:"p"},"unslid")," or ",(0,r.kt)("em",{parentName:"p"},"slid")," address ",(0,r.kt)("em",{parentName:"p"},"(in hex)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld a2s dyld_shared_cache_arm64e --slide 0x27010000 0x00000001bc39e1e0\n\n   \u2022 Address location          dylib=/usr/lib/libobjc.A.dylib section=__TEXT.__text\n\n0x19538e1e0: _objc_msgSend + 32\n")),(0,r.kt)("admonition",{title:"note",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"This will also create a cached version of the lookup hash table (.a2s) so the next time you lookup it will be much faster")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'\u276f time ipsw dyld a2s dyld_shared_cache 0x190a7221c\n   \u2022 parsing public symbols...\n   \u2022 parsing private symbols...\n0x190a7221c: _xmlCtxtGetLastError\n61.59s user 9.80s system 233% cpu "30.545 total"\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'\u276f time ipsw dyld a2s dyld_shared_cache 0x190a7221c\n0x190a7221c: _xmlCtxtGetLastError\n2.12s user 0.51s system 109% cpu "2.407 total"\n')),(0,r.kt)("h3",{id:"dyld-a2f"},(0,r.kt)("strong",{parentName:"h3"},"dyld a2f")),(0,r.kt)("p",null,"Lookup what function ",(0,r.kt)("em",{parentName:"p"},"(if any)")," contains a given ",(0,r.kt)("em",{parentName:"p"},"unslid")," or ",(0,r.kt)("em",{parentName:"p"},"slid")," address"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld a2f dyld_shared_cache_arm64e 0x1800980ac\n\n0x1800980ac: _dlsym (start: 0x1800980ac, end: 0x1800980e0)\n")),(0,r.kt)("p",null,"It can also take a file of pointers ",(0,r.kt)("em",{parentName:"p"},"(one per line)")," as input ",(0,r.kt)("em",{parentName:"p"},"(and will output results as JSON)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld a2f dyld_shared_cache_arm64e --in ptrs.txt \\\n   | jq '.[] | select(.name != null) | select(.name | contains(\"dlsym\"))'\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "addr": 6443073708,\n  "start": 6443073708,\n  "end": 6443073760,\n  "size": 52,\n  "name": "_dlsym",\n  "image": "libdyld.dylib"\n}\n')),(0,r.kt)("h3",{id:"dyld-objc"},(0,r.kt)("strong",{parentName:"h3"},"dyld objc")),(0,r.kt)("h4",{id:"dump-objc-addresses"},"Dump ObjC addresses"),(0,r.kt)("p",null,"Dump all the classes"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld objc --class dyld_shared_cache_arm64e\n\n0x2180bb240: APClientInfoUI             AdPlatformsCommonUI\n0x1dd4ccf40: FLFollowUpAction               CoreFollowUp\n0x1dd47d338: ProcessAnalytics               SymptomAnalytics\n0x1dda0ffb8: SBPosterBoardUpdateManager SpringBoard\n0x1ddfbca18: NEIPv6Settings             NetworkExtension\n0x2180bc130: QLExtension                   QuickLookSupport\n0x218898148: AXAlertAction                 AXSpringBoardServerInstance\n0x1dd606e98: _CPLOptimisticIDMapping       CloudPhotoLibrary\n0x2186ec0d8: AUGenericViewController       CoreAudioKit\n<SNIP>\n")),(0,r.kt)("p",null,"Dump all the protocols"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld objc --proto dyld_shared_cache\n\n0x1dd1489c8: NCNotificationListMigrationSchedulerDelegate   UserNotificationsUIKit\n0x1dd1d3688: SBSceneHandleObserverToken                   SpringBoardUI\n    0x1dd09f288: _SFDynamicBarAnimatorStateObserver SafariServices\n    0x1dd09f288: _SFDynamicBarAnimatorStateObserver MobileSafariUI\n0x1dd0a9608: IXCoordinatorWithInstallOptions       InstallCoordination\n0x1dd096288: SFCompanionServiceManagerProtocol  Sharing\n0x1dd0a8ee8: ATXEngagementRecordManagerProtocol AppPredictionClient\n    0x1dd121368: WFParameterEventObserver   WorkflowKit\n    0x1dd121368: WFParameterEventObserver   WorkflowEditor\n    0x1dd121368: WFParameterEventObserver   WorkflowEditor\n")),(0,r.kt)("p",null,"Dump all the selectors"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'\u276f ipsw dyld objc --sel dyld_shared_cache\n\n0x18307bd68: rtiDocumentState\n0x18527926c: _grabUserActivityTitleWithCallback:\n0x1856042a9: deleteHistoryWithCompletion:\n0x185017e2f: releaseViewManager\n0x182e62aa2: getAssetPathForLocale:\n0x183c89b23: T@"AVMomentCaptureMovie",&,N,V_movie\n')),(0,r.kt)("p",null,"Dump all the imp-caches"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld objc --imp-cache dyld_shared_cache\n")),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"--imp-cache")," NOT supported on macOS12/iOS15+ ",(0,r.kt)("em",{parentName:"p"},"(yet)"))),(0,r.kt)("h3",{id:"dyld-objc-class"},(0,r.kt)("strong",{parentName:"h3"},"dyld objc class")),(0,r.kt)("p",null,"Lookup a class's address ",(0,r.kt)("em",{parentName:"p"},"(same as ",(0,r.kt)("inlineCode",{parentName:"em"},"ipsw dyld objc --class"),")")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld objc class dyld_shared_cache release\n\n0x1b92c85a8: release\n")),(0,r.kt)("p",null,"Or get all the classes for an image"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld objc class --image libobjc.A.dylib dyld_shared_cache\n")),(0,r.kt)("h3",{id:"dyld-objc-proto"},(0,r.kt)("strong",{parentName:"h3"},"dyld objc proto")),(0,r.kt)("p",null,"Lookup a protocol's address ",(0,r.kt)("em",{parentName:"p"},"(same as ",(0,r.kt)("inlineCode",{parentName:"em"},"ipsw dyld objc --proto"),")")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld objc proto dyld_shared_cache release\n\n0x1b92c85a8: release\n")),(0,r.kt)("h3",{id:"dyld-objc-sel"},(0,r.kt)("strong",{parentName:"h3"},"dyld objc sel")),(0,r.kt)("p",null,"Lookup a selector's address ",(0,r.kt)("em",{parentName:"p"},"(same as ",(0,r.kt)("inlineCode",{parentName:"em"},"ipsw dyld objc --sel"),")")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld objc sel dyld_shared_cache release\n\n0x1b92c85a8: release\n")),(0,r.kt)("p",null,"Or get all the selectors for an image"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld objc sel --image libobjc.A.dylib iPhone12,1_N104AP_18A5319i/dyld_shared_cache\n\nObjective-C Selectors:\n/usr/lib/libobjc.A.dylib\n    0x1c9dcc5fd: instanceMethodSignatureForSelector:\n    0x1c8f14de2: instanceMethodForSelector:\n    0x1c9d3be7d: instancesRespondToSelector:\n    0x1c8f113e9: isAncestorOfObject:\n    0x1c9e91b48: isSubclassOfClass:\n    0x1c90fe47d: name\n    0x1c9aa0937: descriptionForClassMethod:\n    0x1c9a01891: descriptionForInstanceMethod:\n    0x1c9aaf8c2: conformsTo:\n    0x1c8ef287d: \ud83e\udd2f <========== WTF??\n    0x1c93562fd: release\n    0x1c9b2c9fd: initialize\n<SNIP>\n")),(0,r.kt)("h3",{id:"dyld-split"},(0,r.kt)("strong",{parentName:"h3"},"dyld split")),(0,r.kt)("p",null,"Split up a ",(0,r.kt)("em",{parentName:"p"},"dyld_shared_cache")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld split dyld_shared_cache .\n   \u2022 Splitting dyld_shared_cache\n\n0/1445\n1/1445\n2/1445\n3/1445\n<SNIP>\n1441/1445\n1442/1445\n1443/1445\n1444/1445\n")),(0,r.kt)("p",null,"To use an specific version of XCode"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld split dyld_shared_cache_arm64e --xcode ~/Downloads/Xcode_12.5.1.app\n")),(0,r.kt)("p",null,"To create a ",(0,r.kt)("inlineCode",{parentName:"p"},"~/Library/Developer/Xcode/iOS DeviceSupport/")," folder from a ",(0,r.kt)("em",{parentName:"p"},"dyld_shared_cache")," to symbolicate a remote ",(0,r.kt)("inlineCode",{parentName:"p"},"lldb")," session"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld split dyld_shared_cache_arm64e --cache --version 16.3 --build 20D5035i\n   \u2022 Splitting dyld_shared_cache to ~/Library/Developer/Xcode/iOS DeviceSupport/16.3 (20D5035i) arm64e\n   \u2022 Creating XCode cache ~/Library/Developer/Xcode/iOS DeviceSupport/16.3 (20D5035i) arm64e/Info.plist\n0/2700\n1/2700\n2/2700\n3/2700\n4/2700\n5/2700\n6/2700\n7/2700\n8/2700\n<SNIP>\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'\u276f ls -1 ~/Library/Developer/Xcode/iOS\\ DeviceSupport/\n14.4.1 (18D61)\n14.4.2 (18D70)\n16.0 (20A5303i) arm64e\n16.0 (20A5328h) arm64e\n16.0 (20A5339d) arm64e\n"16.3 (20D5035i) arm64e" \ud83d\udc40\n')),(0,r.kt)("admonition",{title:"note",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"This commnd calls into XCode's ",(0,r.kt)("inlineCode",{parentName:"p"},"dsc_extractor.bundle")," so will ALWAYS work as long as your have a recent version of XCode installed")),(0,r.kt)("admonition",{title:"note",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"If you are on a ",(0,r.kt)("strong",{parentName:"p"},"non-darwin")," system use the ",(0,r.kt)("inlineCode",{parentName:"p"},"ipsw dyld extract")," command instead.  You can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"ipsw dyld extract")," command on ",(0,r.kt)("strong",{parentName:"p"},"darwin")," systems as well, however, it will be slower than using the ",(0,r.kt)("inlineCode",{parentName:"p"},"dsc_extractor.bundle")," based ",(0,r.kt)("inlineCode",{parentName:"p"},"ipsw dyld split")," command and ",(0,r.kt)("em",{parentName:"p"},"(for now)")," only improves on the output by also applying the DSC slide-info if you use the ",(0,r.kt)("inlineCode",{parentName:"p"},"--slide")," flag.  Eventually ",(0,r.kt)("inlineCode",{parentName:"p"},"ipsw dyld extract")," will be able to create ",(0,r.kt)("strong",{parentName:"p"},"near")," perfect dylib extractions and will be the preferred command and this one will only be useful when Apple releases the next major OS version and inevitably breaks everyones DSC parsing \ud83d\ude0f again, but you can count on ",(0,r.kt)("inlineCode",{parentName:"p"},"ipsw")," to once again be the FIRST to figure it out again \ud83d\ude01")),(0,r.kt)("h3",{id:"dyld-webkit"},(0,r.kt)("strong",{parentName:"h3"},"dyld webkit")),(0,r.kt)("p",null,"Extract WebKit version from ",(0,r.kt)("em",{parentName:"p"},"dyld_shared_cache")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld webkit dyld_shared_cache_arm64e\n   \u2022 WebKit Version: 614.4.4.0.3\n")),(0,r.kt)("h3",{id:"dyld-patches"},(0,r.kt)("strong",{parentName:"h3"},"dyld patches")),(0,r.kt)("p",null,"List dyld patch info"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld patches dyld_shared_cache_arm64e\n[PATCHES] /usr/lib/libobjc.A.dylib  (258 symbols)\n0x1800c799c: _class_respondsToSelector\n    0x1de608458: (diversity: 0x0000, key: IA, auth: true) /usr/lib/swift/libswiftCore.dylib\n    0x1de667330: (diversity: 0x0000, key: IA, auth: true) /System/Library/Frameworks/Foundation.framework/Foundation\n    0x1de6a66b8: (diversity: 0x0000, key: IA, auth: true) /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation\n    0x1de7e38f8: (diversity: 0x0000, key: IA, auth: true) /System/Library/Frameworks/CoreData.framework/CoreData\n    0x1dec4ef48: (diversity: 0x0000, key: IA, auth: true) /System/Library/PrivateFrameworks/GameCenterUI.framework/GameCenterUI\n    0x1def62d30: (diversity: 0x0000, key: IA, auth: true) /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation\n    0x1df072928: (diversity: 0x0000, key: IA, auth: true) /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit\n    0x1e234a1c8: (diversity: 0x0000, key: IA, auth: true) GOT\n    0x21a88fce8: (diversity: 0x0000, key: IA, auth: true) GOT\n0x1800bec28: _objc_setProperty_nonatomic\n    0x1de667bd0: (diversity: 0x0000, key: IA, auth: true) /System/Library/Frameworks/Foundation.framework/Foundation\n    0x1de7e3e70: (diversity: 0x0000, key: IA, auth: true) /System/Library/Frameworks/CoreData.framework/CoreData\n    0x1de84b178: (diversity: 0x0000, key: IA, auth: true) /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities\n    0x1de9e0da0: (diversity: 0x0000, key: IA, auth: true) /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities\n    0x1e06c5ac0: (diversity: 0x0000, key: IA, auth: true) /System/Library/PrivateFrameworks/CoreUI.framework/CoreUI\n    0x1deaa96c0: (diversity: 0x0000, key: IA, auth: true) /System/Library/PrivateFrameworks/Message.framework/Message\n<SNIP>    \n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld patches dyld_shared_cache_arm64e -i libdyld.dylib\n[PATCHES] /usr/lib/system/libdyld.dylib (98 symbols)\n0x1a81ccbf4: __dyld_find_protocol_conformance_on_disk\n    0x1de608270: (key: IA, auth: true)                    /usr/lib/swift/libswiftCore.dylib\n    0x1de6083a8: (diversity: 0x0000, key: IA, auth: true) /usr/lib/swift/libswiftCore.dylib\n0x1a81caf30: _dlopen_preflight\n    0x1de6a6888: (diversity: 0x0000, key: IA, auth: true) /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation\n    0x218ed9bc8: (diversity: 0x0000, key: IA, auth: true) /System/Library/PrivateFrameworks/DVTInstrumentsFoundation.framework/DVTInstrumentsFoundation\n    0x1e2304f18: (diversity: 0x0000, key: IA, auth: true) GOT\n0x1a81ca71c: _dyld_image_header_containing_address\n    0x1e2304fb0: (diversity: 0x0000, key: IA, auth: true) GOT\n    0x1e23085d0: (diversity: 0x0000, key: IA, auth: true) GOT\n    0x1e2304fb0: (diversity: 0x0000, key: IA, auth: true) GOT\n    0x1e23085d0: (diversity: 0x0000, key: IA, auth: true) GOT\n    0x1e2304fb0: (diversity: 0x0000, key: IA, auth: true) GOT\n<SNIP>    \n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld patches dyld_shared_cache_arm64e -i libdyld.dylib -s _dlopen | head\n0x1a81cada8: _dlopen\n    0x1de667530: (diversity: 0x0000, key: IA, auth: true) /System/Library/Frameworks/Foundation.framework/Foundation\n    0x1de6a6880: (diversity: 0x0000, key: IA, auth: true) /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation\n    0x1de6bbed0: (diversity: 0x0000, key: IA, auth: true) /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics\n    0x1de7ac910: (diversity: 0x0000, key: IA, auth: true) /System/Library/Frameworks/SwiftUI.framework/SwiftUI\n    0x1de7e3a88: (diversity: 0x0000, key: IA, auth: true) /System/Library/Frameworks/CoreData.framework/CoreData\n    0x1de816db8: (diversity: 0x0000, key: IA, auth: true) /System/Library/Frameworks/ContactsUI.framework/ContactsUI\n    0x1de84ae68: (diversity: 0x0000, key: IA, auth: true) /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities\n    0x1de885910: (diversity: 0x0000, key: IA, auth: true) /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices\n    0x1de8e0620: (diversity: 0x0000, key: IA, auth: true) /System/Library/Frameworks/Contacts.framework/Contacts\n")),(0,r.kt)("h3",{id:"dyld-slide"},(0,r.kt)("strong",{parentName:"h3"},"dyld slide")),(0,r.kt)("p",null,"Dump ",(0,r.kt)("em",{parentName:"p"},"dyld_shared_cache")," slide info"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld slide dyld_shared_cache_arm64e\n\nslide info version = 3\npage_size          = 4096\npage_starts_count  = 11956\nauth_value_add     = 0x0000000180000000\npage[    0]: start=0x0000\n    [    0 + 0x0000] (0x1d1e48000 @ offset 0x4fe48000 => 0x1d70dabb8) value: 0x1d70dabb8, next: 01, sym: __DefaultRuneLocale\n    [    0 + 0x0008] (0x1d1e48008 @ offset 0x4fe48008 => 0x2028f50e0) value: 0x2028f50e0, next: 01, sym: _OBJC_CLASS_$___NSStackBlock__\n    [    0 + 0x0018] (0x1d1e48010 @ offset 0x4fe48010 => 0x1d9a3dc60) value: 0x1d9a3dc60, next: 01, sym: ___stack_chk_guard\n    [    0 + 0x0030] (0x1d1e48018 @ offset 0x4fe48018 => 0x1d70da940) value: 0x1d70da940, next: 01, sym: ___stderrp\n    [    0 + 0x0050] (0x1d1e48020 @ offset 0x4fe48020 => 0x1db4ecc20) value: 0x1db4ecc20, next: 01, sym: __dispatch_source_type_mach_recv\n    [    0 + 0x0078] (0x1d1e48028 @ offset 0x4fe48028 => 0x191eb91dc) value: 0x191eb91dc, next: 01, sym: _free\n    [    0 + 0x00A8] (0x1d1e48030 @ offset 0x4fe48030 => 0x1d9a3c02c) value: 0x1d9a3c02c, next: 01, sym: _mach_task_self_\n    [    0 + 0x00E0] (0x1d1e48038 @ offset 0x4fe48038 => 0x1d9a3c048) value: 0x1d9a3c048, next: 01, sym: _vm_page_size\n    [    0 + 0x0120] (0x1d1e48040 @ offset 0x4fe48040 => 0x1800a087c) value: 0x1800a087c, next: 01, sym: ?\n    [    0 + 0x0168] (0x1d1e48048 @ offset 0x4fe48048 => 0x1800a0855) value: 0x1800a0855, next: 03, sym: ?\n    [    0 + 0x01C8] (0x1d1e48060 @ offset 0x4fe48060 => 0x1800a0958) value: 0x1800a0958, next: 04, sym: ?\n    [    0 + 0x0248] (0x1d1e48080 @ offset 0x4fe48080 => 0x1800a0958) value: 0x1800a0958, next: 04, sym: ?\n    [    0 + 0x02E8] (0x1d1e480a0 @ offset 0x4fe480a0 => 0x1800a0958) value: 0x1800a0958, next: 04, sym: ?\n<SNIP>\n")),(0,r.kt)("p",null,"Dump slide info as JSON"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld slide dyld_shared_cache_arm64e --json \\\n   | jq '.[] | select(.pointer.authenticated == true and .pointer.key == \"DA\")'\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "cache_file_offset": 1446288864,\n  "cache_vm_address": 7955848672,\n  "target": 7955848672,\n  "pointer": {\n    "value": 1524890997136864,\n    "next": 1,\n    "diversity": 27361,\n    "addr_div": true,\n    "key": "DA",\n    "authenticated": true\n  }\n}\n<SNIP>\n')),(0,r.kt)("h3",{id:"dyld-str"},(0,r.kt)("strong",{parentName:"h3"},"dyld str")),(0,r.kt)("p",null,"Scan ",(0,r.kt)("em",{parentName:"p"},"dyld_shared_cache")," for strings"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'\u276f ipsw dyld str dyld_shared_cache_arm64e --pattern "fuck"\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'0x1bae9dfe4: (DialogEngine) "fucking"\n0x1bae9dff4: (DialogEngine) "fuckar"\n0x1bae9fc8b: (DialogEngine) "motherfucker"\n0x1baea059e: (DialogEngine) "fuckfinger"\n<SNIP>\n0x1e1d8afb8: (DifferentialPrivacy)  "motherfucker"\n0x1e1d8bdd8: (DifferentialPrivacy)  "mindfucker"\n0x1e1d8bdf8: (DifferentialPrivacy)  "mindfuck"\n0x1ec0dcf66: (ResponseKit)  "what the fuck"\n0x2195d9728: (ResponseKit)  "what the fuck"\n<SNIP>\n')),(0,r.kt)("p",null,"\ud83e\udee2 daaaaang Apple's got a real potty mouth \ud83d\ude0f "),(0,r.kt)("admonition",{title:"note",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"--pattern")," option supports regex and for some reason is the fastest way to search for strings in the cache. I'm not sure why, but it's faster than ",(0,r.kt)("inlineCode",{parentName:"p"},"str1 == str2")," comparison \ud83e\udd37\u200d\u2642\ufe0f")),(0,r.kt)("h3",{id:"dyld-swift"},(0,r.kt)("strong",{parentName:"h3"},"dyld swift")),(0,r.kt)("p",null,"Dump Swift Optimizations Info ",(0,r.kt)("em",{parentName:"p"},"(",(0,r.kt)("inlineCode",{parentName:"em"},"type")," conformances, ",(0,r.kt)("inlineCode",{parentName:"em"},"foreign")," type conformances and ",(0,r.kt)("inlineCode",{parentName:"em"},"metadata")," conformances)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld swift dyld_shared_cache_arm64e --demangle --types\n   \u2022 Loading symbol cache file...\n0x4060a8: type_descriptor: 0x4c54ff9c, protocol: 0x118cd50, proto_conformance: 0x4c54ffb8, dylib_objc_index: 707\n    0x1cc54ff9c: T n/a                                                  NewsAnalytics\n    0x18118cd50: P protocol descriptor for CustomDebugStringConvertible libswiftCore.dylib\n    0x1cc54ffb8: C n/a                                                  NewsAnalytics\n0x22ded8: type_descriptor: 0x1414227c, protocol: 0x1189df4, proto_conformance: 0x14142398, dylib_objc_index: 72\n    0x19414227c: T n/a                               libVFXCore.dylib\n    0x181189df4: P protocol descriptor for Equatable libswiftCore.dylib\n    0x194142398: C n/a                               libVFXCore.dylib\n0x22e058: type_descriptor: 0x14142510, protocol: 0x11884fc, proto_conformance: 0x1414259c, dylib_objc_index: 72\n    0x194142510: T n/a                                      libVFXCore.dylib\n<SNIP>    \n")),(0,r.kt)("admonition",{title:"note",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"--demangle")," option is only avabile on ",(0,r.kt)("strong",{parentName:"p"},"darwin")," hosts for now, as it calls into a dylib.")),(0,r.kt)("h3",{id:"dyld-a2o"},(0,r.kt)("strong",{parentName:"h3"},"dyld a2o")),(0,r.kt)("p",null,"Convert ",(0,r.kt)("em",{parentName:"p"},"dyld_shared_cache")," address to offset"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'\u276f ipsw dyld a2o dyld_shared_cache_arm64e 0x1D7B18000\n   \u2022 Offset  dec=37994496 ext=".27.dylddata" hex=0x243c000 mapping=__LINKEDIT stubs=false uuid=DC237E9C-4500-345E-8C4B-54F12BE73741\n')),(0,r.kt)("h3",{id:"dyld-o2a"},(0,r.kt)("strong",{parentName:"h3"},"dyld o2a")),(0,r.kt)("p",null,"Convert ",(0,r.kt)("em",{parentName:"p"},"dyld_shared_cache")," offset to address"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'\u276f ipsw dyld o2a dyld_shared_cache_arm64e 0x243c000\n   \u2022 dyld4 cache with stub islands detected (will search within dyld_subcache_entry cacheVMOffsets)\n   \u2022 Address  dec=6480445440 ext=".01" hex=0x18243c000 mapping=__TEXT stubs=false uuid=836E3AA5-1E8F-38F9-AFC5-60DF76027BAD\n')),(0,r.kt)("h3",{id:"dyld-disass"},(0,r.kt)("strong",{parentName:"h3"},"dyld disass")),(0,r.kt)("p",null,"Disassemble a function in the ",(0,r.kt)("em",{parentName:"p"},"dyld_shared_cache")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld disass dyld_shared_cache_arm64e --symbol _NSLog\n   \u2022 Found dyld_shared_cache companion symbol map file...\n   \u2022 Locating symbol: _NSLog\n   \u2022 Found symbol              dylib=/System/Library/Frameworks/Foundation.framework/Foundation\n   \u2022 Parsing ObjC runtime structures...\n")),(0,r.kt)("admonition",{title:"note",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"You can speed up symbol lookups by supplying the ",(0,r.kt)("inlineCode",{parentName:"p"},"--image")," flag or you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"--vaddr")," flag")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-armasm"},"_NSLog:\n0x181bac214:  7f 23 03 d5   pacibsp\n0x181bac218:  ff 83 00 d1   sub sp, sp, #0x20\n0x181bac21c:  fd 7b 01 a9   stp x29, x30, [sp, #0x10]\n0x181bac220:  fd 43 00 91   add x29, sp, #0x10\n0x181bac224:  28 e9 2b f0   adrp    x8, 0x1d98d3000\n0x181bac228:  08 45 41 f9   ldr x8, [x8, #0x288] ; __got.___stack_chk_guard\n0x181bac22c:  08 01 40 f9   ldr x8, [x8]\n0x181bac230:  e8 07 00 f9   str x8, [sp, #0x8]\n0x181bac234:  a8 43 00 91   add x8, x29, #0x10\n0x181bac238:  e8 03 00 f9   str x8, [sp]\n0x181bac23c:  e2 03 1e aa   mov x2, x30\n0x181bac240:  e2 43 c1 da   xpaci   x2\n0x181bac244:  a1 43 00 91   add x1, x29, #0x10\n0x181bac248:  2a 22 00 94   bl  __NSLogv\n0x181bac24c:  e8 07 40 f9   ldr x8, [sp, #0x8]\n0x181bac250:  29 e9 2b f0   adrp    x9, 0x1d98d3000\n0x181bac254:  29 45 41 f9   ldr x9, [x9, #0x288] ; __got.___stack_chk_guard\n0x181bac258:  29 01 40 f9   ldr x9, [x9]\n0x181bac25c:  3f 01 08 eb   cmp x9, x8\n0x181bac260:  81 00 00 54   b.ne    loc_181bac270 ; \u2935 0x10\n0x181bac264:  fd 7b 41 a9   ldp x29, x30, [sp, #0x10]\n0x181bac268:  ff 83 00 91   add sp, sp, #0x20\n0x181bac26c:  ff 0f 5f d6   retab\n0x181bac270:  ; loc_181bac270\n0x181bac270:  3e 85 93 97   bl  j____stack_chk_fail\n")),(0,r.kt)("admonition",{title:"note",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Make the output look amazing by adding the ",(0,r.kt)("inlineCode",{parentName:"p"},"--color")," flag \ud83c\udf08")),(0,r.kt)("h3",{id:"dyld-imports"},(0,r.kt)("strong",{parentName:"h3"},"dyld imports")),(0,r.kt)("p",null,"List all dylibs that import/load a given dylib in the ",(0,r.kt)("em",{parentName:"p"},"dyld_shared_cache")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld imports dyld_shared_cache JavaScriptCore\n\nJavaScriptCore Imported By:\n===========================\n\nIn DSC (Dylibs)\n---------------\n/System/Library/PrivateFrameworks/WebGPU.framework/WebGPU\n/System/Library/PrivateFrameworks/WebCore.framework/WebCore\n/System/Library/Frameworks/WebKit.framework/WebKit\n/System/Library/PrivateFrameworks/JetEngine.framework/JetEngine\n/System/Library/Frameworks/SafariServices.framework/SafariServices\n/System/Library/PrivateFrameworks/SafariShared.framework/SafariShared\n/System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI\n/System/Library/PrivateFrameworks/JetUI.framework/JetUI\n/System/Library/PrivateFrameworks/ProVideo.framework/ProVideo\n/System/Library/PrivateFrameworks/StoreKitUI.framework/StoreKitUI\n/System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit\n/System/Library/PrivateFrameworks/SeymourServices.framework/SeymourServices\n/System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount\n/System/Library/PrivateFrameworks/MobileSafariUI.framework/MobileSafariUI\n/System/Library/PrivateFrameworks/WebKitLegacy.framework/WebKitLegacy\n/System/Library/PrivateFrameworks/AppStoreKit.framework/AppStoreKit\n/System/Library/PrivateFrameworks/AppStoreKitInternal.framework/AppStoreKitInternal\n/System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit\n/System/Library/PrivateFrameworks/VideosUI.framework/VideosUI\n/System/Library/PrivateFrameworks/TelephonyPreferences.framework/TelephonyPreferences\n/System/Library/PrivateFrameworks/CoreChart.framework/CoreChart\n/System/Library/PrivateFrameworks/RemoteUI.framework/RemoteUI\n/System/Library/PrivateFrameworks/MetricsKit.framework/MetricsKit\n/System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks\n/System/Library/PrivateFrameworks/WebUI.framework/WebUI\n/System/Library/PrivateFrameworks/CommunicationsSetupUI.framework/CommunicationsSetupUI\n/System/Library/PrivateFrameworks/TuriCore.framework/TuriCore\n/System/Library/PrivateFrameworks/Cards.framework/Cards\n/System/Library/PrivateFrameworks/WebInspector.framework/WebInspector\n/System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI\n/System/Library/PrivateFrameworks/MailWebProcessSupport.framework/MailWebProcessSupport\n/System/Library/PrivateFrameworks/JITAppKit.framework/JITAppKit\n/System/Library/PrivateFrameworks/MusicUI.framework/MusicUI\n/System/Library/PrivateFrameworks/TVMLKit.framework/TVMLKit\n/System/Library/PrivateFrameworks/WorkflowEditor.framework/WorkflowEditor\n/System/Library/PrivateFrameworks/MobileSafari.framework/PlugIns/Safari.wkbundle/Safari\n/System/Library/PrivateFrameworks/SlideshowKit.framework/Frameworks/OpusKit.framework/OpusKit\n/System/Library/PrivateFrameworks/AirPlayKit.framework/AirPlayKit\n/System/Library/PrivateFrameworks/TouchML.framework/TouchML\n/System/Library/PrivateFrameworks/ActionKit.framework/ActionKit\n/System/Library/PrivateFrameworks/WebApp.framework/WebApp\n/System/Library/PrivateFrameworks/WebSheet.framework/WebSheet\n/System/Library/PrivateFrameworks/VideoSubscriberAccountUI.framework/VideoSubscriberAccountUI\n\nIn FileSystem DMG (Apps)\n------------------------\n/Applications/DataActivation.app/DataActivation\n/Applications/MTLReplayer.app/MTLReplayer\n/Applications/VideoSubscriberAccountViewService.app/VideoSubscriberAccountViewService\n/System/Library/PrivateFrameworks/ActionPredictionHeuristics.framework/XPCServices/HeuristicInterpreter.xpc/HeuristicInterpreter\n/System/Library/PrivateFrameworks/AppStoreComponents.framework/Support/appstorecomponentsd\n/System/Library/PrivateFrameworks/AppleMediaServicesUI.framework/amsengagementd\n/System/Library/PrivateFrameworks/AppleMediaServicesUIDynamic.framework/XPCServices/AppleMediaServicesUIDynamicService.xpc/AppleMediaServicesUIDynamicService\n/System/Library/PrivateFrameworks/VideoSubscriberAccountUI.framework/PlugIns/VideoSubscriberAccountAuthenticationExtension.appex/VideoSubscriberAccountAuthenticationExtension\n/cdhash/0254faebce8593aaefd5db2b95696a33ff3c9880 (/usr/libexec/proactiveeventtrackerd)\n/cdhash/0361ef8633f63f58a344a1f6b44a5883229d11a1 (/Applications/DataActivation.app/DataActivation)\n/cdhash/25ef8201f35f9244c6c8ca460cd894cef7b9b86d (/System/Library/PrivateFrameworks/VideoSubscriberAccountUI.framework/PlugIns/VideoSubscriberAccountAuthenticationExtension.appex/VideoSubscriberAccountAuthenticationExtension)\n/cdhash/3b863c1ce76a2c31a12a8983c80a139a44d67516 (/System/Library/PrivateFrameworks/AppleMediaServicesUIDynamic.framework/XPCServices/AppleMediaServicesUIDynamicService.xpc/AppleMediaServicesUIDynamicService)\n/cdhash/4f9e0310bc4ed6f771eed1bcefa383961edfa57b (/System/Library/PrivateFrameworks/ActionPredictionHeuristics.framework/XPCServices/HeuristicInterpreter.xpc/HeuristicInterpreter)\n/cdhash/52afe0df81978225c8408fb42adbd722f4fcced3 (/System/Library/PrivateFrameworks/AppleMediaServicesUI.framework/amsengagementd)\n/cdhash/83198ea295da0df64f43a5379433448f401a8a52 (/Applications/MTLReplayer.app/MTLReplayer)\n/cdhash/8722d3a31074cf78f16d3d50000c237fffb7072e (/Applications/VideoSubscriberAccountViewService.app/VideoSubscriberAccountViewService)\n/cdhash/d87d78b5f59981e4bcbcf13368cd90985da78b76 (/System/Library/PrivateFrameworks/AppStoreComponents.framework/Support/appstorecomponentsd)\n/usr/libexec/proactiveeventtrackerd\n")),(0,r.kt)("admonition",{title:"note",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Notice we also got the filesystem's binaries that import that dylib??? That's due to the POWER \ud83d\udcaa of ",(0,r.kt)("inlineCode",{parentName:"p"},"prebuilt loader sets")," \ud83d\ude0e")),(0,r.kt)("h3",{id:"dyld-xref"},(0,r.kt)("strong",{parentName:"h3"},"dyld xref")),(0,r.kt)("p",null,"List all the cross-references in the ",(0,r.kt)("em",{parentName:"p"},"dyld_shared_cache")," for a given virtual address"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld symaddr dyld_shared_cache_arm64e _NSLog\n0x1813450bc:    (local|regular) _NSLog  Foundation\n0x1813450bc:    (symtab|external|__TEXT.__text) _NSLog  Foundation\n")),(0,r.kt)("p",null,"Search the dylib that the symbol is in by default"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld xref dyld_shared_cache_arm64e 0x1813450bc\n   \u2022 parsing public symbols...\n   \u2022 parsing private symbols...\n   \u2022 parsing stub islands...  \n   \u2022 Searching for xrefs (use -V for more progess output)\n   \u2022 XREFS                     dylib=Foundation sym=_NSLog xrefs=314\n\n0x1818e4d8c: -[NSFileVersion setResolved:] + 120\n0x1812a5228: -[NSString rangeOfString:options:range:locale:] + 196\n0x1818e2400: ___36-[NSFileSubarbitrationClaim granted]_block_invoke.71 + 20\n0x1817f3b8c: ___52-[NSExtensionItem _matchingDictionaryRepresentation]_block_invoke + 440\n0x181330ad4: -[NSFileCoordinator(NSPrivate) _blockOnAccessClaim:withAccessArbiter:] + 320\n0x18137e384: ___51-[NSBackgroundActivityScheduler scheduleWithBlock:]_block_invoke + 400\n0x1818259b0: -[NSPlaceholderMutableString initWithCString:encoding:] + 124\n0x181869b70: -[__NSConcreteURLComponents setPercentEncodedQueryItems:] + 304\n0x1812b88e0: -[NSPlaceholderString initWithBytes:length:encoding:] + 112\n0x1813036a8: -[NSString(NSPathUtilities) stringByAppendingPathExtension:] + 532\n0x181874ad4: -[NSPlaceholderValue getValue:] + 36\n0x18188c088: -[NSCorrectionCheckingResult initWithCoder:] + 264\n0x1812fd1e8: -[NSThread start] + 260\n0x1817d48f8: -[NSMutableCharacterSet invert] + 60\n0x1817cb6f8: -[NSBigMutableString _createSubstringWithRange:] + 156\n0x181808e84: ___62-[NSURL(NSURLPromisedItems) _valueFromFaultDictionary:forKey:]_block_invoke + 112\n0x1818257bc: -[NSPlaceholderMutableString initWithBytesNoCopy:length:encoding:freeWhenDone:] + 104\n0x181838c80: +[NSMessagePort sendBeforeTime:streamData:components:to:from:msgid:reserved:] + 476\n<SNIP>\n")),(0,r.kt)("admonition",{title:"note",type:"info"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"To search ALL dylibs, use the ",(0,r.kt)("inlineCode",{parentName:"li"},"--all")," flag  "),(0,r.kt)("li",{parentName:"ul"},"To search a specific dylib, use the ",(0,r.kt)("inlineCode",{parentName:"li"},"--image")," flag  "),(0,r.kt)("li",{parentName:"ul"},"To search all other dylibs that import the dylib that contains the symbol/address, use the ",(0,r.kt)("inlineCode",{parentName:"li"},"--imports")," flag  "))),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"This is one of ",(0,r.kt)("inlineCode",{parentName:"p"},"ipsw"),"'s MOST powerful commands and is getting better all the time.  Check back periodically and see what's new!")),(0,r.kt)("h3",{id:"dyld-tbd"},(0,r.kt)("strong",{parentName:"h3"},"dyld tbd")),(0,r.kt)("p",null,"Generate a ",(0,r.kt)("inlineCode",{parentName:"p"},".tbd")," file for a dylib"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld tbd dyld_shared_cache CoreSymbolication\n   \u2022 Created CoreSymbolication.tbd\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f cat CoreSymbolication.tbd\n---\narchs:           [ arm64e ]\nplatform:        ios\ninstall-name:    /System/Library/PrivateFrameworks/CoreSymbolication.framework/CoreSymbolication\ncurrent-version: 64544.69.1.0.0\nexports:\n  - archs:           [ arm64e ]\n    symbols:         [ _unmap_node, _thread_name_for_thread_port, <SNIP> ]\n...\n")),(0,r.kt)("h3",{id:"dyld-dump"},(0,r.kt)("strong",{parentName:"h3"},"dyld dump")),(0,r.kt)("p",null,"First print the MachO header for ",(0,r.kt)("inlineCode",{parentName:"p"},"CoreData")," in a cache"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'\u276f ipsw dyld macho dyld_shared_cache_arm64e CoreData | grep "__DATA_CONST.__got"\n   sz="0x000002d8" off=0x502c2428-0x502c2700 addr="0x1d22c2428"-0x1d22c2700   __DATA_CONST.__got\n')),(0,r.kt)("p",null,"Hexdump the section ",(0,r.kt)("inlineCode",{parentName:"p"},"__DATA_CONST.__got")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld dump dyld_shared_cache_arm64e 0x1d22c2428 --size 728 # 0x2d8 in decimal\n\n00000000  00 46 a8 d9 01 00 08 00  90 ba a8 d9 01 00 08 00  |.F..............|\n00000010  52 3b d8 d6 01 00 08 00  20 ba a8 d9 01 00 08 00  |R;...... .......|\n00000020  18 bc a8 d9 01 00 08 00  b0 bc a8 d9 01 00 08 00  |................|\n00000030  b8 bc a8 d9 01 00 08 00  c0 bc a8 d9 01 00 08 00  |................|\n00000040  a0 bc a8 d9 01 00 08 00  a8 bc a8 d9 01 00 08 00  |................|\n00000050  e8 bb a8 d9 01 00 08 00  88 bc a8 d9 01 00 08 00  |................|\n00000060  b0 bb a8 d9 01 00 08 00  b0 3d a8 d9 01 00 08 00  |.........=......|\n00000070  30 bb a8 d9 01 00 08 00  c8 3d a8 d9 01 00 08 00  |0........=......|\n<SNIP>\n")),(0,r.kt)("p",null,"Or dump the section as a list of pointers"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld dump dyld_shared_cache_arm64e 0x1d22c2428 --size 728 --addr\n\n0x1d9a84600\n0x1d9a8ba90\n0x1d6d83b52\n0x1d9a8ba20\n0x1d9a8bc18\n0x1d9a8bcb0\n0x1d9a8bcb8\n0x1d9a8bcc0\n0x1d9a8bca0\n0x1d9a8bca8\n<SNIP>\n")),(0,r.kt)("p",null,"Lookup those pointers in the cache"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld dump dyld_shared_cache_arm64e 0x1d22c2428 --size 728 --addr \\\n               | xargs -I {} /bin/zsh -c 'ipsw dyld a2s dyld_shared_cache_arm64e {}'\n\n   \u2022 Address dylib=CoreFoundation section=__DATA_CONST.__const\n0x1d9a84600: _NSCalendarIdentifierGregorian\n\n   \u2022 Address dylib=Foundation section=__DATA_CONST.__const\n0x1d9a8ba90: _NSCocoaErrorDomain\n\n   \u2022 Address dylib=Foundation section=__DATA.__common\n0x1d6d83b52: _NSDeallocateZombies\n\n   \u2022 Address dylib=/Foundation section=__DATA_CONST.__const\n0x1d9a8ba20: _NSFilePathErrorKey\n\n<SNIP>\n")),(0,r.kt)("p",null,"Or write to a file for later post-processing"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld dump dyld_shared_cache_arm64e 0x1d22c2428 --size 728 --output ./data.bin\n   \u2022 Wrote data to file ./data.bin\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f hexdump -C data.bin\n00000000  00 46 a8 d9 01 00 08 00  90 ba a8 d9 01 00 08 00  |.F..............|\n00000010  52 3b d8 d6 01 00 08 00  20 ba a8 d9 01 00 08 00  |R;...... .......|\n00000020  18 bc a8 d9 01 00 08 00  b0 bc a8 d9 01 00 08 00  |................|\n00000030  b8 bc a8 d9 01 00 08 00  c0 bc a8 d9 01 00 08 00  |................|\n00000040  a0 bc a8 d9 01 00 08 00  a8 bc a8 d9 01 00 08 00  |................|\n00000050  e8 bb a8 d9 01 00 08 00  88 bc a8 d9 01 00 08 00  |................|\n00000060  b0 bb a8 d9 01 00 08 00  b0 3d a8 d9 01 00 08 00  |.........=......|\n00000070  30 bb a8 d9 01 00 08 00  c8 3d a8 d9 01 00 08 00  |0........=......|\n00000080  c0 3d a8 d9 01 00 08 00  68 be a8 d9 01 00 08 00  |.=......h.......|\n00000090  70 be a8 d9 01 00 08 00  78 be a8 d9 01 00 08 00  |p.......x.......|\n<SNIP>\n")),(0,r.kt)("p",null,"To dump a section from a dylib in the ",(0,r.kt)("em",{parentName:"p"},"dyld_shared_cache")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw dyld dump dyld_shared_cache --image JavaScriptCore --section __TEXT.__cstring --size 208\n   \u2022 Address location          dylib=JavaScriptCore section=__TEXT.__cstring\n000000019ba27290:  41 70 70 72 6f 78 69 6d  61 74 65 28 00 20 73 65  |Approximate(. se|\n000000019ba272a0:  63 29 00 4e 4f 54 20 49  4d 50 4c 45 4d 45 4e 54  |c).NOT IMPLEMENT|\n000000019ba272b0:  45 44 20 59 45 54 0a 00  41 53 53 45 52 54 49 4f  |ED YET..ASSERTIO|\n000000019ba272c0:  4e 20 46 41 49 4c 45 44  3a 20 25 73 0a 00 53 48  |N FAILED: %s..SH|\n000000019ba272d0:  4f 55 4c 44 20 4e 45 56  45 52 20 42 45 20 52 45  |OULD NEVER BE RE|\n000000019ba272e0:  41 43 48 45 44 0a 00 41  53 53 45 52 54 49 4f 4e  |ACHED..ASSERTION|\n000000019ba272f0:  20 46 41 49 4c 45 44 3a  20 00 0a 25 73 0a 00 41  | FAILED: ..%s..A|\n000000019ba27300:  52 47 55 4d 45 4e 54 20  42 41 44 3a 20 25 73 2c  |RGUMENT BAD: %s,|\n000000019ba27310:  20 25 73 0a 00 00 46 41  54 41 4c 20 45 52 52 4f  | %s...FATAL ERRO|\n000000019ba27320:  52 3a 20 00 0a 00 55 6e  6b 6e 6f 77 6e 20 6c 6f  |R: ...Unknown lo|\n000000019ba27330:  67 67 69 6e 67 20 6c 65  76 65 6c 3a 20 25 73 00  |gging level: %s.|\n000000019ba27340:  55 6e 6b 6e 6f 77 6e 20  6c 6f 67 67 69 6e 67 20  |Unknown logging |\n000000019ba27350:  63 68 61 6e 6e 65 6c 3a  20 25 73 00 25 40 00 25  |channel: %s.%@.%|\n")))}p.isMDXComponent=!0}}]);