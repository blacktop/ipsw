"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2471],{81990:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>t,metadata:()=>r,toc:()=>a});var o=n(74848),s=n(28453);const t={id:"keys",title:"keys",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"keys",description:"Download FW keys from The iPhone Wiki"},l=void 0,r={id:"cli/ipsw/download/keys",title:"keys",description:"Download FW keys from The iPhone Wiki",source:"@site/docs/cli/ipsw/download/keys.md",sourceDirName:"cli/ipsw/download",slug:"/cli/ipsw/download/keys",permalink:"/ipsw/docs/cli/ipsw/download/keys",draft:!1,unlisted:!1,editUrl:"https://github.com/blacktop/ipsw/tree/master/www/docs/cli/ipsw/download/keys.md",tags:[],version:"current",frontMatter:{id:"keys",title:"keys",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"keys",description:"Download FW keys from The iPhone Wiki"},sidebar:"cli",previous:{title:"ipsw",permalink:"/ipsw/docs/cli/ipsw/download/ipsw"},next:{title:"macos",permalink:"/ipsw/docs/cli/ipsw/download/macos"}},d={},a=[{value:"ipsw download keys",id:"ipsw-download-keys",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function c(e){const i={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.h2,{id:"ipsw-download-keys",children:"ipsw download keys"}),"\n",(0,o.jsx)(i.p,{children:"Download FW keys from The iPhone Wiki"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{children:"ipsw download keys [flags]\n"})}),"\n",(0,o.jsx)(i.h3,{id:"options",children:"Options"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{children:"  -h, --help            help for keys\n      --json            Output as JSON\n  -o, --output string   Folder to download keys to\n"})}),"\n",(0,o.jsx)(i.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{children:"      --black-list stringArray   iOS device black list\n  -b, --build string             iOS BuildID (i.e. 16F203)\n      --color                    colorize output\n      --config string            config file (default is $HOME/.config/ipsw/config.yaml)\n  -y, --confirm                  do not prompt user for confirmation\n  -d, --device string            iOS Device (i.e. iPhone11,2)\n      --insecure                 do not verify ssl certs\n  -m, --model string             iOS Model (i.e. D321AP)\n      --no-color                 disable colorize output\n      --proxy string             HTTP/HTTPS proxy\n  -_, --remove-commas            replace commas in IPSW filename with underscores\n      --restart-all              always restart resumable IPSWs\n      --resume-all               always resume resumable IPSWs\n      --skip-all                 always skip resumable IPSWs\n  -V, --verbose                  verbose output\n  -v, --version string           iOS Version (i.e. 12.3.1)\n      --white-list stringArray   iOS device white list\n"})}),"\n",(0,o.jsx)(i.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.a,{href:"/docs/cli/ipsw/download",children:"ipsw download"}),"\t - Download Apple Firmware files (and more)"]}),"\n"]})]})}function p(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>l,x:()=>r});var o=n(96540);const s={},t=o.createContext(s);function l(e){const i=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),o.createElement(t.Provider,{value:i},e.children)}}}]);