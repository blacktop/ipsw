"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6936],{97585:(i,e,n)=>{n.r(e),n.d(e,{assets:()=>r,contentTitle:()=>c,default:()=>a,frontMatter:()=>s,metadata:()=>d,toc:()=>l});var t=n(74848),o=n(28453);const s={id:"wifi",title:"wifi",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"wifi",description:"Get/Set wifi connections state"},c=void 0,d={id:"cli/ipsw/idev/wifi",title:"wifi",description:"Get/Set wifi connections state",source:"@site/docs/cli/ipsw/idev/wifi.md",sourceDirName:"cli/ipsw/idev",slug:"/cli/ipsw/idev/wifi",permalink:"/ipsw/docs/cli/ipsw/idev/wifi",draft:!1,unlisted:!1,editUrl:"https://github.com/blacktop/ipsw/tree/master/www/docs/cli/ipsw/idev/wifi.md",tags:[],version:"current",frontMatter:{id:"wifi",title:"wifi",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"wifi",description:"Get/Set wifi connections state"},sidebar:"cli",previous:{title:"syslog",permalink:"/ipsw/docs/cli/ipsw/idev/syslog"},next:{title:"img4",permalink:"/ipsw/docs/cli/ipsw/img4/"}},r={},l=[{value:"ipsw idev wifi",id:"ipsw-idev-wifi",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function p(i){const e={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...i.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{id:"ipsw-idev-wifi",children:"ipsw idev wifi"}),"\n",(0,t.jsx)(e.p,{children:"Get/Set wifi connections state"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"ipsw idev wifi [flags]\n"})}),"\n",(0,t.jsx)(e.h3,{id:"options",children:"Options"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"  -h, --help   help for wifi\n      --off    Turn WiFi off\n      --on     Turn WiFi on\n"})}),"\n",(0,t.jsx)(e.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"      --color           colorize output\n      --config string   config file (default is $HOME/.config/ipsw/config.yaml)\n      --no-color        disable colorize output\n  -u, --udid string     Device UniqueDeviceID to connect to\n  -V, --verbose         verbose output\n"})}),"\n",(0,t.jsx)(e.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.a,{href:"/docs/cli/ipsw/idev",children:"ipsw idev"}),"\t - USB connected device commands"]}),"\n"]})]})}function a(i={}){const{wrapper:e}={...(0,o.R)(),...i.components};return e?(0,t.jsx)(e,{...i,children:(0,t.jsx)(p,{...i})}):p(i)}},28453:(i,e,n)=>{n.d(e,{R:()=>c,x:()=>d});var t=n(96540);const o={},s=t.createContext(o);function c(i){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof i?i(e):{...e,...i}}),[e,i])}function d(i){let e;return e=i.disableParentContext?"function"==typeof i.components?i.components(o):i.components||o:c(i.components),t.createElement(s.Provider,{value:e},i.children)}}}]);