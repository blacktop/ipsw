"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5254],{94554:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>a,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var o=i(85893),n=i(11151);const s={id:"extract",title:"extract",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"extract",description:"Extract OTA payload files"},r=void 0,c={id:"cli/ipsw/ota/extract",title:"extract",description:"Extract OTA payload files",source:"@site/docs/cli/ipsw/ota/extract.md",sourceDirName:"cli/ipsw/ota",slug:"/cli/ipsw/ota/extract",permalink:"/ipsw/docs/cli/ipsw/ota/extract",draft:!1,unlisted:!1,editUrl:"https://github.com/blacktop/ipsw/tree/master/www/docs/cli/ipsw/ota/extract.md",tags:[],version:"current",frontMatter:{id:"extract",title:"extract",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"extract",description:"Extract OTA payload files"},sidebar:"cli",previous:{title:"ota",permalink:"/ipsw/docs/cli/ipsw/ota/"},next:{title:"info",permalink:"/ipsw/docs/cli/ipsw/ota/info"}},a={},l=[{value:"ipsw ota extract",id:"ipsw-ota-extract",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function d(t){const e={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.a)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{id:"ipsw-ota-extract",children:"ipsw ota extract"}),"\n",(0,o.jsx)(e.p,{children:"Extract OTA payload files"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"ipsw ota extract <OTA> <PATTERN> [flags]\n"})}),"\n",(0,o.jsx)(e.h3,{id:"options",children:"Options"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"  -h, --help            help for extract\n  -o, --output string   Output folder\n"})}),"\n",(0,o.jsx)(e.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"      --color           colorize output\n      --config string   config file (default is $HOME/.config/ipsw/config.yaml)\n      --no-color        disable colorize output\n  -V, --verbose         verbose output\n"})}),"\n",(0,o.jsx)(e.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.a,{href:"/docs/cli/ipsw/ota",children:"ipsw ota"}),"\t - Parse OTAs"]}),"\n"]})]})}function p(t={}){const{wrapper:e}={...(0,n.a)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(d,{...t})}):d(t)}},11151:(t,e,i)=>{i.d(e,{Z:()=>c,a:()=>r});var o=i(67294);const n={},s=o.createContext(n);function r(t){const e=o.useContext(s);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function c(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:r(t.components),o.createElement(s.Provider,{value:e},t.children)}}}]);