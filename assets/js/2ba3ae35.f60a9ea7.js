"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7517],{38761:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>r,default:()=>p,frontMatter:()=>t,metadata:()=>l,toc:()=>a});var s=n(74848),o=n(28453);const t={id:"ipsw",title:"ipsw",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"ipsw",description:"Download and parse IPSW(s) from the internets"},r=void 0,l={id:"cli/ipsw/download/ipsw",title:"ipsw",description:"Download and parse IPSW(s) from the internets",source:"@site/docs/cli/ipsw/download/ipsw.md",sourceDirName:"cli/ipsw/download",slug:"/cli/ipsw/download/ipsw",permalink:"/ipsw/docs/cli/ipsw/download/ipsw",draft:!1,unlisted:!1,editUrl:"https://github.com/blacktop/ipsw/tree/master/www/docs/cli/ipsw/download/ipsw.md",tags:[],version:"current",frontMatter:{id:"ipsw",title:"ipsw",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"ipsw",description:"Download and parse IPSW(s) from the internets"},sidebar:"cli",previous:{title:"ipa",permalink:"/ipsw/docs/cli/ipsw/download/ipa"},next:{title:"keys",permalink:"/ipsw/docs/cli/ipsw/download/keys"}},d={},a=[{value:"ipsw download ipsw",id:"ipsw-download-ipsw",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function c(e){const i={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.h2,{id:"ipsw-download-ipsw",children:"ipsw download ipsw"}),"\n",(0,s.jsx)(i.p,{children:"Download and parse IPSW(s) from the internets"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:"ipsw download ipsw [flags]\n"})}),"\n",(0,s.jsx)(i.h3,{id:"options",children:"Options"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:"      --decrypt                 Attempt to decrypt the partial files if keys are available\n      --dyld                    Extract dyld_shared_cache(s) from remote IPSW\n  -a, --dyld-arch stringArray   dyld_shared_cache architecture(s) to remote extract\n  -f, --flat                    Do NOT perserve directory structure when downloading with --pattern\n  -h, --help                    help for ipsw\n      --ibridge                 Download iBridge IPSWs\n      --kernel                  Extract kernelcache from remote IPSW\n      --latest                  Download latest IPSWs\n      --macos                   Download macOS IPSWs\n  -o, --output string           Folder to download files to\n      --pattern string          Download remote files that match regex\n      --show-latest-build       Show latest iOS build\n      --show-latest-version     Show latest iOS version\n  -u, --urls                    Dump URLs only\n      --usb                     Download IPSWs for USB attached iDevices\n"})}),"\n",(0,s.jsx)(i.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:"      --black-list stringArray   iOS device black list\n  -b, --build string             iOS BuildID (i.e. 16F203)\n      --color                    colorize output\n      --config string            config file (default is $HOME/.config/ipsw/config.yaml)\n  -y, --confirm                  do not prompt user for confirmation\n  -d, --device string            iOS Device (i.e. iPhone11,2)\n      --insecure                 do not verify ssl certs\n  -m, --model string             iOS Model (i.e. D321AP)\n      --no-color                 disable colorize output\n      --proxy string             HTTP/HTTPS proxy\n  -_, --remove-commas            replace commas in IPSW filename with underscores\n      --restart-all              always restart resumable IPSWs\n      --resume-all               always resume resumable IPSWs\n      --skip-all                 always skip resumable IPSWs\n  -V, --verbose                  verbose output\n  -v, --version string           iOS Version (i.e. 12.3.1)\n      --white-list stringArray   iOS device white list\n"})}),"\n",(0,s.jsx)(i.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"/docs/cli/ipsw/download",children:"ipsw download"}),"\t - Download Apple Firmware files (and more)"]}),"\n"]})]})}function p(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>l});var s=n(96540);const o={},t=s.createContext(o);function r(e){const i=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(t.Provider,{value:i},e.children)}}}]);