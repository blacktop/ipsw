"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5037],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var i=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},o=Object.keys(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=i.createContext({}),c=function(e){var t=i.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},l=function(e){var t=c(e.components);return i.createElement(s.Provider,{value:t},e.children)},d="mdxType",v={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),d=c(r),u=n,m=d["".concat(s,".").concat(u)]||d[u]||v[u]||o;return r?i.createElement(m,p(p({ref:t},l),{},{components:r})):i.createElement(m,p({ref:t},l))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,p=new Array(o);p[0]=u;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a[d]="string"==typeof e?e:n,p[1]=a;for(var c=2;c<o;c++)p[c]=r[c];return i.createElement.apply(null,p)}return i.createElement.apply(null,r)}u.displayName="MDXCreateElement"},39932:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>v,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var i=r(87462),n=(r(67294),r(3905));const o={id:"device",title:"device",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"device",description:"Register devices for development and testing"},p=void 0,a={unversionedId:"cli/ipsw/appstore/device/device",id:"cli/ipsw/appstore/device/device",title:"device",description:"Register devices for development and testing",source:"@site/docs/cli/ipsw/appstore/device/device.md",sourceDirName:"cli/ipsw/appstore/device",slug:"/cli/ipsw/appstore/device/",permalink:"/ipsw/docs/cli/ipsw/appstore/device/",draft:!1,editUrl:"https://github.com/blacktop/ipsw/tree/master/www/docs/cli/ipsw/appstore/device/device.md",tags:[],version:"current",frontMatter:{id:"device",title:"device",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"device",description:"Register devices for development and testing"},sidebar:"cli",previous:{title:"rm",permalink:"/ipsw/docs/cli/ipsw/appstore/cert/rm"},next:{title:"ls",permalink:"/ipsw/docs/cli/ipsw/appstore/device/ls"}},s={},c=[{value:"ipsw appstore device",id:"ipsw-appstore-device",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],l={toc:c},d="wrapper";function v(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,i.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"ipsw-appstore-device"},"ipsw appstore device"),(0,n.kt)("p",null,"Register devices for development and testing"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"ipsw appstore device [flags]\n")),(0,n.kt)("h3",{id:"options"},"Options"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"  -h, --help   help for device\n")),(0,n.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"      --color           colorize output\n      --config string   config file (default is $HOME/.config/ipsw/config.yaml)\n  -i, --iss string      Issuer ID\n  -j, --jwt string      JWT api key\n  -k, --kid string      Key ID\n  -p, --p8 string       Path to App Store Connect API Key (.p8)\n  -V, --verbose         verbose output\n")),(0,n.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/cli/ipsw/appstore"},"ipsw appstore"),"\t - Interact with the App Store Connect API"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/cli/ipsw/appstore/device/ls"},"ipsw appstore device ls"),"\t - List devices registered to your team"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/cli/ipsw/appstore/device/mod"},"ipsw appstore device mod"),"\t - Register a new device for app development"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/cli/ipsw/appstore/device/reg"},"ipsw appstore device reg"),"\t - Register a new device for app development")))}v.isMDXComponent=!0}}]);