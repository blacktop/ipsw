"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4322],{73230:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>r,toc:()=>p});var i=n(85893),s=n(11151);const o={id:"update",title:"update",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"update",description:"Download an ipsw update if one exists"},a=void 0,r={id:"cli/ipsw/update",title:"update",description:"Download an ipsw update if one exists",source:"@site/docs/cli/ipsw/update.md",sourceDirName:"cli/ipsw",slug:"/cli/ipsw/update",permalink:"/ipsw/docs/cli/ipsw/update",draft:!1,unlisted:!1,editUrl:"https://github.com/blacktop/ipsw/tree/master/www/docs/cli/ipsw/update.md",tags:[],version:"current",frontMatter:{id:"update",title:"update",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"update",description:"Download an ipsw update if one exists"},sidebar:"cli",previous:{title:"symbolicate",permalink:"/ipsw/docs/cli/ipsw/symbolicate"},next:{title:"version",permalink:"/ipsw/docs/cli/ipsw/version"}},d={},p=[{value:"ipsw update",id:"ipsw-update",level:2},{value:"Examples",id:"examples",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function l(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"ipsw-update",children:"ipsw update"}),"\n",(0,i.jsx)(t.p,{children:"Download an ipsw update if one exists"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"ipsw update [flags]\n"})}),"\n",(0,i.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"# Grab an update for your platform\n\u276f ipsw update --detect\n# Grab an update for another platform\n\u276f ipsw update --platform windows_x86_64\n# Grab an update for your platform and overwrite the current one\n\u276f ipsw update --detect --replace\n"})}),"\n",(0,i.jsx)(t.h3,{id:"options",children:"Options"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"  -a, --api string        Github API Token (incase you get rate limited)\n      --detect            detect my platform\n  -h, --help              help for update\n      --insecure          do not verify ssl certs\n  -p, --platform string   ipsw platform binary to update\n      --proxy string      HTTP/HTTPS proxy\n      --replace           overwrite current ipsw\n"})}),"\n",(0,i.jsx)(t.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"      --color           colorize output\n      --config string   config file (default is $HOME/.config/ipsw/config.yaml)\n      --no-color        disable colorize output\n  -V, --verbose         verbose output\n"})}),"\n",(0,i.jsx)(t.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/docs/cli/ipsw",children:"ipsw"}),"\t - Download and Parse IPSWs (and SO much more)"]}),"\n"]})]})}function c(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>r,a:()=>a});var i=n(67294);const s={},o=i.createContext(s);function a(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);