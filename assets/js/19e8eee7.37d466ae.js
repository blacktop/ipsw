"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1438],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>m});var n=t(7294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var a=n.createContext({}),p=function(e){var r=n.useContext(a),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},c=function(e){var r=p(e.components);return n.createElement(a.Provider,{value:r},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,o=e.originalType,a=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(t),f=i,m=d["".concat(a,".").concat(f)]||d[f]||u[f]||o;return t?n.createElement(m,s(s({ref:r},c),{},{components:t})):n.createElement(m,s({ref:r},c))}));function m(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var o=t.length,s=new Array(o);s[0]=f;var l={};for(var a in r)hasOwnProperty.call(r,a)&&(l[a]=r[a]);l.originalType=e,l[d]="string"==typeof e?e:i,s[1]=l;for(var p=2;p<o;p++)s[p]=t[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},7058:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=t(7462),i=(t(7294),t(3905));const o={id:"debugserver",title:"debugserver",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"debugserver",description:"Prep device for remote debugging"},s=void 0,l={unversionedId:"cli/ipsw/debugserver",id:"cli/ipsw/debugserver",title:"debugserver",description:"Prep device for remote debugging",source:"@site/docs/cli/ipsw/debugserver.md",sourceDirName:"cli/ipsw",slug:"/cli/ipsw/debugserver",permalink:"/ipsw/docs/cli/ipsw/debugserver",draft:!1,editUrl:"https://github.com/blacktop/ipsw/tree/master/www/docs/cli/ipsw/debugserver.md",tags:[],version:"current",frontMatter:{id:"debugserver",title:"debugserver",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"debugserver",description:"Prep device for remote debugging"},sidebar:"cli",previous:{title:"ipsw",permalink:"/ipsw/docs/cli/ipsw/"},next:{title:"device-list",permalink:"/ipsw/docs/cli/ipsw/device-list"}},a={},p=[{value:"ipsw debugserver",id:"ipsw-debugserver",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],c={toc:p},d="wrapper";function u(e){let{components:r,...t}=e;return(0,i.kt)(d,(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"ipsw-debugserver"},"ipsw debugserver"),(0,i.kt)("p",null,"Prep device for remote debugging"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"ipsw debugserver [flags]\n")),(0,i.kt)("h3",{id:"options"},"Options"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'  -f, --force          overwrite file on device\n  -h, --help           help for debugserver\n  -t, --host string    ssh host (default "localhost")\n  -m, --image string   path to DeveloperDiskImage.dmg\n  -n, --insecure       ignore known_hosts key checking\n  -i, --key string     ssh key (default "$HOME/.ssh/id_rsa")\n  -p, --port string    ssh port (default "2222")\n')),(0,i.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"      --color           colorize output\n      --config string   config file (default is $HOME/.ipsw/config.yaml)\n  -V, --verbose         verbose output\n")),(0,i.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/cli/ipsw"},"ipsw"),"\t - Download and Parse IPSWs (and SO much more)")))}u.isMDXComponent=!0}}]);