"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7272],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>g});var n=t(67294);function s(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){s(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,s=function(e,r){if(null==e)return{};var t,n,s={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(s[t]=e[t]);return s}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var a=n.createContext({}),p=function(e){var r=n.useContext(a),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},c=function(e){var r=p(e.components);return n.createElement(a.Provider,{value:r},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,s=e.mdxType,i=e.originalType,a=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(t),f=s,g=d["".concat(a,".").concat(f)]||d[f]||u[f]||i;return t?n.createElement(g,o(o({ref:r},c),{},{components:t})):n.createElement(g,o({ref:r},c))}));function g(e,r){var t=arguments,s=r&&r.mdxType;if("string"==typeof e||s){var i=t.length,o=new Array(i);o[0]=f;var l={};for(var a in r)hasOwnProperty.call(r,a)&&(l[a]=r[a]);l.originalType=e,l[d]="string"==typeof e?e:s,o[1]=l;for(var p=2;p<i;p++)o[p]=t[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},38200:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=t(87462),s=(t(67294),t(3905));const i={id:"debugserver",title:"debugserver",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"debugserver",description:"Prep device for remote debugging"},o=void 0,l={unversionedId:"cli/ipsw/ssh/debugserver",id:"cli/ipsw/ssh/debugserver",title:"debugserver",description:"Prep device for remote debugging",source:"@site/docs/cli/ipsw/ssh/debugserver.md",sourceDirName:"cli/ipsw/ssh",slug:"/cli/ipsw/ssh/debugserver",permalink:"/ipsw/docs/cli/ipsw/ssh/debugserver",draft:!1,editUrl:"https://github.com/blacktop/ipsw/tree/master/www/docs/cli/ipsw/ssh/debugserver.md",tags:[],version:"current",frontMatter:{id:"debugserver",title:"debugserver",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"debugserver",description:"Prep device for remote debugging"},sidebar:"cli",previous:{title:"ssh",permalink:"/ipsw/docs/cli/ipsw/ssh/"},next:{title:"shsh",permalink:"/ipsw/docs/cli/ipsw/ssh/shsh"}},a={},p=[{value:"ipsw ssh debugserver",id:"ipsw-ssh-debugserver",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],c={toc:p},d="wrapper";function u(e){let{components:r,...t}=e;return(0,s.kt)(d,(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"ipsw-ssh-debugserver"},"ipsw ssh debugserver"),(0,s.kt)("p",null,"Prep device for remote debugging"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"ipsw ssh debugserver [flags]\n")),(0,s.kt)("h3",{id:"options"},"Options"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"  -f, --force          overwrite file on device\n  -h, --help           help for debugserver\n  -m, --image string   path to DeveloperDiskImage.dmg\n")),(0,s.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'      --color             colorize output\n      --config string     config file (default is $HOME/.config/ipsw/config.yaml)\n  -t, --host string       ssh host (default "localhost")\n  -n, --insecure          ignore known_hosts\n  -i, --key string        ssh key (default "$HOME/.ssh/id_rsa")\n  -s, --password string   ssh password (default "alpine")\n  -p, --port string       ssh port (default "2222")\n  -u, --user string       ssh user (default "root")\n  -V, --verbose           verbose output\n')),(0,s.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/cli/ipsw/ssh"},"ipsw ssh"),"\t - SSH into a jailbroken device")))}u.isMDXComponent=!0}}]);