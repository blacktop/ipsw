"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3047],{86668:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>l});var n=i(74848),o=i(28453);const s={id:"watch",title:"watch",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"watch",description:"Watch Github Commits"},c=void 0,r={id:"cli/ipsw/watch",title:"watch",description:"Watch Github Commits",source:"@site/docs/cli/ipsw/watch.md",sourceDirName:"cli/ipsw",slug:"/cli/ipsw/watch",permalink:"/ipsw/docs/cli/ipsw/watch",draft:!1,unlisted:!1,editUrl:"https://github.com/blacktop/ipsw/tree/master/www/docs/cli/ipsw/watch.md",tags:[],version:"current",frontMatter:{id:"watch",title:"watch",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"watch",description:"Watch Github Commits"},sidebar:"cli",previous:{title:"version",permalink:"/ipsw/docs/cli/ipsw/version"}},a={},l=[{value:"ipsw watch",id:"ipsw-watch",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function d(t){const e={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{id:"ipsw-watch",children:"ipsw watch"}),"\n",(0,n.jsx)(e.p,{children:"Watch Github Commits"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:"ipsw watch <ORG/REPO> [flags]\n"})}),"\n",(0,n.jsx)(e.h3,{id:"options",children:"Options"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:'  -a, --api string             Github API Token\n  -b, --branch string          Repo branch to watch (default "main")\n  -d, --days int               Days back to search for commits (default 1)\n      --discord-id string      Discord Webhook ID\n      --discord-token string   Discord Webhook Token\n  -f, --file string            Commit file path to watch\n  -h, --help                   help for watch\n      --json                   Output downloadable tar.gz URLs as JSON\n  -p, --pattern string         Commit message pattern to match\n  -t, --timeout duration       Timeout for watch attempts (default: 0s = no timeout/run once)\n'})}),"\n",(0,n.jsx)(e.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:"      --color           colorize output\n      --config string   config file (default is $HOME/.config/ipsw/config.yaml)\n      --no-color        disable colorize output\n  -V, --verbose         verbose output\n"})}),"\n",(0,n.jsx)(e.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.a,{href:"/docs/cli/ipsw",children:"ipsw"}),"\t - Download and Parse IPSWs (and SO much more)"]}),"\n"]})]})}function h(t={}){const{wrapper:e}={...(0,o.R)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(d,{...t})}):d(t)}},28453:(t,e,i)=>{i.d(e,{R:()=>c,x:()=>r});var n=i(96540);const o={},s=n.createContext(o);function c(t){const e=n.useContext(s);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function r(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:c(t.components),n.createElement(s.Provider,{value:e},t.children)}}}]);