"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1746],{66752:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>r,contentTitle:()=>p,default:()=>a,frontMatter:()=>c,metadata:()=>s,toc:()=>d});var t=n(85893),o=n(11151);const c={id:"pcap",title:"pcap",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"pcap",description:"Dump network traffic"},p=void 0,s={id:"cli/ipsw/idev/pcap",title:"pcap",description:"Dump network traffic",source:"@site/docs/cli/ipsw/idev/pcap.md",sourceDirName:"cli/ipsw/idev",slug:"/cli/ipsw/idev/pcap",permalink:"/ipsw/docs/cli/ipsw/idev/pcap",draft:!1,unlisted:!1,editUrl:"https://github.com/blacktop/ipsw/tree/master/www/docs/cli/ipsw/idev/pcap.md",tags:[],version:"current",frontMatter:{id:"pcap",title:"pcap",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"pcap",description:"Dump network traffic"},sidebar:"cli",previous:{title:"noti",permalink:"/ipsw/docs/cli/ipsw/idev/noti"},next:{title:"prof",permalink:"/ipsw/docs/cli/ipsw/idev/prof/"}},r={},d=[{value:"ipsw idev pcap",id:"ipsw-idev-pcap",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function l(e){const i={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h2,{id:"ipsw-idev-pcap",children:"ipsw idev pcap"}),"\n",(0,t.jsx)(i.p,{children:"Dump network traffic"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"ipsw idev pcap [flags]\n"})}),"\n",(0,t.jsx)(i.h3,{id:"options",children:"Options"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"  -h, --help            help for pcap\n  -o, --output string   Folder to save pcap\n  -p, --proc string     process to get pcap for\n"})}),"\n",(0,t.jsx)(i.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"      --color           colorize output\n      --config string   config file (default is $HOME/.config/ipsw/config.yaml)\n      --no-color        disable colorize output\n  -u, --udid string     Device UniqueDeviceID to connect to\n  -V, --verbose         verbose output\n"})}),"\n",(0,t.jsx)(i.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"/docs/cli/ipsw/idev",children:"ipsw idev"}),"\t - USB connected device commands"]}),"\n"]})]})}function a(e={}){const{wrapper:i}={...(0,o.a)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},11151:(e,i,n)=>{n.d(i,{Z:()=>s,a:()=>p});var t=n(67294);const o={},c=t.createContext(o);function p(e){const i=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:p(e.components),t.createElement(c.Provider,{value:i},e.children)}}}]);