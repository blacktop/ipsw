"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[415],{60551:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>r,contentTitle:()=>d,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>a});var o=n(85893),t=n(11151);const s={id:"a2o",title:"a2o",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"a2o",description:"Convert address to offset"},d=void 0,l={id:"cli/ipsw/dyld/a2o",title:"a2o",description:"Convert address to offset",source:"@site/docs/cli/ipsw/dyld/a2o.md",sourceDirName:"cli/ipsw/dyld",slug:"/cli/ipsw/dyld/a2o",permalink:"/ipsw/docs/cli/ipsw/dyld/a2o",draft:!1,unlisted:!1,editUrl:"https://github.com/blacktop/ipsw/tree/master/www/docs/cli/ipsw/dyld/a2o.md",tags:[],version:"current",frontMatter:{id:"a2o",title:"a2o",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"a2o",description:"Convert address to offset"},sidebar:"cli",previous:{title:"a2f",permalink:"/ipsw/docs/cli/ipsw/dyld/a2f"},next:{title:"a2s",permalink:"/ipsw/docs/cli/ipsw/dyld/a2s"}},r={},a=[{value:"ipsw dyld a2o",id:"ipsw-dyld-a2o",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function c(e){const i={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.h2,{id:"ipsw-dyld-a2o",children:"ipsw dyld a2o"}),"\n",(0,o.jsx)(i.p,{children:"Convert address to offset"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{children:"ipsw dyld a2o <DSC> <ADDR> [flags]\n"})}),"\n",(0,o.jsx)(i.h3,{id:"options",children:"Options"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{children:"  -d, --dec    Return address in decimal\n  -h, --help   help for a2o\n  -x, --hex    Return address in hexadecimal\n"})}),"\n",(0,o.jsx)(i.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{children:"      --color           colorize output\n      --config string   config file (default is $HOME/.config/ipsw/config.yaml)\n      --no-color        disable colorize output\n  -V, --verbose         verbose output\n"})}),"\n",(0,o.jsx)(i.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.a,{href:"/docs/cli/ipsw/dyld",children:"ipsw dyld"}),"\t - Parse dyld_shared_cache"]}),"\n"]})]})}function p(e={}){const{wrapper:i}={...(0,t.a)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},11151:(e,i,n)=>{n.d(i,{Z:()=>l,a:()=>d});var o=n(67294);const t={},s=o.createContext(t);function d(e){const i=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),o.createElement(s.Provider,{value:i},e.children)}}}]);