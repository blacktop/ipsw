"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9457],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=r.createContext({}),p=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(d.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,d=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=p(n),f=i,m=c["".concat(d,".").concat(f)]||c[f]||u[f]||a;return n?r.createElement(m,l(l({ref:t},s),{},{components:n})):r.createElement(m,l({ref:t},s))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=f;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[c]="string"==typeof e?e:i,l[1]=o;for(var p=2;p<a;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},7678:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var r=n(7462),i=(n(7294),n(3905));const a={id:"ida",title:"ida",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"ida",description:"Analyze DSC in IDA Pro"},l=void 0,o={unversionedId:"cli/ipsw/dyld/ida",id:"cli/ipsw/dyld/ida",title:"ida",description:"Analyze DSC in IDA Pro",source:"@site/docs/cli/ipsw/dyld/ida.md",sourceDirName:"cli/ipsw/dyld",slug:"/cli/ipsw/dyld/ida",permalink:"/ipsw/docs/cli/ipsw/dyld/ida",draft:!1,editUrl:"https://github.com/blacktop/ipsw/tree/master/www/docs/cli/ipsw/dyld/ida.md",tags:[],version:"current",frontMatter:{id:"ida",title:"ida",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"ida",description:"Analyze DSC in IDA Pro"},sidebar:"cli",previous:{title:"extract",permalink:"/ipsw/docs/cli/ipsw/dyld/extract"},next:{title:"image",permalink:"/ipsw/docs/cli/ipsw/dyld/image"}},d={},p=[{value:"ipsw dyld ida",id:"ipsw-dyld-ida",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],s={toc:p},c="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(c,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"ipsw-dyld-ida"},"ipsw dyld ida"),(0,i.kt)("p",null,"Analyze DSC in IDA Pro"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"ipsw dyld ida <DSC> <DYLIB> [DYLIBS...] [flags]\n")),(0,i.kt)("h3",{id:"options"},"Options"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'  -c, --delete-db         Disassemble a new file (delete the old database)\n  -d, --dependancies      Analyze module dependencies\n  -g, --enable-gui        Compress output folder\n  -h, --help              help for ida\n  -p, --ida-path string   IDA Pro directory (darwin default: /Applications/IDA Pro */ida64.app/Contents/MacOS)\n  -l, --log-file string   IDA log file (default "ida.log")\n  -o, --output string     Output folder (default "/Users/blacktop/Developer/Github/blacktop/ipsw")\n      --slide string      dyld_shared_cache image ASLR slide value (hexadecimal)\n')),(0,i.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"      --color           colorize output\n      --config string   config file (default is $HOME/.ipsw/config.yaml)\n  -V, --verbose         verbose output\n")),(0,i.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/cli/ipsw/dyld"},"ipsw dyld"),"\t - Parse dyld_shared_cache")))}u.isMDXComponent=!0}}]);