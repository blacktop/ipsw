"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5284],{70414:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>r,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var t=n(74848),i=n(28453);const s={id:"ota",title:"ota",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"ota",description:"Download OTAs"},a=void 0,l={id:"cli/ipsw/download/ota",title:"ota",description:"Download OTAs",source:"@site/docs/cli/ipsw/download/ota.md",sourceDirName:"cli/ipsw/download",slug:"/cli/ipsw/download/ota",permalink:"/ipsw/docs/cli/ipsw/download/ota",draft:!1,unlisted:!1,editUrl:"https://github.com/blacktop/ipsw/tree/master/www/docs/cli/ipsw/download/ota.md",tags:[],version:"current",frontMatter:{id:"ota",title:"ota",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"ota",description:"Download OTAs"},sidebar:"cli",previous:{title:"macos",permalink:"/ipsw/docs/cli/ipsw/download/macos"},next:{title:"rss",permalink:"/ipsw/docs/cli/ipsw/download/rss"}},r={},d=[{value:"ipsw download ota",id:"ipsw-download-ota",level:2},{value:"Examples",id:"examples",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function c(e){const o={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.h2,{id:"ipsw-download-ota",children:"ipsw download ota"}),"\n",(0,t.jsx)(o.p,{children:"Download OTAs"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{children:"ipsw download ota [options] [flags]\n"})}),"\n",(0,t.jsx)(o.h3,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-bash",children:"  # Download the iOS 14.8.1 OTA for the iPhone10,1\n  \u276f ipsw download ota --platform ios --version 14.8.1 --device iPhone10,1\n    ? You are about to download 1 OTA files. Continue? Yes\n\t  \u2022 Getting OTA               build=18H107 device=iPhone10,1 version=iOS1481Short\n\t  280.0 MiB / 3.7 GiB [===>------------------------------------------------------| 51m18s\n  # Get all the latest BETA iOS OTAs URLs as JSON\n  \u276f ipsw download ota --platform ios --beta --urls --json\n"})}),"\n",(0,t.jsx)(o.h3,{id:"options",children:"Options"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{children:"      --beta                    Download Beta OTAs\n      --delta                   Download Delta OTAs\n      --driver-kit              Extract DriverKit dyld_shared_cache(s) from remote OTA zip\n      --dyld                    Extract dyld_shared_cache(s) from remote OTA zip\n  -a, --dyld-arch stringArray   dyld_shared_cache architecture(s) to remote extract\n  -f, --flat                    Do NOT perserve directory structure when downloading with --pattern\n  -h, --help                    help for ota\n      --info                    Show all the latest OTAs available\n  -j, --json                    Dump URLs as JSON only\n  -k, --kernel                  Extract kernelcache from remote OTA zip\n      --latest                  Download latest OTAs\n  -o, --output string           Folder to download files to\n      --pattern string          Download remote files that match regex\n  -p, --platform string         Platform to download (ios, watchos, tvos, audioos || accessory, macos, recovery)\n      --rsr                     Download Rapid Security Response OTAs\n      --show-latest-build       Show latest iOS build\n      --show-latest-version     Show latest iOS version\n  -u, --urls                    Dump URLs only\n"})}),"\n",(0,t.jsx)(o.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{children:"      --black-list stringArray   iOS device black list\n  -b, --build string             iOS BuildID (i.e. 16F203)\n      --color                    colorize output\n      --config string            config file (default is $HOME/.config/ipsw/config.yaml)\n  -y, --confirm                  do not prompt user for confirmation\n  -d, --device string            iOS Device (i.e. iPhone11,2)\n      --insecure                 do not verify ssl certs\n  -m, --model string             iOS Model (i.e. D321AP)\n      --no-color                 disable colorize output\n      --proxy string             HTTP/HTTPS proxy\n  -_, --remove-commas            replace commas in IPSW filename with underscores\n      --restart-all              always restart resumable IPSWs\n      --resume-all               always resume resumable IPSWs\n      --skip-all                 always skip resumable IPSWs\n  -V, --verbose                  verbose output\n  -v, --version string           iOS Version (i.e. 12.3.1)\n      --white-list stringArray   iOS device white list\n"})}),"\n",(0,t.jsx)(o.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.a,{href:"/docs/cli/ipsw/download",children:"ipsw download"}),"\t - Download Apple Firmware files (and more)"]}),"\n"]})]})}function p(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,o,n)=>{n.d(o,{R:()=>a,x:()=>l});var t=n(96540);const i={},s=t.createContext(i);function a(e){const o=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function l(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(s.Provider,{value:o},e.children)}}}]);