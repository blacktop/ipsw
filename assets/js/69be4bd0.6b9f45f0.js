"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7635],{52375:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var t=i(85893),s=i(11151);const o={id:"macho",title:"macho",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"macho",description:"Parse an incache dylib file"},c=void 0,r={id:"cli/ipsw/dyld/macho",title:"macho",description:"Parse an incache dylib file",source:"@site/docs/cli/ipsw/dyld/macho.md",sourceDirName:"cli/ipsw/dyld",slug:"/cli/ipsw/dyld/macho",permalink:"/ipsw/docs/cli/ipsw/dyld/macho",draft:!1,unlisted:!1,editUrl:"https://github.com/blacktop/ipsw/tree/master/www/docs/cli/ipsw/dyld/macho.md",tags:[],version:"current",frontMatter:{id:"macho",title:"macho",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"macho",description:"Parse an incache dylib file"},sidebar:"cli",previous:{title:"info",permalink:"/ipsw/docs/cli/ipsw/dyld/info"},next:{title:"o2a",permalink:"/ipsw/docs/cli/ipsw/dyld/o2a"}},l={},d=[{value:"ipsw dyld macho",id:"ipsw-dyld-macho",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function a(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"ipsw-dyld-macho",children:"ipsw dyld macho"}),"\n",(0,t.jsx)(n.p,{children:"Parse an incache dylib file"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"ipsw dyld macho <DSC> <DYLIB> [flags]\n"})}),"\n",(0,t.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"  -a, --all             Parse ALL dylibs\n      --demangle        Demangle symbol names\n  -x, --extract         \ud83d\udea7 Extract the dylib\n      --force           Overwrite existing extracted dylib(s)\n  -h, --help            help for macho\n  -j, --json            Print the TOC as JSON\n  -l, --loads           Print the load commands\n  -o, --objc            Print ObjC info\n  -r, --objc-refs       Print ObjC references\n      --output string   Directory to extract the dylib(s)\n      --search string   Search for byte pattern\n  -f, --starts          Print function starts\n  -s, --strings         Print cstrings\n  -b, --stubs           Print stubs\n  -w, --swift           Print Swift info\n      --swift-all       Print all other Swift sections info\n  -n, --symbols         Print symbols\n"})}),"\n",(0,t.jsx)(n.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"      --color           colorize output\n      --config string   config file (default is $HOME/.config/ipsw/config.yaml)\n      --no-color        disable colorize output\n  -V, --verbose         verbose output\n"})}),"\n",(0,t.jsx)(n.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/docs/cli/ipsw/dyld",children:"ipsw dyld"}),"\t - Parse dyld_shared_cache"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>r,a:()=>c});var t=i(67294);const s={},o=t.createContext(s);function c(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);