"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6922],{3905:(e,i,n)=>{n.d(i,{Zo:()=>l,kt:()=>g});var t=n(67294);function r(e,i,n){return i in e?Object.defineProperty(e,i,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[i]=n,e}function o(e,i){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);i&&(t=t.filter((function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var i=1;i<arguments.length;i++){var n=null!=arguments[i]?arguments[i]:{};i%2?o(Object(n),!0).forEach((function(i){r(e,i,n[i])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(i){Object.defineProperty(e,i,Object.getOwnPropertyDescriptor(n,i))}))}return e}function p(e,i){if(null==e)return{};var n,t,r=function(e,i){if(null==e)return{};var n,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],i.indexOf(n)>=0||(r[n]=e[n]);return r}(e,i);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],i.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var a=t.createContext({}),c=function(e){var i=t.useContext(a),n=i;return e&&(n="function"==typeof e?e(i):s(s({},i),e)),n},l=function(e){var i=c(e.components);return t.createElement(a.Provider,{value:i},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var i=e.children;return t.createElement(t.Fragment,{},i)}},m=t.forwardRef((function(e,i){var n=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,g=d["".concat(a,".").concat(m)]||d[m]||u[m]||o;return n?t.createElement(g,s(s({ref:i},l),{},{components:n})):t.createElement(g,s({ref:i},l))}));function g(e,i){var n=arguments,r=i&&i.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=m;var p={};for(var a in i)hasOwnProperty.call(i,a)&&(p[a]=i[a]);p.originalType=e,p[d]="string"==typeof e?e:r,s[1]=p;for(var c=2;c<o;c++)s[c]=n[c];return t.createElement.apply(null,s)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},54874:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var t=n(87462),r=(n(67294),n(3905));const o={id:"sign",title:"sign",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"sign",description:"Personalize DDI"},s=void 0,p={unversionedId:"cli/ipsw/idev/img/sign",id:"cli/ipsw/idev/img/sign",title:"sign",description:"Personalize DDI",source:"@site/docs/cli/ipsw/idev/img/sign.md",sourceDirName:"cli/ipsw/idev/img",slug:"/cli/ipsw/idev/img/sign",permalink:"/ipsw/docs/cli/ipsw/idev/img/sign",draft:!1,editUrl:"https://github.com/blacktop/ipsw/tree/master/www/docs/cli/ipsw/idev/img/sign.md",tags:[],version:"current",frontMatter:{id:"sign",title:"sign",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"sign",description:"Personalize DDI"},sidebar:"cli",previous:{title:"nonce",permalink:"/ipsw/docs/cli/ipsw/idev/img/nonce"},next:{title:"unmount",permalink:"/ipsw/docs/cli/ipsw/idev/img/unmount"}},a={},c=[{value:"ipsw idev img sign",id:"ipsw-idev-img-sign",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],l={toc:c},d="wrapper";function u(e){let{components:i,...n}=e;return(0,r.kt)(d,(0,t.Z)({},l,n,{components:i,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"ipsw-idev-img-sign"},"ipsw idev img sign"),(0,r.kt)("p",null,"Personalize DDI"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"ipsw idev img sign [flags]\n")),(0,r.kt)("h3",{id:"options"},"Options"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"  -a, --ap-item string                     Ap'Item to personalize (example: --ap-item 'Ap,SikaFuse')\n  -b, --board-id uint                      Device ApBoardID\n  -c, --chip-id uint                       Device ApChipID\n  -e, --ecid uint                          Device ApECID\n  -h, --help                               help for sign\n  -i, --input ipsw idev img nonce --json   JSON file from ipsw idev img nonce --json command\n      --insecure                           do not verify ssl certs\n  -m, --manifest string                    BuildManifest.plist to use\n  -n, --nonce string                       Device ApNonce\n  -o, --output string                      Folder to write signature to\n      --proxy string                       HTTP/HTTPS proxy\n  -x, --xcode string                       Path to Xcode.app\n")),(0,r.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"      --color           colorize output\n      --config string   config file (default is $HOME/.config/ipsw/config.yaml)\n  -u, --udid string     Device UniqueDeviceID to connect to\n  -V, --verbose         verbose output\n")),(0,r.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/cli/ipsw/idev/img"},"ipsw idev img"),"\t - Image commands")))}u.isMDXComponent=!0}}]);