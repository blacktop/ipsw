"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7107],{83398:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>n,metadata:()=>c,toc:()=>o});var d=i(74848),s=i(28453);const n={id:"extract",title:"extract",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"extract",description:"Extract dylib from dyld_shared_cache"},r=void 0,c={id:"cli/ipsw/dyld/extract",title:"extract",description:"Extract dylib from dyld_shared_cache",source:"@site/docs/cli/ipsw/dyld/extract.md",sourceDirName:"cli/ipsw/dyld",slug:"/cli/ipsw/dyld/extract",permalink:"/ipsw/docs/cli/ipsw/dyld/extract",draft:!1,unlisted:!1,editUrl:"https://github.com/blacktop/ipsw/tree/master/www/docs/cli/ipsw/dyld/extract.md",tags:[],version:"current",frontMatter:{id:"extract",title:"extract",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"extract",description:"Extract dylib from dyld_shared_cache"},sidebar:"cli",previous:{title:"dump",permalink:"/ipsw/docs/cli/ipsw/dyld/dump"},next:{title:"ida",permalink:"/ipsw/docs/cli/ipsw/dyld/ida"}},l={},o=[{value:"ipsw dyld extract",id:"ipsw-dyld-extract",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function a(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(t.h2,{id:"ipsw-dyld-extract",children:"ipsw dyld extract"}),"\n",(0,d.jsx)(t.p,{children:"Extract dylib from dyld_shared_cache"}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{children:"ipsw dyld extract <DSC> <DYLIB> [flags]\n"})}),"\n",(0,d.jsx)(t.h3,{id:"options",children:"Options"}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{children:"  -a, --all             Split ALL dylibs\n  -c, --cache string    Path to .a2s addr to sym cache file (speeds up analysis)\n      --force           Overwrite existing extracted dylib(s)\n  -h, --help            help for extract\n      --objc            Add ObjC metadata to extracted dylib(s) symtab\n  -o, --output string   Directory to extract the dylib(s)\n      --slide           Apply slide info to extracted dylib(s)\n      --stubs           Add stub islands to extracted dylib(s) symtab\n"})}),"\n",(0,d.jsx)(t.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{children:"      --color           colorize output\n      --config string   config file (default is $HOME/.config/ipsw/config.yaml)\n  -V, --verbose         verbose output\n"})}),"\n",(0,d.jsx)(t.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,d.jsxs)(t.ul,{children:["\n",(0,d.jsxs)(t.li,{children:[(0,d.jsx)(t.a,{href:"/docs/cli/ipsw/dyld",children:"ipsw dyld"}),"\t - Parse dyld_shared_cache"]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(a,{...e})}):a(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>c});var d=i(96540);const s={},n=d.createContext(s);function r(e){const t=d.useContext(n);return d.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),d.createElement(n.Provider,{value:t},e.children)}}}]);