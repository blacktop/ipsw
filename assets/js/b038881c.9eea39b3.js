"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[624],{70305:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>c,frontMatter:()=>t,metadata:()=>r,toc:()=>d});var o=i(85893),l=i(11151);const t={id:"appledb",title:"appledb",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"appledb",description:"Download IPSWs from appledb"},s=void 0,r={id:"cli/ipsw/download/appledb",title:"appledb",description:"Download IPSWs from appledb",source:"@site/docs/cli/ipsw/download/appledb.md",sourceDirName:"cli/ipsw/download",slug:"/cli/ipsw/download/appledb",permalink:"/ipsw/docs/cli/ipsw/download/appledb",draft:!1,unlisted:!1,editUrl:"https://github.com/blacktop/ipsw/tree/master/www/docs/cli/ipsw/download/appledb.md",tags:[],version:"current",frontMatter:{id:"appledb",title:"appledb",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"appledb",description:"Download IPSWs from appledb"},sidebar:"cli",previous:{title:"download",permalink:"/ipsw/docs/cli/ipsw/download/"},next:{title:"dev",permalink:"/ipsw/docs/cli/ipsw/download/dev"}},a={},d=[{value:"ipsw download appledb",id:"ipsw-download-appledb",level:2},{value:"Examples",id:"examples",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function p(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"ipsw-download-appledb",children:"ipsw download appledb"}),"\n",(0,o.jsx)(n.p,{children:"Download IPSWs from appledb"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"ipsw download appledb [flags]\n"})}),"\n",(0,o.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"  # Download the iOS 16.5 beta 4 kernelcache from remote IPSW\n  \u276f ipsw download appledb --os iOS --version '16.5 beta 4' --device iPhone15,2 --kernel\n   \u2022 Querying AppleDB...\n   \u2022 Parsing remote IPSW       build=20F5059a devices=iPhone15,2 version=16.5\n   \u2022 Extracting remote kernelcache\n      \u2022 Writing 20F5059a__iPhone15,2/kernelcache.release.iPhone15,2\n"})}),"\n",(0,o.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'  -a, --api                   Use Github API\n      --api-token string      Github API Token\n      --beta                  Download beta IPSWs\n  -f, --flat                  Do NOT perserve directory structure when downloading with --pattern\n  -h, --help                  help for appledb\n  -j, --json                  Dump DB query results as JSON\n      --kernel                Extract kernelcache from remote IPSW\n      --latest                Download latest IPSWs\n      --os stringArray        Operating system to download (audioOS, bridgeOS, iOS, iPadOS, iPodOS, macOS, tvOS, watchOS)\n  -o, --output string         Folder to download files to\n      --pattern string        Download remote files that match regex\n  -p, --prereq-build string   OTA prerequisite build\n      --type string           FW type to download (ipsw, ota, rsr) (default "ipsw")\n  -u, --urls                  Dump URLs only\n      --usb                   Download IPSWs for USB attached iDevices\n'})}),"\n",(0,o.jsx)(n.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"      --black-list stringArray   iOS device black list\n  -b, --build string             iOS BuildID (i.e. 16F203)\n      --color                    colorize output\n      --config string            config file (default is $HOME/.config/ipsw/config.yaml)\n  -y, --confirm                  do not prompt user for confirmation\n  -d, --device string            iOS Device (i.e. iPhone11,2)\n      --insecure                 do not verify ssl certs\n  -m, --model string             iOS Model (i.e. D321AP)\n      --no-color                 disable colorize output\n      --proxy string             HTTP/HTTPS proxy\n  -_, --remove-commas            replace commas in IPSW filename with underscores\n      --restart-all              always restart resumable IPSWs\n      --resume-all               always resume resumable IPSWs\n      --skip-all                 always skip resumable IPSWs\n  -V, --verbose                  verbose output\n  -v, --version string           iOS Version (i.e. 12.3.1)\n      --white-list stringArray   iOS device white list\n"})}),"\n",(0,o.jsx)(n.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/docs/cli/ipsw/download",children:"ipsw download"}),"\t - Download Apple Firmware files (and more)"]}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>r,a:()=>s});var o=i(67294);const l={},t=o.createContext(l);function s(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);