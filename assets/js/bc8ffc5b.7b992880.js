"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9608],{1859:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>d,metadata:()=>r,toc:()=>l});var t=n(74848),o=n(28453);const d={id:"dev",title:"dev",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"dev",description:"Enabled Developer Mode on device"},s=void 0,r={id:"cli/ipsw/idev/amfi/dev",title:"dev",description:"Enabled Developer Mode on device",source:"@site/docs/cli/ipsw/idev/amfi/dev.md",sourceDirName:"cli/ipsw/idev/amfi",slug:"/cli/ipsw/idev/amfi/dev",permalink:"/ipsw/docs/cli/ipsw/idev/amfi/dev",draft:!1,unlisted:!1,editUrl:"https://github.com/blacktop/ipsw/tree/master/www/docs/cli/ipsw/idev/amfi/dev.md",tags:[],version:"current",frontMatter:{id:"dev",title:"dev",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"dev",description:"Enabled Developer Mode on device"},sidebar:"cli",previous:{title:"amfi",permalink:"/ipsw/docs/cli/ipsw/idev/amfi/"},next:{title:"apps",permalink:"/ipsw/docs/cli/ipsw/idev/apps/"}},c={},l=[{value:"ipsw idev amfi dev",id:"ipsw-idev-amfi-dev",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function a(e){const i={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h2,{id:"ipsw-idev-amfi-dev",children:"ipsw idev amfi dev"}),"\n",(0,t.jsx)(i.p,{children:"Enabled Developer Mode on device"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"ipsw idev amfi dev [flags]\n"})}),"\n",(0,t.jsx)(i.h3,{id:"options",children:"Options"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"  -h, --help   help for dev\n  -p, --post   Enable post restart (acknowledges prompt after reboot)\n"})}),"\n",(0,t.jsx)(i.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"      --color           colorize output\n      --config string   config file (default is $HOME/.config/ipsw/config.yaml)\n      --no-color        disable colorize output\n  -u, --udid string     Device UniqueDeviceID to connect to\n  -V, --verbose         verbose output\n"})}),"\n",(0,t.jsx)(i.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"/docs/cli/ipsw/idev/amfi",children:"ipsw idev amfi"}),"\t - amfi commands"]}),"\n"]})]})}function p(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>s,x:()=>r});var t=n(96540);const o={},d=t.createContext(o);function s(e){const i=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(d.Provider,{value:i},e.children)}}}]);