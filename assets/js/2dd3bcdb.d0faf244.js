"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7965],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var i=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},a=Object.keys(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=i.createContext({}),d=function(e){var t=i.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=d(e.components);return i.createElement(p.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),s=d(r),u=n,f=s["".concat(p,".").concat(u)]||s[u]||m[u]||a;return r?i.createElement(f,l(l({ref:t},c),{},{components:r})):i.createElement(f,l({ref:t},c))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,l=new Array(a);l[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[s]="string"==typeof e?e:n,l[1]=o;for(var d=2;d<a;d++)l[d]=r[d];return i.createElement.apply(null,l)}return i.createElement.apply(null,r)}u.displayName="MDXCreateElement"},1833:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var i=r(7462),n=(r(7294),r(3905));const a={id:"image",title:"image",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"image",description:"Dump image array info"},l=void 0,o={unversionedId:"cli/ipsw/dyld/image",id:"cli/ipsw/dyld/image",title:"image",description:"Dump image array info",source:"@site/docs/cli/ipsw/dyld/image.md",sourceDirName:"cli/ipsw/dyld",slug:"/cli/ipsw/dyld/image",permalink:"/ipsw/docs/cli/ipsw/dyld/image",draft:!1,editUrl:"https://github.com/blacktop/ipsw/tree/master/www/docs/cli/ipsw/dyld/image.md",tags:[],version:"current",frontMatter:{id:"image",title:"image",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"image",description:"Dump image array info"},sidebar:"cli",previous:{title:"ida",permalink:"/ipsw/docs/cli/ipsw/dyld/ida"},next:{title:"imports",permalink:"/ipsw/docs/cli/ipsw/dyld/imports"}},p={},d=[{value:"ipsw dyld image",id:"ipsw-dyld-image",level:2},{value:"Examples",id:"examples",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],c={toc:d},s="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(s,(0,i.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"ipsw-dyld-image"},"ipsw dyld image"),(0,n.kt)("p",null,"Dump image array info"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"ipsw dyld image <dyld_shared_cache> <IMAGE> [flags]\n")),(0,n.kt)("h3",{id:"examples"},"Examples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"  # List all the apps\n  \u276f ipsw dyld image <dyld_shared_cache>\n  # Dump the closure info for a in-cache dylib\n  \u276f ipsw dyld image <dyld_shared_cache> Foundation\n  # Dump the closure info for an app\n  \u276f ipsw dyld image <dyld_shared_cache> /usr/libexec/timed\n")),(0,n.kt)("h3",{id:"options"},"Options"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"  -h, --help   help for image\n")),(0,n.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"      --color           colorize output\n      --config string   config file (default is $HOME/.ipsw/config.yaml)\n  -V, --verbose         verbose output\n")),(0,n.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/cli/ipsw/dyld"},"ipsw dyld"),"\t - Parse dyld_shared_cache")))}m.isMDXComponent=!0}}]);