"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[82],{3905:(e,t,n)=>{n.d(t,{Zo:()=>f,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function _(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),c=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):_(_({},t),e)),n},f=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},l="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,f=o(e,["components","mdxType","originalType","parentName"]),l=c(n),u=r,d=l["".concat(i,".").concat(u)]||l[u]||p[u]||s;return n?a.createElement(d,_(_({ref:t},f),{},{components:n})):a.createElement(d,_({ref:t},f))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,_=new Array(s);_[0]=u;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[l]="string"==typeof e?e:r,_[1]=o;for(var c=2;c<s;c++)_[c]=n[c];return a.createElement.apply(null,_)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4699:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>_,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const s={description:"All the MANY ways you can parse a kernelcache."},_="Parse kernelcache",o={unversionedId:"guides/kernel",id:"guides/kernel",title:"Parse kernelcache",description:"All the MANY ways you can parse a kernelcache.",source:"@site/docs/guides/kernel.md",sourceDirName:"guides",slug:"/guides/kernel",permalink:"/ipsw/docs/guides/kernel",draft:!1,editUrl:"https://github.com/blacktop/ipsw/tree/master/www/docs/guides/kernel.md",tags:[],version:"current",frontMatter:{description:"All the MANY ways you can parse a kernelcache."},sidebar:"docs",previous:{title:"Parse MachO files",permalink:"/ipsw/docs/guides/macho"},next:{title:"Parse dyld_shared_cache",permalink:"/ipsw/docs/guides/dyld"}},i={},c=[{value:"<strong>kernel version</strong>",id:"kernel-version",level:3},{value:"<strong>kernel dec</strong>",id:"kernel-dec",level:3},{value:"<strong>kernel extract</strong>",id:"kernel-extract",level:3},{value:"<strong>kernel kexts</strong>",id:"kernel-kexts",level:3},{value:"<strong>kernel sbopts</strong>",id:"kernel-sbopts",level:3},{value:"<strong>kernel diff</strong>",id:"kernel-diff",level:3},{value:"<strong>kernel symbolsets</strong>",id:"kernel-symbolsets",level:3},{value:"<strong>kernel ctfdump</strong>",id:"kernel-ctfdump",level:3},{value:"Dump CTF info",id:"dump-ctf-info",level:4},{value:"Dump as JSON",id:"dump-as-json",level:4},{value:"Dump a single <code>type</code>",id:"dump-a-single-type",level:4},{value:"<strong>kernel dwarf</strong>",id:"kernel-dwarf",level:3},{value:"\ud83d\udea7 Dump DWARF debug information",id:"-dump-dwarf-debug-information",level:4}],f={toc:c},l="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(l,(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"parse-kernelcache"},"Parse kernelcache"),(0,r.kt)("h3",{id:"kernel-version"},(0,r.kt)("strong",{parentName:"h3"},"kernel version")),(0,r.kt)("p",null,"Dump kernelcache version"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'\u276f ipsw kernel version kernelcache.release.iPhone14,2\n"Darwin Kernel Version 21.5.0: Mon Mar 28 22:30:10 PDT 2022; root:xnu-8020.120.43.112.1~1/RELEASE_ARM64_T8110"\n"Apple LLVM 13.1.6 (clang-1316.0.21.3) [+internal-os, ptrauth-isa=deployment-target-based]"\n')),(0,r.kt)("p",null,"Dump as JSON"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\u276f ipsw kernel version kernelcache.release.iPhone14,2 --json | jq .\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "kernel": {\n    "darwin": "21.5.0",\n    "date": "2022-03-28T22:30:10Z",\n    "xnu": "8020.120.43.112.1~1",\n    "type": "RELEASE",\n    "arch": "ARM64",\n    "cpu": "T8110"\n  },\n  "llvm": {\n    "version": "13.1.6",\n    "clang": "1316.0.21.3",\n    "flags": ["+internal-os", "ptrauth-isa=deployment-target-based"]\n  }\n}\n')),(0,r.kt)("h3",{id:"kernel-dec"},(0,r.kt)("strong",{parentName:"h3"},"kernel dec")),(0,r.kt)("p",null,"Decompress a previously extracted ",(0,r.kt)("strong",{parentName:"p"},"kernelcache")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw kernel dec kernelcache.release.iphone11\n")),(0,r.kt)("h3",{id:"kernel-extract"},(0,r.kt)("strong",{parentName:"h3"},"kernel extract")),(0,r.kt)("p",null,"Extract KEXT(s) from kernelcache"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw kernel extract kernelcache.release.iPhone15,2 sandbox\n   \u2022 Created sandbox\n")),(0,r.kt)("p",null,"Dump them all"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw kernel extract kernelcache.release.iPhone15,2 --all --output /tmp/KEXTs\n   \u2022 Extracting all KEXTs...\n      \u2022 Created /tmp/KEXTs/com.apple.kernel\n      \u2022 Created /tmp/KEXTs/com.apple.AGXFirmwareKextG15P_A0RTBuddy\n      \u2022 Created /tmp/KEXTs/com.apple.AGXFirmwareKextRTBuddy64\n      \u2022 Created /tmp/KEXTs/com.apple.AGXG15P_A0\n      \u2022 Created /tmp/KEXTs/com.apple.driver.AOPTouchKext\n      \u2022 Created /tmp/KEXTs/com.apple.driver.ASIOKit\n      \u2022 Created /tmp/KEXTs/com.apple.AUC\n      \u2022 Created /tmp/KEXTs/com.apple.driver.AppleA7IOP\n      \u2022 Created /tmp/KEXTs/com.apple.driver.AppleALSColorSensor\n      \u2022 Created /tmp/KEXTs/com.apple.driver.AppleAOPAudio\n      \u2022 Created /tmp/KEXTs/com.apple.driver.AppleAOPVoiceTrigger\n      \u2022 Created /tmp/KEXTs/com.apple.iokit.AppleARMIISAudio\n      \u2022 Created /tmp/KEXTs/com.apple.driver.AppleARMPMU\n      \u2022 Created /tmp/KEXTs/com.apple.driver.AppleARMPlatform\n      \u2022 Created /tmp/KEXTs/com.apple.driver.AppleARMWatchdogTimer\n      <SNIP>\n")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"This only works on the modern ",(0,r.kt)("inlineCode",{parentName:"p"},"MH_FILESET")," kernelcaches")),(0,r.kt)("h3",{id:"kernel-kexts"},(0,r.kt)("strong",{parentName:"h3"},"kernel kexts")),(0,r.kt)("p",null,"List all the kernelcache's KEXTs"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw kernel kexts kernelcache.release.iphone12.decompressed\n\nFOUND: 230\ncom.apple.kpi.mach (19.2.0)\ncom.apple.kpi.private (19.2.0)\ncom.apple.kpi.unsupported (19.2.0)\ncom.apple.kpi.iokit (19.2.0)\ncom.apple.kpi.libkern (19.2.0)\ncom.apple.kpi.bsd (19.2.0)\ncom.apple.iokit.IONetworkingFamily (3.4)\ncom.apple.iokit.IOTimeSyncFamily (810.1)\ncom.apple.iokit.IOPCIFamily (2.9)\ncom.apple.driver.IOACIPCFamily (1)\ncom.apple.iokit.IOSkywalkFamily (1)\ncom.apple.driver.AppleIPAppender (1.0)\n<SNIP>\n")),(0,r.kt)("p",null,"Diff two kernelcache's KEXTs"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw kernel kexts --diff 18A8395/kernelcache 18E5178a/kernelcache # iOS 14.1 vs. iOS 14.5beta4\n   \u2022 Differences found\ncom.apple.AGXFirmwareKextG14PRTBuddy (1)\ncom.apple.AGXFirmwareKextRTBuddy64 (187.3390.17.2)\ncom.apple.AGXG14P (187.3390.17.2)\ncom.apple.AUC (1.0)\n<SNIP>\n")),(0,r.kt)("h3",{id:"kernel-sbopts"},(0,r.kt)("strong",{parentName:"h3"},"kernel sbopts")),(0,r.kt)("p",null,"List kernel sandbox operations"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw kernel sbopts 18A8395/kernelcache # iOS 14.1\n")),(0,r.kt)("p",null,"Diff two kernelcache's sandbox operations"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw kernel sbopts --diff 18A8395/kernelcache 18E5178a/kernelcache # iOS 14.1 vs. iOS 14.5beta4\n   \u2022 Differences found\n+mach-task*\n+mach-task-inspect\n\n+mach-task-read\n\n+process-codesigning*\n+process-codesigning-blob-get\n+process-codesigning-cdhash-get\n+process-codesigning-entitlements-blob-get\n+process-codesigning-identity-get\n\n+process-codesigning-teamid-get\n+process-codesigning-text-offset-get\n\n+socket-option*\n+socket-option-get\n+socket-option-set\n\n+system-fcntl\n")),(0,r.kt)("h3",{id:"kernel-diff"},(0,r.kt)("strong",{parentName:"h3"},"kernel diff")),(0,r.kt)("p",null,"\ud83d\udea7 ",(0,r.kt)("strong",{parentName:"p"},"[WIP]")," \ud83d\udea7"),(0,r.kt)("p",null,"I am playing with the idea of ",(0,r.kt)("inlineCode",{parentName:"p"},"diffing")," kernelcaches by creating directory structures of Apple's src from assert strings."),(0,r.kt)("p",null,"Then you could use ",(0,r.kt)("inlineCode",{parentName:"p"},"git diff")," or something to get a quick ",(0,r.kt)("strong",{parentName:"p"},"high")," level view of what Apple has changed by seeing new files being added or removed as well as seeing the line numbers of the assert strings move around."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw kernel diff kernelcache.release.iphone11\n")),(0,r.kt)("p",null,"You can see an example of what this outputs ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/blacktop/ipsw/tree/master/pkg/kernelcache/diff/Library/Caches/com.apple.xbs/Sources"},"HERE")),(0,r.kt)("h3",{id:"kernel-symbolsets"},(0,r.kt)("strong",{parentName:"h3"},"kernel symbolsets")),(0,r.kt)("p",null,"Dump kernel symbolsets"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw kernel symbolsets 20D47__iPhone15,2/kernelcache.release.iPhone15,2\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-md"},"Symbol Sets\n===========\n\ncom.apple.kpi.bsd: (22.3.0)\n---------------------------\n_VNOP_BWRITE\n_VNOP_FSYNC\n_VNOP_IOCTL\n_VNOP_READ\n_VNOP_STRATEGY\n_VNOP_WRITE\n_advisory_read\n_advisory_read_ext\n_bcd2bin_data\n_bdevsw_add\n_bdevsw_isfree\n_bdevsw_remove\n<SNIP>\n")),(0,r.kt)("h3",{id:"kernel-ctfdump"},(0,r.kt)("strong",{parentName:"h3"},"kernel ctfdump")),(0,r.kt)("h4",{id:"dump-ctf-info"},"Dump CTF info"),(0,r.kt)("p",null,"KDK kernelcaches contain CTF - ",(0,r.kt)("em",{parentName:"p"},"Compact ANSI-C Type Format")," data which is used by dtrace. It's a data format much like DWARF and contains and absolute treasure trove for peeps REing the kernels (types, globals and func signatures)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw ctfdump KDK\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"- CTF Header -----------------------------------------------------------------\n\nMagic        = 0xcff1\nVersion      = 3\nFlags        = 0x1\nParent Label = (anon)\nParent Name  = (anon)\nLabel Offset = 0\nObj Offset   = 8\nFunc Offset  = 0x247a\nType Offset  = 0x1acf8\nStr Offset   = 0xda4f4\nStr Len      = 0x763dc\n\n\n- Types ----------------------------------------------------------------------\n\n[1] INTEGER short encoding=SIGNED offset=0 bits=16\n\n<2> INTEGER char encoding=SIGNED CHAR offset=0 bits=8\n\n[3] INTEGER unsigned char encoding=CHAR offset=0 bits=8\n\n<4> TYPEDEF u_char refers to 3\n<5> POINTER (anon) refers to 2\n<6> TYPEDEF caddr_t refers to 5\n[7] UNION (anon) (8 bytes)\n        rmu_mask type=6 off=0x0\n        rmu_leaf type=15 off=0x0\n\n<8> INTEGER int encoding=SIGNED offset=0 bits=32\n\n<9> STRUCT radix_mask (32 bytes)\n    rm_bit    type=1  off=0x0\n    rm_unused type=2  off=0x10\n    rm_flags  type=4  off=0x18\n    rm_mklist type=10 off=0x40\n    rm_rmu    type=7  off=0x80\n    rm_refs   type=8  off=0xc0\n<SNIP>\n\n- Data Objects ---------------------------------------------------------------\n\n0xfffffe00072bf0a0: <unknown> AccelerateCrypto_SHA256_compress\n0xfffffe00071b4ce8: boot_args * BootArgs\n0xfffffe0007dc0b20: cpu_data_entry_t[8] CpuDataEntries\n0xfffffe00072a4a58: RealDTEntry DTRootNode\n0xfffffe0007dc1dd0: unsigned int DebugContextCount\n0xfffffe0007dfd708: <unknown> IOLockGroup\n0xfffffe0007dfd6fc: <unknown> IOZeroTvalspec\n0xfffffe000700b114: const audit_token_t KERNEL_AUDIT_TOKEN\n0xfffffe000700b10c: const security_token_t KERNEL_SECURITY_TOKEN\n0xfffffe00071ab838: struct kalloc_heap[1] KHEAP_DATA_BUFFERS\n0xfffffe00071ab240: struct kalloc_heap[1] KHEAP_DEFAULT\n0xfffffe0007243660: struct kalloc_heap[1] KHEAP_DTRACE\n0xfffffe00071abd10: struct kalloc_heap[1] KHEAP_KEXT\n0xfffffe00072458a0: struct kalloc_heap[1] KHEAP_VFS_BIO\n<SNIP>\n\n- Functions ------------------------------------------------------------------\n\n0xfffffe0007cce944: void Assert();\n0xfffffe0007943624: int CURSIG(proc_t);\n0xfffffe00074df8c8: void ClearIdlePop();\n0xfffffe00073250dc: void Debugger();\n0xfffffe00074dd82c: void DebuggerCall();\n0xfffffe0007324ebc: kern_return_t DebuggerTrapWithState(debugger_op, const char *, const char *, va_list *, uint64_t, void *, boolean_t, unsigned long);\n0xfffffe00073250f0: void DebuggerWithContext();\n0xfffffe00074dd608: void DebuggerXCall();\n0xfffffe00074dd070: kern_return_t DebuggerXCallEnter(boolean_t);\n0xfffffe00074dd554: void DebuggerXCallReturn();\n0xfffffe000748eb1c: unsigned int IODefaultCacheBits(addr64_t);\n0xfffffe000748ee0c: ppnum_t IOGetLastPageNumber();\n0xfffffe000748ee14: void IOGetTime();\n0xfffffe000748eb2c: kern_return_t IOMapPages(vm_map_t, mach_vm_address_t, mach_vm_address_t, mach_vm_size_t, unsigned int);\n")),(0,r.kt)("h4",{id:"dump-as-json"},"Dump as JSON"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw ctfdump KDK --json\n   \u2022 Creating ctfdump.json\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "header": {\n        "preamble": {\n            "magic": 53233,\n            "version": 3,\n            "flags": 1\n        },\n        "obj_offset": 8,\n        "func_offset": 9338,\n        "type_offset": 109816,\n        "str_offset": 894196,\n        "str_len": 484316,\n        "parent_label": "(anon)",\n        "parent_name": "(anon)"\n    },\n    "types": {\n        "1": {\n            "id": 1,\n            "name": "short",\n            "info": {\n                "kind": "INTEGER",\n                "var_len": 1\n            },\n            "encoding": {\n                "encoding": "SIGNED",\n                "bits": 16\n            }\n        },\n        "10": {\n            "id": 10,\n            "name": "(anon)",\n            "info": {\n                "kind": "POINTER"\n            },\n            "reference": "struct radix_mask"\n        },\n<SNIP>\n')),(0,r.kt)("h4",{id:"dump-a-single-type"},"Dump a single ",(0,r.kt)("inlineCode",{parentName:"h4"},"type")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw ctfdump KDK/macOS12beta/kernel.development.t8101 task > task.h\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f cat task.h\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"struct task\n{                                                                 // (1728 bytes)\n    lck_mtx_t lock;                                               // off=0x0\n    os_refcnt_t ref_count;                                        // off=0x80\n    struct os_refgrp *ref_group;                                  // off=0x100\n    lck_spin_t ref_group_lock;                                    // off=0x140\n    _Bool active;                                                 // off=0x1c0\n    _Bool ipc_active;                                             // off=0x1c8\n    _Bool halting;                                                // off=0x1d0\n    _Bool message_app_suspended;                                  // off=0x1d8\n    uint32_t vtimers;                                             // off=0x1e0\n    uint64_t task_uniqueid;                                       // off=0x200\n    vm_map_t __ptrauth(DA, true, 5ef8) map;                       // off=0x240\n    queue_chain_t tasks;                                          // off=0x280\n    struct task_watchports *watchports;                           // off=0x300\n    turnstile_inheritor_t returnwait_inheritor;                   // off=0x340\n    sched_group_t sched_group;                                    // off=0x380\n    queue_head_t threads;                                         // off=0x3c0\n    struct restartable_ranges *restartable_ranges;                // off=0x440\n    processor_set_t pset_hint;                                    // off=0x480\n    struct affinity_space *affinity_space;                        // off=0x4c0\n    int thread_count;                                             // off=0x500\n    uint32_t active_thread_count;                                 // off=0x520\n    int suspend_count;                                            // off=0x540\n    integer_t user_stop_count;                                    // off=0x560\n    integer_t legacy_stop_count;                                  // off=0x580\n    int16_t priority;                                             // off=0x5a0\n    int16_t max_priority;                                         // off=0x5b0\n    integer_t importance;                                         // off=0x5c0\n    security_token_t sec_token;                                   // off=0x5e0\n    audit_token_t audit_token;                                    // off=0x620\n    uint64_t total_user_time;                                     // off=0x740\n    uint64_t total_system_time;                                   // off=0x780\n    uint64_t total_ptime;                                         // off=0x7c0\n    uint64_t total_runnable_time;                                 // off=0x800\n    lck_mtx_t itk_lock_data;                                      // off=0x840\n    struct ipc_port *__ptrauth(DA, true, 68c5) itk_task_ports[4]; // off=0x8c0\n    struct ipc_port *__ptrauth(DA, true, 4447) itk_settable_self; // off=0x9c0\n    struct ipc_port *__ptrauth(DA, true, 58ef) itk_self;          // off=0xa00\n    struct exception_action exc_actions[14];                      // off=0xa40\n    struct ipc_port *__ptrauth(DA, true, bb51) itk_host;          // off=0x1840\n    struct ipc_port *__ptrauth(DA, true, e868) itk_bootstrap;     // off=0x1880\n    struct ipc_port *__ptrauth(DA, true, b8b1) itk_debug_control; // off=0x18c0\n    struct ipc_port *__ptrauth(DA, true, ba93) itk_task_access;   // off=0x1900\n    struct ipc_port *__ptrauth(DA, true, 0ecf) itk_resume;        // off=0x1940\n    struct ipc_port *__ptrauth(DA, true, a454) itk_registered[3]; // off=0x1980\n    ipc_port_t *__ptrauth(DA, true, ec7b) itk_dyld_notify;        // off=0x1a40\n    struct ipc_space *__ptrauth(DA, true, 8280) itk_space;        // off=0x1a80\n    ledger_t ledger;                                              // off=0x1ac0\n    queue_head_t semaphore_list;                                  // off=0x1b00\n    int semaphores_owned;                                         // off=0x1b80\n    unsigned int priv_flags;                                      // off=0x1ba0\n    void *__ptrauth(DA, true, 1d9a) task_debug;                   // off=0x1bc0\n    uint64_t rop_pid;                                             // off=0x1c00\n    uint64_t jop_pid;                                             // off=0x1c40\n    uint8_t disable_user_jop;                                     // off=0x1c80\n    arm64_uexc_region_t uexc;                                     // off=0x1cc0\n    counter_t faults;                                             // off=0x1dc0\n    integer_t decompressions;                                     // off=0x1e00\n    integer_t pageins;                                            // off=0x1e20\n    integer_t cow_faults;                                         // off=0x1e40\n    integer_t messages_sent;                                      // off=0x1e60\n    integer_t messages_received;                                  // off=0x1e80\n    integer_t syscalls_mach;                                      // off=0x1ea0\n    integer_t syscalls_unix;                                      // off=0x1ec0\n    uint32_t c_switch;                                            // off=0x1ee0\n    uint32_t p_switch;                                            // off=0x1f00\n    uint32_t ps_switch;                                           // off=0x1f20\n    void *__ptrauth(DA, true, ce5a) bsd_info;                     // off=0x1f40\n    kcdata_descriptor_t corpse_info;                              // off=0x1f80\n    uint64_t crashed_thread_id;                                   // off=0x1fc0\n    queue_chain_t corpse_tasks;                                   // off=0x2000\n    struct label *crash_label;                                    // off=0x2080\n    uint8_t *mach_trap_filter_mask;                               // off=0x20c0\n    uint8_t *mach_kobj_filter_mask;                               // off=0x2100\n    struct vm_shared_region *shared_region;                       // off=0x2140\n    char *shared_region_id;                                       // off=0x2180\n    _Bool shared_region_auth_remapped;                            // off=0x21c0\n    volatile uint32_t t_flags;                                    // off=0x21e0\n    uint32_t t_procflags;                                         // off=0x2200\n    uint8_t t_returnwaitflags;                                    // off=0x2220\n    mach_vm_address_t all_image_info_addr;                        // off=0x2240\n    mach_vm_size_t all_image_info_size;                           // off=0x2280\n    uint32_t t_kpc;                                               // off=0x22c0\n    boolean_t pidsuspended;                                       // off=0x22e0\n    boolean_t frozen;                                             // off=0x2300\n    boolean_t changing_freeze_state;                              // off=0x2320\n    unsigned short policy_ru_cpu;                                 // off=0x2340\n    unsigned short policy_ru_cpu_ext;                             // off=0x2344\n    unsigned short applied_ru_cpu;                                // off=0x2348\n    unsigned short applied_ru_cpu_ext;                            // off=0x234c\n    uint8_t rusage_cpu_flags;                                     // off=0x2350\n    uint8_t rusage_cpu_percentage;                                // off=0x2358\n    uint8_t rusage_cpu_perthr_percentage;                         // off=0x2360\n    int8_t suspends_outstanding;                                  // off=0x2368\n    uint64_t rusage_cpu_interval;                                 // off=0x2380\n    uint64_t rusage_cpu_perthr_interval;                          // off=0x23c0\n    uint64_t rusage_cpu_deadline;                                 // off=0x2400\n    thread_call_t rusage_cpu_callt;                               // off=0x2440\n    queue_head_t task_watchers;                                   // off=0x2480\n    int num_taskwatchers;                                         // off=0x2500\n    int watchapplying;                                            // off=0x2520\n    struct bank_task *bank_context;                               // off=0x2540\n    struct ipc_importance_task *task_imp_base;                    // off=0x2580\n    vm_extmod_statistics_data_t extmod_statistics;                // off=0x25c0\n    struct task_requested_policy requested_policy;                // off=0x2740\n    struct task_effective_policy effective_policy;                // off=0x2780\n    unsigned int low_mem_notified_warn;                           // off=0x27c0\n    unsigned int low_mem_notified_critical;                       // off=0x27c1\n    unsigned int purged_memory_warn;                              // off=0x27c2\n    unsigned int purged_memory_critical;                          // off=0x27c3\n    unsigned int low_mem_privileged_listener;                     // off=0x27c4\n    unsigned int mem_notify_reserved;                             // off=0x27c5\n    unsigned int memlimit_is_active;                              // off=0x27e0\n    unsigned int memlimit_is_fatal;                               // off=0x27e1\n    unsigned int memlimit_active_exc_resource;                    // off=0x27e2\n    unsigned int memlimit_inactive_exc_resource;                  // off=0x27e3\n    unsigned int memlimit_attrs_reserved;                         // off=0x27e4\n    io_stat_info_t task_io_stats;                                 // off=0x2800\n    struct task_writes_counters task_writes_counters_internal;    // off=0x2840\n    struct task_writes_counters task_writes_counters_external;    // off=0x2940\n    struct _cpu_time_qos_stats cpu_time_eqos_stats;               // off=0x2a40\n    struct _cpu_time_qos_stats cpu_time_rqos_stats;               // off=0x2c00\n    uint32_t task_timer_wakeups_bin_1;                            // off=0x2dc0\n    uint32_t task_timer_wakeups_bin_2;                            // off=0x2de0\n    uint64_t task_gpu_ns;                                         // off=0x2e00\n    uint64_t task_energy;                                         // off=0x2e40\n    struct mt_task task_monotonic;                                // off=0x2e80\n    uint8_t task_can_transfer_memory_ownership;                   // off=0x2f00\n    uint8_t task_no_footprint_for_debug;                          // off=0x2f08\n    uint8_t task_objects_disowning;                               // off=0x2f10\n    uint8_t task_objects_disowned;                                // off=0x2f18\n    int task_volatile_objects;                                    // off=0x2f20\n    int task_nonvolatile_objects;                                 // off=0x2f40\n    int task_owned_objects;                                       // off=0x2f60\n    queue_head_t task_objq;                                       // off=0x2f80\n    lck_mtx_t task_objq_lock;                                     // off=0x3000\n    unsigned int task_thread_limit;                               // off=0x3080\n    unsigned int task_legacy_footprint;                           // off=0x3090\n    unsigned int task_extra_footprint_limit;                      // off=0x3091\n    unsigned int task_ios13extended_footprint_limit;              // off=0x3092\n    unsigned int task_region_footprint;                           // off=0x3093\n    unsigned int task_has_crossed_thread_limit;                   // off=0x3094\n    uint32_t exec_token;                                          // off=0x30a0\n    coalition_t coalition[2];                                     // off=0x30c0\n    queue_chain_t task_coalition[2];                              // off=0x3140\n    uint64_t dispatchqueue_offset;                                // off=0x3240\n    boolean_t task_unnested;                                      // off=0x3280\n    int task_disconnected_count;                                  // off=0x32a0\n    void *__ptrauth(DA, true, 1f57) hv_task_target;               // off=0x32c0\n    task_exc_guard_behavior_t task_exc_guard;                     // off=0x3300\n    task_control_port_options_t task_control_port_options;        // off=0x3320\n    queue_head_t io_user_clients;                                 // off=0x3340\n    mach_vm_address_t mach_header_vm_address;                     // off=0x33c0\n    uint32_t loadTag;                                             // off=0x3400\n    uint64_t task_fs_metadata_writes;                             // off=0x3440\n    uint32_t task_shared_region_slide;                            // off=0x3480\n    uuid_t task_shared_region_uuid;                               // off=0x34a0\n    uint64_t memstat_dirty_start;                                 // off=0x3540\n    vmobject_list_output_t corpse_vmobject_list;                  // off=0x3580\n    uint64_t corpse_vmobject_list_size;                           // off=0x35c0\n};\n")),(0,r.kt)("p",null,"Diff two versions of the same struct"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw kernel ctfdump --diff task \\\n    /Library/Developer/KDKs/KDK_13.0_22A5352e.kdk/System/Library/Kernels/kernel.development.t6000 \\\n    /Library/Developer/KDKs/KDK_13.1_22C65.kdk/System/Library/Kernels/kernel.development.t6000\n   \u2022 Differences found\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"\u274c removed:\n    task_control_port_options_t                  task_control_port_options;          // off=0x620\n")),(0,r.kt)("h3",{id:"kernel-dwarf"},(0,r.kt)("strong",{parentName:"h3"},"kernel dwarf")),(0,r.kt)("h4",{id:"-dump-dwarf-debug-information"},"\ud83d\udea7 Dump DWARF debug information"),(0,r.kt)("p",null,"Dump the task struct ",(0,r.kt)("em",{parentName:"p"},"(and pretty print with clang-format)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw kernel dwarf --type task \\\n    KDK_13.1_22C65.kdk/**/kernel.development.t6000.dSYM/**/kernel.development.t6000 \\\n        | clang-format -style='{AlignConsecutiveDeclarations: true}' --assume-filename task.h\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"struct task {\n  lck_mtx_t         lock;                                             // @ 0x0\n  os_refcnt_t       ref_count;                                        // @ 0x10\n  struct os_refgrp *ref_group;                                        // @ 0x20\n  lck_spin_t        ref_group_lock;                                   // @ 0x28\n  _Bool             active;                                           // @ 0x38\n  _Bool             ipc_active;                                       // @ 0x39\n  _Bool             halting;                                          // @ 0x3a\n  _Bool             message_app_suspended;                            // @ 0x3b\n  uint32_t          vtimers;                                          // @ 0x3c\n  uint32_t          loadTag;                                          // @ 0x40\n  uint64_t          task_uniqueid;                                    // @ 0x48\n  __ptrauth(DA, true, 5ef8) map;                                      // @ 0x50\n  queue_chain_t              tasks;                                   // @ 0x58\n  struct task_watchports    *watchports;                              // @ 0x68\n  turnstile_inheritor_t      returnwait_inheritor;                    // @ 0x70\n  sched_group_t              sched_group;                             // @ 0x78\n  queue_head_t               threads;                                 // @ 0x80\n  struct restartable_ranges *t_rr_ranges;                             // @ 0x90\n  processor_set_t            pset_hint;                               // @ 0x98\n  struct affinity_space     *affinity_space;                          // @ 0xa0\n  int                        thread_count;                            // @ 0xa8\n  uint32_t                   active_thread_count;                     // @ 0xac\n  int                        suspend_count;                           // @ 0xb0\n  integer_t                  user_stop_count;                         // @ 0xb4\n  integer_t                  legacy_stop_count;                       // @ 0xb8\n  int16_t                    priority;                                // @ 0xbc\n  int16_t                    max_priority;                            // @ 0xbe\n  integer_t                  importance;                              // @ 0xc0\n  uint64_t                   total_runnable_time;                     // @ 0xc8\n  struct recount_task        tk_recount;                              // @ 0xd0\n  lck_mtx_t                  itk_lock_data;                           // @ 0xe0\n  __ptrauth(DA, true, 68c5) itk_task_ports[4];                        // @ 0xf0\n  __ptrauth(DA, true, 4447) itk_settable_self;                        // @ 0x110\n  __ptrauth(DA, true, 58ef) itk_self;                                 // @ 0x118\n  struct exception_action exc_actions[14];                            // @ 0x120\n  __ptrauth(DA, true, bb51) itk_host;                                 // @ 0x2e0\n  __ptrauth(DA, true, e868) itk_bootstrap;                            // @ 0x2e8\n  __ptrauth(DA, true, b8b1) itk_debug_control;                        // @ 0x2f0\n  __ptrauth(DA, true, ba93) itk_task_access;                          // @ 0x2f8\n  __ptrauth(DA, true, ecf) itk_resume;                                // @ 0x300\n  __ptrauth(DA, true, a454) itk_registered[3];                        // @ 0x308\n  __ptrauth(DA, true, ec7b) itk_dyld_notify;                          // @ 0x320\n  __ptrauth(DA, true, 46e7) itk_resource_notify;                      // @ 0x328\n  __ptrauth(DA, true, 8280) itk_space;                                // @ 0x330\n  ledger_t     ledger;                                                // @ 0x338\n  queue_head_t semaphore_list;                                        // @ 0x340\n  int          semaphores_owned;                                      // @ 0x350\n  unsigned int priv_flags;                                            // @ 0x354\n  __ptrauth(DA, true, 1d9a) task_debug;                               // @ 0x358\n  uint64_t                     rop_pid;                               // @ 0x360\n  uint64_t                     jop_pid;                               // @ 0x368\n  uint8_t                      disable_user_jop;                      // @ 0x370\n  arm64_uexc_region_t          uexc;                                  // @ 0x378\n  _Bool                        preserve_x18;                          // @ 0x398\n  counter_t                    faults;                                // @ 0x3a0\n  counter_t                    pageins;                               // @ 0x3a8\n  counter_t                    cow_faults;                            // @ 0x3b0\n  counter_t                    messages_sent;                         // @ 0x3b8\n  counter_t                    messages_received;                     // @ 0x3c0\n  uint32_t                     decompressions;                        // @ 0x3c8\n  uint32_t                     syscalls_mach;                         // @ 0x3cc\n  uint32_t                     syscalls_unix;                         // @ 0x3d0\n  uint32_t                     c_switch;                              // @ 0x3d4\n  uint32_t                     p_switch;                              // @ 0x3d8\n  uint32_t                     ps_switch;                             // @ 0x3dc\n  struct proc_ro              *bsd_info_ro;                           // @ 0x3e0\n  kcdata_descriptor_t          corpse_info;                           // @ 0x3e8\n  uint64_t                     crashed_thread_id;                     // @ 0x3f0\n  queue_chain_t                corpse_tasks;                          // @ 0x3f8\n  struct label                *crash_label;                           // @ 0x408\n  volatile uint32_t            t_flags;                               // @ 0x410\n  uint32_t                     t_procflags;                           // @ 0x414\n  mach_vm_address_t            all_image_info_addr;                   // @ 0x418\n  mach_vm_size_t               all_image_info_size;                   // @ 0x420\n  uint32_t                     t_kpc;                                 // @ 0x428\n  _Bool                        pidsuspended;                          // @ 0x42c\n  _Bool                        frozen;                                // @ 0x42d\n  _Bool                        changing_freeze_state;                 // @ 0x42e\n  _Bool                        is_large_corpse;                       // @ 0x42f\n  uint16_t                     policy_ru_cpu : 4 @8576;               // @ 0x0\n  uint16_t                     policy_ru_cpu_ext : 4 @8580;           // @ 0x0\n  uint16_t                     applied_ru_cpu : 4 @8584;              // @ 0x0\n  uint16_t                     applied_ru_cpu_ext : 4 @8588;          // @ 0x0\n  uint8_t                      rusage_cpu_flags;                      // @ 0x432\n  uint8_t                      rusage_cpu_percentage;                 // @ 0x433\n  uint8_t                      rusage_cpu_perthr_percentage;          // @ 0x434\n  int8_t                       suspends_outstanding;                  // @ 0x435\n  uint8_t                      t_returnwaitflags;                     // @ 0x436\n  _Bool                        shared_region_auth_remapped;           // @ 0x437\n  char                        *shared_region_id;                      // @ 0x438\n  struct vm_shared_region     *shared_region;                         // @ 0x440\n  uint64_t                     rusage_cpu_interval;                   // @ 0x448\n  uint64_t                     rusage_cpu_perthr_interval;            // @ 0x450\n  uint64_t                     rusage_cpu_deadline;                   // @ 0x458\n  thread_call_t                rusage_cpu_callt;                      // @ 0x460\n  queue_head_t                 task_watchers;                         // @ 0x468\n  int                          num_taskwatchers;                      // @ 0x478\n  int                          watchapplying;                         // @ 0x47c\n  struct bank_task            *bank_context;                          // @ 0x480\n  struct ipc_importance_task  *task_imp_base;                         // @ 0x488\n  vm_extmod_statistics_data_t  extmod_statistics;                     // @ 0x490\n  struct task_requested_policy requested_policy;                      // @ 0x4c0\n  struct task_effective_policy effective_policy;                      // @ 0x4c8\n  uint32_t                     low_mem_notified_warn : 1 @9856;       // @ 0x0\n  uint32_t                     low_mem_notified_critical : 1 @9857;   // @ 0x0\n  uint32_t                     purged_memory_warn : 1 @9858;          // @ 0x0\n  uint32_t                     purged_memory_critical : 1 @9859;      // @ 0x0\n  uint32_t                     low_mem_privileged_listener : 1 @9860; // @ 0x0\n  uint32_t                     mem_notify_reserved : 27 @9861;        // @ 0x0\n  uint32_t                     memlimit_is_active : 1 @9888;          // @ 0x0\n  uint32_t                     memlimit_is_fatal : 1 @9889;           // @ 0x0\n  uint32_t                     memlimit_active_exc_resource : 1 @9890;  // @ 0x0\n  uint32_t                    memlimit_inactive_exc_resource : 1 @9891; // @ 0x0\n  uint32_t                    memlimit_attrs_reserved : 28 @9892;       // @ 0x0\n  io_stat_info_t              task_io_stats;                         // @ 0x4d8\n  struct task_writes_counters task_writes_counters_internal;         // @ 0x4e0\n  struct task_writes_counters task_writes_counters_external;         // @ 0x500\n  struct _cpu_time_qos_stats  cpu_time_eqos_stats;                   // @ 0x520\n  struct _cpu_time_qos_stats  cpu_time_rqos_stats;                   // @ 0x558\n  uint32_t                    task_timer_wakeups_bin_1;              // @ 0x590\n  uint32_t                    task_timer_wakeups_bin_2;              // @ 0x594\n  uint64_t                    task_gpu_ns;                           // @ 0x598\n  uint8_t                     task_can_transfer_memory_ownership;    // @ 0x5a0\n  uint8_t                     task_no_footprint_for_debug;           // @ 0x5a1\n  uint8_t                     task_objects_disowning;                // @ 0x5a2\n  uint8_t                     task_objects_disowned;                 // @ 0x5a3\n  int                         task_volatile_objects;                 // @ 0x5a4\n  int                         task_nonvolatile_objects;              // @ 0x5a8\n  int                         task_owned_objects;                    // @ 0x5ac\n  queue_head_t                task_objq;                             // @ 0x5b0\n  lck_mtx_t                   task_objq_lock;                        // @ 0x5c0\n  unsigned int                task_thread_limit : 16 @11904;         // @ 0x0\n  unsigned int                task_legacy_footprint : 1 @11920;      // @ 0x0\n  unsigned int                task_extra_footprint_limit : 1 @11921; // @ 0x0\n  unsigned int  task_ios13extended_footprint_limit : 1 @11922;       // @ 0x0\n  unsigned int  task_region_footprint : 1 @11923;                    // @ 0x0\n  unsigned int  task_has_crossed_thread_limit : 1 @11924;            // @ 0x0\n  unsigned int  task_rr_in_flight : 1 @11925;                        // @ 0x0\n  uint32_t      exec_token;                                          // @ 0x5d4\n  coalition_t   coalition[2];                                        // @ 0x5d8\n  queue_chain_t task_coalition[2];                                   // @ 0x5e8\n  uint64_t      dispatchqueue_offset;                                // @ 0x608\n  boolean_t     task_unnested;                                       // @ 0x610\n  int           task_disconnected_count;                             // @ 0x614\n  __ptrauth(DA, true, 1f57) hv_task_target;                          // @ 0x618\n  task_exc_guard_behavior_t          task_exc_guard;                 // @ 0x620\n  mach_vm_address_t                  mach_header_vm_address;         // @ 0x628\n  queue_head_t                       io_user_clients;                // @ 0x630\n  boolean_t                          donates_own_pages;              // @ 0x640\n  uint32_t                           task_shared_region_slide;       // @ 0x644\n  uint64_t                           task_fs_metadata_writes;        // @ 0x648\n  uuid_t                             task_shared_region_uuid;        // @ 0x650\n  uint64_t                           memstat_dirty_start;            // @ 0x660\n  vmobject_list_output_t             corpse_vmobject_list;           // @ 0x668\n  uint64_t                           corpse_vmobject_list_size;      // @ 0x670\n  vm_deferred_reclamation_metadata_t deferred_reclamation_metadata;  // @ 0x678\n}\n")),(0,r.kt)("p",null,"Diff two versions of a struct"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f ipsw kernel dwarf --diff --type task \\\n    KDK_13.0_22A5352e.kdk/**/kernel.development.t6000 \\\n    KDK_13.1_22C65.kdk/**/kernel.development.t6000\n   \u2022 Differences found\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"\u274c removed:\n    task_control_port_options_t task_control_port_options;  // @ 0xc4\n")))}p.isMDXComponent=!0}}]);