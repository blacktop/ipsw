"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1716],{16123:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var i=t(85893),r=t(11151);const s={id:"ctfdump",title:"ctfdump",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"ctfdump",description:"Dump CTF info"},c=void 0,o={id:"cli/ipsw/kernel/ctfdump",title:"ctfdump",description:"Dump CTF info",source:"@site/docs/cli/ipsw/kernel/ctfdump.md",sourceDirName:"cli/ipsw/kernel",slug:"/cli/ipsw/kernel/ctfdump",permalink:"/ipsw/docs/cli/ipsw/kernel/ctfdump",draft:!1,unlisted:!1,editUrl:"https://github.com/blacktop/ipsw/tree/master/www/docs/cli/ipsw/kernel/ctfdump.md",tags:[],version:"current",frontMatter:{id:"ctfdump",title:"ctfdump",hide_title:!0,hide_table_of_contents:!0,sidebar_label:"ctfdump",description:"Dump CTF info"},sidebar:"cli",previous:{title:"kernel",permalink:"/ipsw/docs/cli/ipsw/kernel/"},next:{title:"dec",permalink:"/ipsw/docs/cli/ipsw/kernel/dec"}},l={},d=[{value:"ipsw kernel ctfdump",id:"ipsw-kernel-ctfdump",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function p(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"ipsw-kernel-ctfdump",children:"ipsw kernel ctfdump"}),"\n",(0,i.jsx)(n.p,{children:"Dump CTF info"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"ipsw kernel ctfdump [flags]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"  -a, --arch string   Which architecture to use for fat/universal MachO\n  -d, --diff          Diff two structs\n  -h, --help          help for ctfdump\n  -j, --json          Output as JSON\n      --pretty        Pretty print JSON\n"})}),"\n",(0,i.jsx)(n.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"      --color           colorize output\n      --config string   config file (default is $HOME/.config/ipsw/config.yaml)\n      --no-color        disable colorize output\n  -V, --verbose         verbose output\n"})}),"\n",(0,i.jsx)(n.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/cli/ipsw/kernel",children:"ipsw kernel"}),"\t - Parse kernelcache"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>c});var i=t(67294);const r={},s=i.createContext(r);function c(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);