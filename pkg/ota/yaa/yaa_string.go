// Code generated by "stringer -type=entryType,yopType -trimprefix=Patch_ -output yaa_string.go"; DO NOT EDIT.

package yaa

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[BlockSpecial-66]
	_ = x[CharacterSpecial-67]
	_ = x[Directory-68]
	_ = x[RegularFile-70]
	_ = x[SymbolicLink-76]
	_ = x[Metadata-77]
	_ = x[Fifo-80]
	_ = x[Socket-83]
}

const (
	_entryType_name_0 = "BlockSpecialCharacterSpecialDirectory"
	_entryType_name_1 = "RegularFile"
	_entryType_name_2 = "SymbolicLinkMetadata"
	_entryType_name_3 = "Fifo"
	_entryType_name_4 = "Socket"
)

var (
	_entryType_index_0 = [...]uint8{0, 12, 28, 37}
	_entryType_index_2 = [...]uint8{0, 12, 20}
)

func (i entryType) String() string {
	switch {
	case 66 <= i && i <= 68:
		i -= 66
		return _entryType_name_0[_entryType_index_0[i]:_entryType_index_0[i+1]]
	case i == 70:
		return _entryType_name_1
	case 76 <= i && i <= 77:
		i -= 76
		return _entryType_name_2[_entryType_index_2[i]:_entryType_index_2[i+1]]
	case i == 80:
		return _entryType_name_3
	case i == 83:
		return _entryType_name_4
	default:
		return "entryType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[YOP_COPY-67]
	_ = x[YOP_EXTRACT-69]
	_ = x[YOP_MANIFEST-77]
	_ = x[YOP_PATCH-80]
	_ = x[YOP_REMOVE-82]
	_ = x[YOP_DST_FIXUP-79]
}

const (
	_yopType_name_0 = "YOP_COPY"
	_yopType_name_1 = "YOP_EXTRACT"
	_yopType_name_2 = "YOP_MANIFEST"
	_yopType_name_3 = "YOP_DST_FIXUPYOP_PATCH"
	_yopType_name_4 = "YOP_REMOVE"
)

var (
	_yopType_index_3 = [...]uint8{0, 13, 22}
)

func (i yopType) String() string {
	switch {
	case i == 67:
		return _yopType_name_0
	case i == 69:
		return _yopType_name_1
	case i == 77:
		return _yopType_name_2
	case 79 <= i && i <= 80:
		i -= 79
		return _yopType_name_3[_yopType_index_3[i]:_yopType_index_3[i+1]]
	case i == 82:
		return _yopType_name_4
	default:
		return "yopType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
