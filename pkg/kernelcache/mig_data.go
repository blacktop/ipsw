package kernelcache

var machVmSubsystemFuncs = []string{
	"_Xmach_vm_allocate_external",
	"_Xmach_vm_deallocate",
	"_Xmach_vm_protect",
	"_Xmach_vm_inherit",
	"_Xmach_vm_read",
	"_Xmach_vm_read_list",
	"_Xmach_vm_write",
	"_Xmach_vm_copy",
	"_Xmach_vm_read_overwrite",
	"_Xmach_vm_msync",
	"_Xmach_vm_behavior_set",
	"_Xmach_vm_map_external",
	"_Xmach_vm_machine_attribute",
	"_Xmach_vm_remap_external",
	"_Xmach_vm_page_query",
	"_Xmach_vm_region_recurse",
	"_Xmach_vm_region",
	"_X_mach_make_memory_entry",
	"_Xmach_vm_purgable_control_external",
	"_Xmach_vm_page_info",
	"_Xmach_vm_page_range_query",
	"_Xmach_vm_remap_new_external",
	"_Xmach_vm_deferred_reclamation_buffer_init",
	"_Xmach_vm_deferred_reclamation_buffer_synchronize",
	"_Xmach_vm_deferred_reclamation_buffer_update_reclaimable_bytes",
	"_Xmach_vm_range_create",
}
var machPortSubsystemFuncs = []string{
	"_Xmach_port_names",
	"_Xmach_port_type",
	"_Xmach_port_rename",
	"_Xmach_port_allocate_name",
	"_Xmach_port_allocate",
	"_Xmach_port_destroy",
	"_Xmach_port_deallocate",
	"_Xmach_port_get_refs",
	"_Xmach_port_mod_refs",
	"_Xmach_port_peek",
	"_Xmach_port_set_mscount",
	"_Xmach_port_get_set_status_from_user",
	"_Xmach_port_move_member",
	"_Xmach_port_request_notification",
	"_Xmach_port_insert_right",
	"_Xmach_port_extract_right",
	"_Xmach_port_set_seqno",
	"_Xmach_port_get_attributes_from_user",
	"_Xmach_port_set_attributes",
	"_Xmach_port_allocate_qos",
	"_Xmach_port_allocate_full",
	"_Xtask_set_port_space",
	"_Xmach_port_get_srights",
	"_Xmach_port_space_info_from_user",
	"_Xmach_port_dnrequest_info",
	"_Xmach_port_kernel_object",
	"_Xmach_port_insert_member",
	"_Xmach_port_extract_member",
	"_Xmach_port_get_context_from_user",
	"_Xmach_port_set_context",
	"_Xmach_port_kobject_from_user",
	"_Xmach_port_construct",
	"_Xmach_port_destruct",
	"_Xmach_port_guard",
	"_Xmach_port_unguard",
	"_Xmach_port_space_basic_info",
	"_Xmach_port_special_reply_port_reset_link",
	"_Xmach_port_guard_with_flags",
	"_Xmach_port_swap_guard",
	"_Xmach_port_kobject_description_from_user",
	"_Xmach_port_is_connection_for_service",
	"_Xmach_port_get_service_port_info",
	"_Xmach_port_assert_attributes",
}
var machHostSubsystemFuncs = []string{
	"_Xhost_info",
	"_Xhost_kernel_version",
	"_Xhost_page_size",
	"_Xmach_memory_object_memory_entry",
	"_Xhost_processor_info",
	"_Xhost_get_io_main",
	"_Xhost_get_clock_service",
	"_Xkmod_get_info",
	"_Xhost_zone_info",
	"_Xhost_virtual_physical_table_info",
	"_Xhost_ipc_hash_info",
	"_Xenable_bluebox",
	"_Xdisable_bluebox",
	"_Xprocessor_set_default",
	"_Xprocessor_set_create",
	"_Xmach_memory_object_memory_entry_64",
	"_Xhost_statistics_from_user",
	"_Xhost_request_notification",
	"_Xhost_lockgroup_info",
	"_Xhost_statistics64_from_user",
	"_Xmach_zone_info",
	"_Xmach_zone_force_gc",
	"_Xhost_create_mach_voucher",
	"_Xhost_register_mach_voucher_attr_manager",
	"_Xhost_register_well_known_mach_voucher_attr_manager",
	"_Xhost_set_atm_diagnostic_flag",
	"_Xhost_get_atm_diagnostic_flag",
	"_Xmach_memory_info",
	"_Xhost_set_multiuser_config_flags",
	"_Xhost_get_multiuser_config_flags",
	"_Xhost_check_multiuser_mode",
	"_Xmach_zone_info_for_zone",
	"_Xmach_zone_info_for_largest_zone",
	"_Xmach_zone_get_zlog_zones",
	"_Xmach_zone_get_btlog_records",
}
var hostPrivSubsystemFuncs = []string{
	"_Xhost_get_boot_info",
	"_Xhost_reboot",
	"_Xhost_priv_statistics",
	"_Xhost_default_memory_manager",
	"_Xvm_wire",
	"_Xthread_wire",
	"_Xvm_allocate_cpm",
	"_Xhost_processors",
	"_Xhost_get_clock_control",
	"_Xkmod_create",
	"_Xkmod_destroy",
	"_Xkmod_control",
	"_Xhost_get_special_port_from_user",
	"_Xhost_set_special_port_from_user",
	"_Xhost_set_exception_ports",
	"_Xhost_get_exception_ports",
	"_Xhost_swap_exception_ports",
	"_Xhost_load_symbol_table",
	"_Xmach_vm_wire_external",
	"_Xhost_processor_sets",
	"_Xhost_processor_set_priv",
	"_Xset_dp_control_port",
	"_Xget_dp_control_port",
	"_Xhost_set_UNDServer",
	"_Xhost_get_UNDServer",
	"_Xkext_request",
}
var clockSubsystemFuncs = []string{
	"_Xclock_get_time",
	"_Xclock_get_attributes",
	"_Xclock_alarm",
}
var processorSubsystemFuncs = []string{
	"_Xprocessor_start_from_user",
	"_Xprocessor_exit_from_user",
	"_Xprocessor_info",
	"_Xprocessor_control",
	"_Xprocessor_assign",
	"_Xprocessor_get_assignment",
}
var processorSetSubsystemFuncs = []string{
	"_Xprocessor_set_statistics",
	"_Xprocessor_set_destroy",
	"_Xprocessor_set_max_priority",
	"_Xprocessor_set_policy_enable",
	"_Xprocessor_set_policy_disable",
	"_Xprocessor_set_tasks",
	"_Xprocessor_set_threads",
	"_Xprocessor_set_policy_control",
	"_Xprocessor_set_stack_usage",
	"_Xprocessor_set_info",
	"_Xprocessor_set_tasks_with_flavor",
}
var isIokitSubsystemProcessorSetSubsystemFuncs = []string{
	"_Xio_object_get_class",
	"_Xio_object_conforms_to",
	"_Xio_iterator_next",
	"_Xio_iterator_reset",
	"_Xio_service_get_matching_services",
	"_Xio_registry_entry_get_property",
	"_Xio_registry_create_iterator",
	"_Xio_registry_iterator_enter_entry",
	"_Xio_registry_iterator_exit_entry",
	"_Xio_registry_entry_from_path",
	"_Xio_registry_entry_get_name",
	"_Xio_registry_entry_get_properties",
	"_Xio_registry_entry_get_property_bytes",
	"_Xio_registry_entry_get_child_iterator",
	"_Xio_registry_entry_get_parent_iterator",
	"_Xio_service_open",
	"_Xio_service_close",
	"_Xio_connect_get_service",
	"_Xio_connect_set_notification_port",
	"_Xio_connect_map_memory",
	"_Xio_connect_add_client",
	"_Xio_connect_set_properties",
	"_Xio_connect_method_scalarI_scalarO",
	"_Xio_connect_method_scalarI_structureO",
	"_Xio_connect_method_scalarI_structureI",
	"_Xio_connect_method_structureI_structureO",
	"_Xio_registry_entry_get_path",
	"_Xio_registry_get_root_entry",
	"_Xio_registry_entry_set_properties",
	"_Xio_registry_entry_in_plane",
	"_Xio_object_get_retain_count",
	"_Xio_service_get_busy_state",
	"_Xio_service_wait_quiet",
	"_Xio_registry_entry_create_iterator",
	"_Xio_iterator_is_valid",
	"_Xio_make_matching",
	"_Xio_catalog_send_data",
	"_Xio_catalog_terminate",
	"_Xio_catalog_get_data",
	"_Xio_catalog_get_gen_count",
	"_Xio_catalog_module_loaded",
	"_Xio_catalog_reset",
	"_Xio_service_request_probe",
	"_Xio_registry_entry_get_name_in_plane",
	"_Xio_service_match_property_table",
	"_Xio_async_method_scalarI_scalarO",
	"_Xio_async_method_scalarI_structureO",
	"_Xio_async_method_scalarI_structureI",
	"_Xio_async_method_structureI_structureO",
	"_Xio_service_add_notification",
	"_Xio_service_add_interest_notification",
	"_Xio_service_acknowledge_notification",
	"_Xio_connect_get_notification_semaphore",
	"_Xio_connect_unmap_memory",
	"_Xio_registry_entry_get_location_in_plane",
	"_Xio_registry_entry_get_property_recursively",
	"_Xio_service_get_state",
	"_Xio_service_get_matching_services_ool",
	"_Xio_service_match_property_table_ool",
	"_Xio_service_add_notification_ool",
	"_Xio_object_get_superclass",
	"_Xio_object_get_bundle_identifier",
	"_Xio_service_open_extended",
	"_Xio_connect_map_memory_into_task",
	"_Xio_connect_unmap_memory_from_task",
	"_Xio_connect_method",
	"_Xio_connect_async_method",
	"_Xio_connect_set_notification_port_64",
	"_Xio_service_add_notification_64",
	"_Xio_service_add_interest_notification_64",
	"_Xio_service_add_notification_ool_64",
	"_Xio_registry_entry_get_registry_entry_id",
	"_Xio_connect_method_var_output",
	"_Xio_service_get_matching_service",
	"_Xio_service_get_matching_service_ool",
	"_Xio_service_get_authorization_id",
	"_Xio_service_set_authorization_id",
	"_Xio_server_version",
	"_Xio_registry_entry_get_properties_bin",
	"_Xio_registry_entry_get_property_bin",
	"_Xio_service_get_matching_service_bin",
	"_Xio_service_get_matching_services_bin",
	"_Xio_service_match_property_table_bin",
	"_Xio_service_add_notification_bin",
	"_Xio_service_add_notification_bin_64",
	"_Xio_registry_entry_get_path_ool",
	"_Xio_registry_entry_from_path_ool",
	"_Xio_device_tree_entry_exists_with_name",
	"_Xio_registry_entry_get_properties_bin_buf",
	"_Xio_registry_entry_get_property_bin_buf",
	"_Xio_service_wait_quiet_with_options",
}
var taskSubsystemFuncs = []string{
	"_Xtask_create",
	"_Xtask_terminate",
	"_Xtask_threads_from_user",
	"_X_kernelrpc_mach_ports_register3",
	"_X_kernelrpc_mach_ports_lookup3",
	"_Xtask_info_from_user",
	"_Xtask_set_info",
	"_Xtask_suspend",
	"_Xtask_resume",
	"_Xtask_get_special_port_from_user",
	"_Xtask_set_special_port_from_user",
	"_Xthread_create_from_user",
	"_Xthread_create_running_from_user",
	"_Xtask_set_exception_ports",
	"_Xtask_get_exception_ports_from_user",
	"_Xtask_swap_exception_ports",
	"_Xlock_set_create",
	"_Xlock_set_destroy",
	"_Xsemaphore_create",
	"_Xsemaphore_destroy",
	"_Xtask_policy_set",
	"_Xtask_policy_get",
	"_Xtask_sample",
	"_Xtask_policy",
	"_Xtask_set_emulation",
	"_Xtask_get_emulation_vector",
	"_Xtask_set_emulation_vector",
	"_Xtask_set_ras_pc",
	"_Xtask_zone_info",
	"_Xtask_assign",
	"_Xtask_assign_default",
	"_Xtask_get_assignment",
	"_Xtask_set_policy",
	"_Xtask_get_state",
	"_Xtask_set_state",
	"_Xtask_set_phys_footprint_limit",
	"_Xtask_suspend2_mig",
	"_Xtask_resume2_mig",
	"_Xtask_purgable_info",
	"_Xtask_get_mach_voucher",
	"_Xtask_set_mach_voucher",
	"_Xtask_swap_mach_voucher",
	"_Xtask_generate_corpse",
	"_Xtask_map_corpse_info",
	"_Xtask_register_dyld_image_infos",
	"_Xtask_unregister_dyld_image_infos",
	"_Xtask_get_dyld_image_infos",
	"_Xtask_register_dyld_shared_cache_image_info",
	"_Xtask_register_dyld_set_dyld_state",
	"_Xtask_register_dyld_get_process_state",
	"_Xtask_map_corpse_info_64",
	"_Xtask_inspect",
	"_Xtask_get_exc_guard_behavior",
	"_Xtask_set_exc_guard_behavior",
	"",
	"_Xmach_task_is_self",
	"_Xtask_dyld_process_info_notify_register",
	"_Xtask_create_identity_token",
	"_Xtask_identity_token_get_task_port",
	"_Xtask_dyld_process_info_notify_deregister",
	"_Xtask_get_exception_ports_info",
	"_Xtask_test_sync_upcall",
	"_Xtask_set_corpse_forking_behavior",
	"_Xtask_test_async_upcall_propagation",
	"_Xtask_map_kcdata_object_64",
	"_Xtask_register_hardened_exception_handler",
}

var threadActSubsystemFuncs = []string{
	"_Xthread_terminate_from_user",
	"_Xact_get_state_to_user",
	"_Xact_set_state_from_user",
	"_Xthread_get_state_to_user",
	"_Xthread_set_state_from_user",
	"_Xthread_suspend",
	"_Xthread_resume",
	"_Xthread_abort",
	"_Xthread_abort_safely",
	"_Xthread_depress_abort_from_user",
	"_Xthread_get_special_port_from_user",
	"_Xthread_set_special_port",
	"_Xthread_info",
	"_Xthread_set_exception_ports",
	"_Xthread_get_exception_ports_from_user",
	"_Xthread_swap_exception_ports",
	"_Xthread_policy",
	"_Xthread_policy_set",
	"_Xthread_policy_get",
	"_Xthread_sample",
	"_Xetap_trace_thread",
	"_Xthread_assign",
	"_Xthread_assign_default",
	"_Xthread_get_assignment",
	"_Xthread_set_policy",
	"_Xthread_get_mach_voucher",
	"_Xthread_set_mach_voucher",
	"_Xthread_swap_mach_voucher",
	"_Xthread_convert_thread_state",
	"_Xthread_raise_exception",
	"_Xthread_get_exception_ports_info",
	"_Xthread_adopt_exception_handler",
}
var vm32MapSubsystemFuncs = []string{
	"_Xregion",
	"_Xallocate",
	"_Xdeallocate",
	"_Xprotect",
	"_Xinherit",
	"_Xread",
	"_Xread_list",
	"_Xwrite",
	"_Xcopy",
	"_Xread_overwrite",
	"_Xmsync",
	"_Xbehavior_set",
	"_Xmap",
	"_Xmachine_attribute",
	"_Xremap",
	"_X_task_wire",
	"_Xmake_memory_entry",
	"_Xmap_page_query",
	"_Xregion_info",
	"_Xmapped_pages_info",
	"_Xvm_region_object_create",
	"_Xregion_recurse",
	"_Xregion_recurse_64",
	"_Xregion_info_64",
	"_Xregion_64",
	"_Xmake_memory_entry_64",
	"_Xmap_64",
	"_Xvm_map_get_upl",
	"_Xvm_upl_map",
	"_Xvm_upl_unmap",
	"_Xpurgable_control",
	"_X_map_exec_lockdown",
}

var undReplySubsystemFuncs = []string{
	"_XUNDAlertCompletedWithResult_rpc",
	"_XUNDNotificationCreated_rpc",
}
var machVoucherSubsystemFuncs = []string{
	"_Xmach_voucher_extract_attr_content",
	"_Xmach_voucher_extract_attr_recipe",
	"_Xmach_voucher_extract_all_attr_recipes",
	"_Xmach_voucher_attr_command",
	"_Xmach_voucher_debug_info",
}
var memoryEntrySubsystemFuncs = []string{
	"_Xmach_memory_entry_purgable_control",
	"_Xmach_memory_entry_access_tracking",
	"_Xmach_memory_entry_ownership_from_user",
}
var taskRestartableSubsystemFuncs = []string{
	"_Xtask_restartable_ranges_register",
	"_Xtask_restartable_ranges_synchronize",
}
var catchExcSubsystemFuncs = []string{
	"_Xexception_raise",
	"_Xexception_raise_state",
	"_Xexception_raise_state_identity",
}
var catch_mach_exc_subsystem_Funcs = []string{
	"_Xmach_exception_raise",
	"_Xmach_exception_raise_state",
	"_Xmach_exception_raise_state_identity",
	"_Xmach_exception_raise_identity_protected",
	"_Xmach_exception_raise_backtrace",
	"_Xmach_exception_raise_state_identity_protected",
}
var arcade_register_subsystem_Funcs = []string{" _Xarcade_register_new_upcall"}
var mach_eventlink_subsystem_Funcs = []string{
	"_Xmach_eventlink_create",
	"_Xmach_eventlink_destroy",
	"_Xmach_eventlink_associate",
	"_Xmach_eventlink_disassociate",
}
