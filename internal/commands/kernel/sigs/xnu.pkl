amends "../pkl/Symbolicator.pkl"

// MIT License
//
// Copyright (c) 2024 blacktop
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

target = "com.apple.kernel"

total = 4584

version {
    max = "24.0.0"
    min = "24.0.0"
}

signatures {
    new {
        args = 1
        anchors {
            new {
                string = "dtrace: fbt: No return probe for %s, walked to next routine at 0x%016llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fbt_provide_probe"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Kernel stack memory corruption detected @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "stack_protector.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__stack_chk_fail"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "kdp_packet bad len %lu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kdp_packet bad len pkt %lu hdr %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kdp_packet reply recvd req %x seq %x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "kdp_packet bad request %x len %d seq %x key %x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kdp_packet"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "A trap was already set at that address, not setting new breakpoint\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "kdp_set_breakpoint_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kdp_remove_all_breakpoints: found extant breakpoints, removing them.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "kdp_remove_all_breakpoints"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kdp_unknown request %x len %d seq %x key %x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "kdp_unknown"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "stackshot_maxsz"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "-panic_on_exception_triage"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "-show_pointers"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "-no_slto_panic"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kernel_bootstrap: result = %08X @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kernel_bootstrap_thread"
                segment = "__TEXT"
                section = "__cstring"
                caller = "bsd_setthreadname"
            }
        }
        symbol = "kernel_bootstrap"
        prototype = ""
        caller = "machine_startup"
    }
    new {
        args = 1
        anchors {
            new {
                string = "stackshot_tries"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "stackshot_push_duration_and_latency"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "stackshot_in_flags"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kcdata_add_uint64_with_description"
            }
            new {
                string = "stackshot_in_pid"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kcdata_add_uint32_with_description"
            }
            new {
                string = "system_state_flags"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "stackshot_pagetable_mask"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kcdata_add_uint32_with_description"
            }
            new {
                string = "stackshot_size_estimate"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kcdata_add_uint32_with_description"
            }
            new {
                string = "stackshot_size_estimate_adj"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kcdata_add_uint32_with_description"
            }
            new {
                string = "stackshot_tasks_count"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "stackshot_threads_count"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kdp_stackshot_kcdata_format"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "_panicd_ip"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "_router_ip"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "panicd_port"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "_panicd_corename"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kdp_register_send_receive"
        prototype = ""
        caller = "kdp_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "kdp_ip_addr"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kdp_set_interface"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "octet"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s%c%s%c%s%c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Unable to create core header packet.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dumpinfo does not fit into KDP packet.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kdb_printf"
            }
        }
        symbol = "create_panic_header"
        prototype = ""
        caller = "kdp_send_crashdump_pkt"
    }
    new {
        args = 2
        anchors {
            new {
                string = "Cannot contact panic server, timing out.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "TX retry #%d "
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Unable to get panic header.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Protocol features: 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Panic server returned error %d, retrying\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "RX retry "
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "\nTotal number of packets transmitted: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Avg. superblock transfer abstime 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Minimum superblock transfer abstime: 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Maximum superblock transfer abstime: 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "kdp_send_crashdump_pkt"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "kdp_set_dump_info: Skipping invalid panicd port %d (using %d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kdb_printf"
            }
        }
        symbol = "kdp_set_dump_info"
        prototype = ""
        caller = "kdp_dumpinfo"
    }
    new {
        args = 0
        anchors {
            new {
                string = "System dump aborted.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kdb_printf"
            }
            new {
                string = "Entering system dump routine\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Error: No transport device registered for kernel crashdump\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "A dump server was not specified in the boot-args, terminating kernel core dump.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kdp_panic_dump: unexpected pending input packet"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kdp_panic"
            }
            new {
                string = "paniclog"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "systemlog"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s-%s-%d.%d.%d.%d-%x%s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "inet_aton() failed interpreting %s as a panic server IP\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kdb_printf"
            }
            new {
                string = "Attempting connection to panic server configured at IP %s, port %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Resolved %s's (or proxy's) link level address\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kdb_printf"
            }
            new {
                string = "inet_aton() failed interpreting %s as an IP\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kdb_printf"
            }
            new {
                string = "Routing through specified router IP %s (%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Transmitting packets to link level address: %02x:%02x:%02x:%02x:%02x:%02x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kdb_printf"
            }
            new {
                string = "Kernel map size is %llu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kdb_printf"
            }
            new {
                string = "Sending write request for %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kdb_printf"
            }
            new {
                string = "Transmitting panic log, please wait: "
                segment = "__TEXT"
                section = "__cstring"
                caller = "kdb_printf_unbuffered"
            }
            new {
                string = "Please file a bug report on this panic, if possible.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Transmitting system log, please wait: "
                segment = "__TEXT"
                section = "__cstring"
                caller = "kdb_printf_unbuffered"
            }
            new {
                string = "custom"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kdp_panic_dump"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "; UUID="
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "; stext="
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Serial requested, consistent debug disabled or debug boot arg not present, configuring debugging over serial\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Initializing serial KDP\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "kdp_init"
        prototype = ""
        caller = "kernel_bootstrap_thread"
    }
    new {
        args = 0
        anchors {
            new {
                string = "kdp_poll"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kdp_panic"
            }
            new {
                string = "kdp_poll: no debugger device\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kdp_poll"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kdp_raise_exception with NULL state\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s exception (%x,%x,%x)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "kdp_raise_exception"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kdp_panic"
            }
            new {
                string = "Debugger re-entry scheduled in %d milliseconds\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Using serial KDP.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "\nWaiting for remote debugger connection.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Options.....    Type\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "------------    ----\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "continue....    'c'\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "reboot......    'r'\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Continuing...\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Rebooting...\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Connected to remote debugger.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kdp: exception ack timeout\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "kdp_send: no input packet"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kdp_panic"
            }
            new {
                string = "kdp: bad sequence %d (want %d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "kdp_raise_exception"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kdp_reply: no input packet"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kdp_panic"
            }
            new {
                string = "kdp_send: packet too large (%d > %u)"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kdp_panic"
            }
        }
        symbol = "kdp_reply"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: cannot exclude region starting at %p with size %zu (zero or overflowing size) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: cannot exclude region starting at %p with size %zu (not page aligned) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kdp_core_exclude_region"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kdp_core_handle_new_encryption_key failed to re-initialize encryption stage. Error 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "kdp_core_handle_new_encryption_key failed to read the existing corefile header. Error 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "kdp_core_handle_new_encryption_key failed to update the existing corefile header. Error 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kdp_core_handle_new_encryption_key failed to write the corefile header. Error 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kdp_core_handle_new_encryption_key failed to write the next public key. Error 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kdp_core_handle_new_encryption_key failed to zero-out the public key region. Error 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "kdp_core_handle_new_encryption_key"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kdp_core_polled_io_polled_file_available failed to read corefile header. Error 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "kdp_core_polled_io_polled_file_available failed to read the public key. Error 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "kdp_core_polled_io_polled_file_available"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "KDPCoreStageInit"
                segment = "__TEXT"
                section = "__cstring"
                caller = "lck_grp_init_flags"
            }
            new {
                string = "apple_encrypted_archive interface registration callback is already set @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "compression interface registration callback is already set @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kdp_core_init"
        prototype = ""
        caller = "kdp_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "(kern_dump_update_header) outproc(KDP_SEEK, NULL, %lu, %p) foffset = 0x%llx returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "(kern_dump_update_header) outproc(KDP_DATA, NULL, %lu, %p) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(kern_dump_update_header) outproc data flush returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(kern_dump_update_header) outproc explicit flush returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
        }
        symbol = "kern_dump_update_header"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "outproc(KDP_WRQ, NULL, 0, NULL) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(do_kern_dump write public key) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "(do_kern_dump seek begin) outproc(KDP_SEEK, NULL, %lu, %p) foffset = 0x%llx returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Writing local cores...\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Transmitting kernel state, please wait:\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(do_kern_dump seek logfile) outproc(KDP_SEEK, NULL, %lu, %p) foffset = 0x%llx returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(do_kern_dump paniclog) outproc(KDP_DATA, NULL, %lu, %p) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(do_kern_dump coredump log) outproc(KDP_DATA, NULL, %lu, %p) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(do_kern_dump close) outproc(KDP_EOF, NULL, 0, 0) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "We were in the middle of initializing LZ4 stage. Cannot write a coredump to disk\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "LZ4 stage is not yet initialized. Cannot write a coredump to disk\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "We were in the middle of initializing encryption. Marking it as unavailable\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "We were in the middle of initializing the disk stage. Cannot write a coredump to disk\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Corefile is not yet initialized. Cannot write a coredump to disk\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Zlib stage is not initialized. Cannot write a coredump to the network\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Zlib stage is not initialized. Cannot write a coredump to shared memory\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(kern_dump_write_public_key) outproc(KDP_SEEK, NULL, %lu, %p) foffset = 0x%llx returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(kern_dump_write_public_key) outproc(KDP_DATA, NULL, %llu, NULL) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(kern_dump_write_public_key) outproc data flush returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(kern_dump_write_public_key) outproc explicit flush returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "\nBeginning dump of panic region of size 0x%zx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "Skipping panic region dump\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "Failed to write panic region to file, kdp_coreoutput(outstate, %zu, %p) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to flush panic region data : kdp_core_output(%p, 0, NULL) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "panic_region"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to record panic region in corefile header, kern_dump_record_file returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Recorded panic region in corefile at offset 0x%llx, compressed to %llu bytes\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "Failed to seek to panic region file offset 0x%llx, kern_dump_seek_to_next_file returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
        }
        symbol = "do_kern_dump"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "(kdp_core_init_encryption_stage) Failed to initialize the encryption stage. Error 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "kdp_core_init_encryption_stage"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: skipping kernel because excluded regions list is locked\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "kern_dump_init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kern_dump_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "save_summary: pmap traversal failed: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
        }
        symbol = "kern_dump_save_summary"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "save_seg_desc: pmap traversal failed: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
        }
        symbol = "kern_dump_save_segment_data_0"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "save_seg_data: pmap traversal failed: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
        }
        symbol = "kern_dump_save_segment_data"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: context allocation failure\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "user_dump_init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: no task is set\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: skipping inactive task\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: skipping locked task\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: skipping task with locked vm map\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "user_dump_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "user_dump_save_summary"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "user_dump_save_summary"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "user_dump_save_seg_descriptions"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "user_dump_save_seg_descriptions"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "user_dump_save_segment_data"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "user_dump_save_segment_data"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "panic context"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "user_dump_save_note_descriptions"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "AEA kext returned an error while calculating state size."
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Failed to allocate memory (%zu bytes) for the AEA stage. Error 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "WARNING: Coredump encryption failed to initialize. aea_initialize_state() returned %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "aea_stage_initialize"
        prototype = ""
        caller = "kdp_core_init_encryption_stage"
    }
    new {
        args = 0
        anchors {
            new {
                string = "(aea_stage_reset) aea_close() returned %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
        }
        symbol = "aea_stage_reset"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(aea_stage_outproc) aea_close() returned %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "(aea_stage_outproc) aea_open() returned %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(aea_stage_outproc) aea_write() returned %zd\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "aea_stage_outproc"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "(aea_write_callback) next stage outproc returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
        }
        symbol = "aea_write_callback"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "(aea_read_callback) next stage read proc returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
        }
        symbol = "aea_read_callback"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(aea_availability_callback) Failed to handle availability of encryption. Error 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "aea_availability_callback"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "buffer_stage_initialize failed to allocate memory. Error 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "buffer_stage_initialize"
        prototype = ""
        caller = "kdp_core_init"
    }
    new {
        args = 1
        anchors {
            new {
                string = "buffer_stage_outproc (during forwarding) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
        }
        symbol = "buffer_stage_outproc"
        prototype = ""
        caller = ""
    }
    new {
        args = 4
        anchors {
            new {
                string = "(disk_stage_write) disk_stage_read (during seek) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(disk_stage_write) IOPolledFileSeek(0x%llx) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(disk_stage_write) disk_stage_read (during final chunk seek) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "(disk_stage_write) IOPolledFileWrite(gIOPolledCoreFileVars, %p, 0x%llx, NULL) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "(disk_stage_write) IOPolledFileWrite (during final flush) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "disk_stage_write"
        prototype = ""
        caller = "aea_write_callback"
    }
    new {
        args = 0
        anchors {
            new {
                string = "(disk_stage_read) IOPolledFileWrite (during seek) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "(disk_stage_read) IOPolledFileSeek(0x%llx) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(disk_stage_read) Kickstarting IOPolledFileRead(0) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "disk_stage_read"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "IOPolledFileSeek(gIOPolledCoreFileVars, 0) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "IOPolledFilePollersOpen returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOPolledFileWrite (during seek) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOPolledFileSeek(0x%llx) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "IOPolledFileWrite(gIOPolledCoreFileVars, %p, 0x%llx, NULL) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOPolledFileFlush() returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOPolledFileWrite (during EOF) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOPolledFilePollersClose (during EOF) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
        }
        symbol = "disk_stage_outproc"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(%s) Failed to handle availability of LZ4. Error 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "lz4_stage_registration_callback"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "lz4_stage_registration_callback"
        prototype = ""
        caller = ""
    }
    new {
        args = 4
        anchors {
            new {
                string = "kdp_send_crashdump_data returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
        }
        symbol = "net_stage_outproc"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "progress_notify_stage_initialize failed to allocate memory. Error 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "progress_notify_stage_initialize"
        prototype = ""
        caller = "kdp_core_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s (during forwarding) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "progress_notify_stage_outproc"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "progress_notify_stage_outproc"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "handshake structure not initialized\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Waiting for hardware shared memory debugger, handshake structure is at virt: %p, phys %p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
        }
        symbol = "panic_spin_shmcon"
        prototype = ""
        caller = "handle_debugger_trap"
    }
    new {
        args = 2
        anchors {
            new {
                string = "EOF Flush: Detected stale/invalid seq num. Expected: %d, received %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "Setting coredump status as done!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
        }
        symbol = "shmem_stage_outproc"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Detected remote error, terminating...\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "Detected stale/invalid seq num. Expected: %d, received %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "Kernel timed out waiting for hardware debugger to update handshake structure."
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "No contact in %d seconds\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "shmem_dbg_process_buffers"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kdp_core zlib memory 0x%lx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "zlib_stage_initialize failed to allocate memory. Error 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "zlib_stage_initialize"
        prototype = ""
        caller = "kdp_core_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "ZERR %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
        }
        symbol = "zlib_stage_outproc"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s failed to allocate memory. Error 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "memory_backing_aware_buffer_stage_initialize"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "memory_backing_aware_buffer_stage_initialize"
        prototype = ""
        caller = "kdp_core_init"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s (passing along request) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "%s kvtophys() for address %p returned NULL\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "%s next stage output failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "memory_backing_aware_buffer_stage_outproc"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "secure_core: Unable to seek to the start of file: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "Failed to dump coprocessor cores\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to dump userspace process cores\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
        }
        symbol = "kern_do_coredump"
        prototype = ""
        caller = "do_kern_dump"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Registered coredump handler for %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "kern_register_coredump_helper_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "\nBeginning coredump of %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "coredump_init returned KERN_NODE_DOWN, skipping this core\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(%s) : coredump_init failed with %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "(%s) : save_note_note_summary failed with %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(%s) : get_summary failed with %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "Skipping coredump\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "(%s) : header size not populated after coredump_get_summary\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "(%s) : save_segment_descriptions failed with %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(%s) : save_segment_descriptions returned without all segment descriptions written, %llu of %llu remaining\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "main bin spec"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kern ver str"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(%s) : coredump_save_note_description returned %d while writing binary info LC_NOTE description"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(%s) : kcc_coredump_save_note_descriptions failed with %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(%s) : save_note_descriptions returned without all note descriptions written, %llu of %llu remaining\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(%s) : save_thread_state failed with %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "(%s) : save_thread_state returned without all thread descriptions written, %llu of %llu remaining\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(kern_coredump_routine) : failed to write zero fill padding (%llu bytes remaining) : kdp_core_output(%p, %llu, NULL) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "coredump_save_segment_data failed with %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(kern_coredump_routine) : save_segment_data returned without all segment data written, %llu of %llu remaining\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(%s) : kcc_coredump_save_sw_vers_detail_cb failed with 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(%s) : kcc_coredump_save_sw_vers failed with 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(%s) : kcc_coredump_save_note_data failed with 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(%s) : kcc_coredump_save_note_data returned without all note data written, %llu of %llu remaining\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(kern_coredump_routine) : failed to flush final core data : kdp_core_output(%p, 0, NULL) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Done\nCoredump complete of %s, dumped %llu segments (%llu bytes), %llu threads (%llu bytes) overall uncompressed file length %llu bytes."
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "\nCore dump took %llu cycles\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "\n(kern_coredump_routine) : kern_dump_record_file failed with %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = " Compressed file length is %llu bytes\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
        }
        symbol = "kern_coredump_routine"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s(0x%llx, 0x%llx, %p) : called with invalid addresses : start 0x%llx >= end 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s(0x%llx, 0x%llx, %p) : coredump_save_segment_descriptions() called too many times, %llu segment descriptions already recorded\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s(0x%llx, 0x%llx, %p) : ran out of space to save commands with %llu of %llu remaining\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "%s(0x%llx, 0x%llx, %p) : failed to write segment %llu of %llu. kdp_core_output(%p, %lu, %p) returned error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s(0x%llx, 0x%llx, %p) : called with invalid addresses for 32-bit : start 0x%llx, end 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "%s(0x%llx, 0x%llx, %p) : failed to write segment %llu of %llu : kdp_core_output(%p, %lu, %p) returned  error 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "coredump_save_segment_descriptions"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s() called with invalid data_owner\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "%s() called too many times, %llu note descriptions already recorded\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s() : failed to write note %llu of %llu : kdp_core_output() returned  error 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
        }
        symbol = "coredump_save_note_description"
        prototype = ""
        caller = "kern_coredump_routine"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s() : found %d expected LC_THREAD (%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "%s() : ran out of space to save threads with %llu of %llu remaining\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "%s() : failed to write thread data : kdp_core_output() returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
        }
        symbol = "coredump_save_thread_state"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s() : failed to write main bin spec structure : coredump_save_note_data() returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "coredump_save_sw_vers"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "coredump_save_sw_vers"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s(%p, %llu, %p) : called with invalid length %llu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "%s() : failed to write legacy bin spec version : coredump_save_note_data() returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "%s() : failed to write sw_vers string : coredump_save_note_data() returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "%s() : failed to write zero fill padding : kdp_core_output(%p, %llu, NULL) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "coredump_save_sw_vers_legacy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Skipping userspace coredump, coredump list is locked\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kern_coredump_log"
            }
            new {
                string = "Failed to seek to beginning of next core\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kern_do_auxiliary_coredump"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipc_entry_dealloc() @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipc_entry_dealloc"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "corrupt hi_mod: %d, obase: %p, ocount: %d\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipc_entry_grow_table"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipc_eventlink_wait_block @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ipc_eventlink.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ipc_eventlink_signal_wait_until_trap_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "BUG in process %s[%d]: attempt to acquire an additional legacy external boost assertion without holding an existing legacy external assertion. (%d total, %d external, %d legacy-external)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "ipc_importance_task_hold_legacy_external_assertion"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "BUG in process %s[%d]: over-released legacy external boost assertions (%d total, %d external, %d legacy-external)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "ipc_importance_task_drop_legacy_external_assertion"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "disabling imp_receiver on task with pending importance boosts! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipc_importance_task_mark_receiver"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "disabling de-nap on task with pending de-nap boosts! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipc_importance_task_mark_denap_receiver"
        prototype = ""
        caller = "proc_set_task_spawnpolicy"
    }
    new {
        args = 0
        anchors {
            new {
                string = "iit unexpected zero refs: %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "iit_over_release_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Importance for "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pid %d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = " (%d of %d boosts) %s from "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "donated"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "linked"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ipc_importance_extract_content"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Invalid ipc_control_port_options boot-arg: pinned control port cannot be enabled without immovability enforcement. Ignoring 1p pinning boot-arg."
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "Invalid ipc_control_port_options boot-arg: pinned control port cannot be enabled without immovability enforcement. Ignoring 3p pinning boot-arg."
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "ipc_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "size too large for the fast kmsg zone (%d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "non-zero aux size for kmsg type IKM_TYPE_KDATA_OOL. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipc_kmsg_alloc"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IPC kmsg header signature mismatch: kmsg=%p, hdr=%p, id=%d, sig=0x%08x (expected 0x%08x) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ikm_signature_check_panic"
        prototype = ""
        caller = "ipc_kmsg_validate_signature"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Invalid descriptor type (%p: %d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ipc_kmsg_descriptor_invalid_type_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "Inconsistent OOL/copyout size on %p: expected %d, got %lld @%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipc_kmsg_copyout_descriptors"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipc_mqueue_send @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipc_mqueue_send_locked"
        prototype = ""
        caller = "ipc_kmsg_send"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Unknown waitq type (%p/0x%x) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ipc_mqueue_receive_on_thread: sleep walking @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipc_mqueue_receive_on_thread_and_unlock"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ipc_object_copyin_from_kernel: strange rights @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipc_object_copyin_from_kernel"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ipc_object_destroy: strange rights @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipc_object_destroy"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ipc_object_destroy_dest: strange rights @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipc_object_destroy_dest"
        prototype = ""
        caller = "ipc_kmsg_clean_header"
    }
    new {
        args = 1
        anchors {
            new {
                string = "ipc_object_copyout_dest: strange rights @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipc_object_copyout_dest"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipc object %p is neither a port or a port-set @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipc_object_validate_preflight_panic"
        prototype = ""
        caller = "ipc_object_lock_allow_invalid"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Using inactive port %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ipc_port_inactive_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "send right"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "send-once right"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "port %p %s count overflow (delta: %d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ipc_right_delta_overflow_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ipc_port_destroy: invalid state @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipc_port_destroy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Trying to free an active port. port %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipc_port_finalize"
        prototype = ""
        caller = "ipc_object_free"
    }
    new {
        args = 1
        anchors {
            new {
                string = "found receive right in space %p for port %p owned by space %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ipc_port_translate_receive_panic"
        prototype = ""
        caller = "ipc_port_translate_receive"
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipc_right_terminate: strange type - 0x%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipc_right_terminate"
        prototype = ""
        caller = "ipc_space_terminate"
    }
    new {
        args = 3
        anchors {
            new {
                string = "ipc_right_destroy: strange type @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipc_right_destroy"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "ipc_right_delta: strange right %d for 0x%x (%p) in space:%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipc_right_delta"
        prototype = ""
        caller = "mach_port_mod_refs"
    }
    new {
        args = 3
        anchors {
            new {
                string = "ipc_right_copyin_check: strange rights @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipc_right_copyin_check_reply"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ipc_right_copyout: Copyout kobject/kolabel as receive right @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Service port name = 0x%x doesnt match the stored launchd port name = 0x%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ipc_right_copyout: strange rights @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipc_right_copyout"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "voucher recipe underfow @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "mach_voucher_extract_all_attr_recipes"
        prototype = ""
        caller = "_Xmach_voucher_extract_all_attr_recipes"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Cannot grow ipc space beyond IVAC_ENTRIES_MAX. Some process is leaking vouchers @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Failed to grow ivac table to size %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ivace_reference_by_value"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "mach_port_get_refs: strange rights @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "mach_port.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mach_port_get_refs"
        prototype = ""
        caller = "_Xmach_port_get_refs"
    }
    new {
        args = 2
        anchors {
            new {
                string = "com.apple.UNCUserNotificationAgent"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.syncservices.uihandler"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.syncservices.ConflictResolver"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.syncservices.SyncServer"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mach_port_construct"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.developer.arcade-operations"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "arcade_prepare"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.arcade.fpsd"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "arcade: received register request"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "arcade_register_new_upcall"
        prototype = ""
        caller = "_Xarcade_register_new_upcall"
    }
    new {
        args = 0
        anchors {
            new {
                string = "arcade_upcall_refresh(get fairplayd) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "arcade.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "arcade: subscription validation upcall returned %#x"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "arcade: unable to make subscription upcall, error %#x"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "arcade_ast"
        prototype = ""
        caller = "ast_taken_user"
    }
    new {
        args = 0
        anchors {
            new {
                string = "ast.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ast_taken_user"
        prototype = ""
        caller = "user_take_ast"
    }
    new {
        args = 0
        anchors {
            new {
                string = "backtrace: unknown packing format %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "backtrace.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "backtrace_internal"
        prototype = ""
        caller = "backtrace"
    }
    new {
        args = 0
        anchors {
            new {
                string = "unable to allocate initial VA: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__btlib_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "couldn\\'t find stack %p in library %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__btlib_remove_notfound_panic"
        prototype = ""
        caller = "__btlib_remove_locked"
    }
    new {
        args = 0
        anchors {
            new {
                string = "clock_initialize_calendar"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s WARNING: UTC time is less then sys time, (%lu s %d u) UTC (%lu s %d u) sys\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "clock_initialize_calendar"
        prototype = ""
        caller = "IOKitInitializeTime"
    }
    new {
        args = 0
        anchors {
            new {
                string = "clock_alarm_deliver @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "clock_oldops.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "alarm_done"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Per-coalition ledgers"
                segment = "__TEXT"
                section = "__cstring"
                caller = "ledger_template_create"
            }
            new {
                string = "couldn\\'t create coalition ledger template @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "couldn\\'t create entries for coaliton ledger template @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Coalition task ledgers"
                segment = "__TEXT"
                section = "__cstring"
                caller = "ledger_template_copy"
            }
            new {
                string = "couldn\\'t create coalition task ledger template @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "init_coalition_ledgers"
        prototype = ""
        caller = "coalitions_init"
    }
    new {
        args = 1
        anchors {
            new {
                string = "failed to adopt task %p into default coalition: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "coalitions_adopt_init_task"
        prototype = ""
        caller = "task_create_internal"
    }
    new {
        args = 0
        anchors {
            new {
                string = "failed to adopt task %p into corpse coalition: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "created task is not a member of a resource coalition @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "task_create_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "deallocating task %p was not a member of a resource coalition @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "task_release_coalitions"
        prototype = ""
        caller = "task_deallocate_internal"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: could not create init %s coalition: kr:%d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: could not create corpse %s coalition: kr:%d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "coalitions_init"
        prototype = ""
        caller = "kernel_bootstrap"
    }
    new {
        args = 0
        anchors {
            new {
                string = "unknown coalition policy: %d %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "jetsam_coalition_set_policy"
        prototype = ""
        caller = "sys_coalition_policy_set"
    }
    new {
        args = 0
        anchors {
            new {
                string = "unknown coalition policy: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "jetsam_coalition_get_policy"
        prototype = ""
        caller = "sys_coalition_policy_get"
    }
    new {
        args = 0
        anchors {
            new {
                string = "i_coal_resource_adopt_task"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "i_coal_resource_adopt_task"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "i_coal_resource_remove_task"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "i_coal_resource_remove_task"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: task %p attempting to set role %d in coalition %p to which it does not belong! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: invalid role(%d) for task @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "i_coal_jetsam_set_taskrole"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "WARNING: more than %d pids in coalition %llu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "coalition_get_sort_list"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "table %p ran out of compact IDs @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "compact_id.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "compact_id_get_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "daemon.core-analytics-events"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "telemetry_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Unknown CA event type: %s. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "core_analytics.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "core_analytics_event_size"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d Assertion failed: %s"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "Assert"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "register_additional_panic_data_buffer called with buffer already registered @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "register_additional_panic_data_buffer called with invalid producer_name @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "register_additional_panic_data_buffer called with invalid buffer pointer @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "register_additional_panic_data_buffer called with invalid length @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "register_additional_panic_data_buffer"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "/var/tmp/panic.trace"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "panic_trap_to_debugger"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Kernel UUID: %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "ECC Corrections:%u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "Compressor Info: %u%% of compressed pages limit (%s) and %u%% of segments limit (%s) with %d swapfiles and %s swap space\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "Debugger message: %.1200s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "Device: %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "Not set yet"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Hardware Model: %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "ECID: %02X%02X%02X%02X%02X%02X%02X%02X\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "AppleHWAccess Thread: 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "AppleHWAccess last access: no access data, this is unexpected.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "AppleHWAccess last access: %s of size %u at address 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Boot args: %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "Memory ID: 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "OS release type: %.256s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "OS version: %.256s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "Kernel version: %.512s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "Fileset Kernelcache UUID: "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "KernelCache UUID: "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Boot session UUID: %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Boot session UUID not yet initialized\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "iBoot version: %.128s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "secure boot?: %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "roots installed: %lld\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "%s data: "
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "Paniclog version: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "Total cpu_usage: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "Thread task pri cpu_usage\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "task->map"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "task->map->pmap"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Panicked task %p: %lld pages, %d threads: "
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "Panicked task %p: %d threads: "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pid %d: %s"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "unknown task"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Panicked thread: %p, backtrace: 0x%llx, tid: %llu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "Could not print panicked thread backtrace:frame pointer outside kernel vm.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "%.14s (%.14s)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!! debugger synchronization failed, no stackshot !!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!! panicked during stackshot, skipping panic stackshot !!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "\n** Stackshot Succeeded ** Bytes Traced %d (Uncompressed %d) **\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "\n** Stackshot Succeeded ** Bytes Traced %d **\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "\n** Stackshot Incomplete ** Bytes Filled %llu **\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "\n!! Stackshot Failed !! Bytes Traced %d, err %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "\n!! Stackshot Failed !!\nkcdata_memory_static_init returned %d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "CORE %u is offline, skipping\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "CORE %u recently retired instr at 0x%016llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "TPIDRx_ELy = {1: 0x%016llx  0: 0x%016llx  0ro: 0x%016llx }\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "CORE %u PVH locks held: "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "None\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%u - "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%u, %u - "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "First lock was acquired at PC=0x%016llx, LR=0x%016llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "CORE %u is the one that panicked. Check the full backtrace for details.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "CORE %u: PC=0x%016llx, LR=0x%016llx, FP=0x%016llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s\t  Could not read LR from frame at 0x%016llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s\t  Could not read FP from frame at 0x%016llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "%s\t  lr: 0x%016llx  fp: 0x%016llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "Backtrace continues...\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
        }
        symbol = "SavePanicInfo"
        prototype = ""
        caller = "handle_debugger_trap"
    }
    new {
        args = 0
        anchors {
            new {
                string = "KernelCache slide: 0x%016lx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "KernelCache base:  %p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "Kernel text exec slide: 0x%016lx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "Kernel text exec base:  0x%016lx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "panic_display_kernel_aslr"
        prototype = ""
        caller = "SavePanicInfo"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Couldn\\'t obtain preoslog region: result = %d, preoslog_pa = %p, preoslog_size = %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "sysctl_debug_get_preoslog"
        prototype = ""
        caller = "sysctl_kern_debug_get_preoslog"
    }
    new {
        args = 0
        anchors {
            new {
                string = "/arm-io/wdt"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "awl-scratch-supported"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "set_awl_scratch_exists_flag_and_subscribe_for_pm"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Nested panic detected - entry count: %d panic_caller: 0x%016lx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "Nested panic string:\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "\n<end nested panic string>\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Nested panic count exceeds limit %d, machine will reset or spin\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "\nNested panic stall. Stage 1 bailout. Please go to https://panic.apple.com to report this panic\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "\nIn Nested panic stall. Stage 2 bailout. Please go to https://panic.apple.com to report this panic\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
        }
        symbol = "check_and_handle_nested_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "skipping local kernel core because core file could not be opened prior to panic (mode : 0x%x, error : 0x%x)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "skipping local kernel core because the PPL is not in KERNEL state\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "Original panic string:\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic_debugger_log"
            }
        }
        symbol = "handle_debugger_trap"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "daemon.mcc_error-events"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mcc_logging_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Count of %u on ecc event is too large. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ecc_logging.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ecc_log_record_event"
        prototype = ""
        caller = "generic_platform_error_handler"
    }
    new {
        args = 0
        anchors {
            new {
                string = "cannot translate task id token from a kernel thread @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "energy_perf.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "task_id_token_to_energy_id"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mach_exception_raise_identity_protected() must be code64 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "mach_exception_raise_state_identity_protected() must be code64 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "bad exception behavior! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "exception_deliver"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "called exception_triage when it was forbidden by the boot environment @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "exception_triage_thread"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "DEBUG4K thread %p task %p map %p exception %d codes 0x%llx 0x%llx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pac_exception_triage"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: process %s[%d] hit a pac violation\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "exception_triage"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "attempted to set invalid special port %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "host.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kernel_set_special_port"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.xpc.launchd.event-monitor"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "host_set_special_port"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.developer.driverkit.family.hid.eventservice"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "host_get_special_port_from_user"
        prototype = ""
        caller = "_Xhost_get_special_port_from_user"
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.set-atm-diagnostic-flag"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "host_set_atm_diagnostic_flag"
        prototype = ""
        caller = "_Xhost_set_atm_diagnostic_flag"
    }
    new {
        args = 0
        anchors {
            new {
                string = "port %p is an invalid host port @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "host_port_copy_send"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "trying to register kobject(%d) twice @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipc_kobject_register_startup"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "the msgh_ids in mig_e[] aren't valid! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "mig subsystem %d (%p) replies are too large (%d > %d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "message id = %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "multiple entries with the same msgh_id @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "the mig dispatch table is too small @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kroutine must have precise size %d %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "mig_table_max_displ = %d mach_kobj_count = %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "mig_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ipc_kobject_server: strange destination rights @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipc_kobject_server"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: unexpected kotype of port %p: want %d, got %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ipc_kobject_enable"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ipc_kobject_enable"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "trying to destroy an permanent port %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipc_kobject_destroy"
        prototype = ""
        caller = "ipc_port_destroy"
    }
    new {
        args = 2
        anchors {
            new {
                string = "ipc_kobject_label_check: attempted receive right copyout for labeled kobject @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "subst-once port %p was consumed twice @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "unexpected label: %llx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipc_kobject_label_check"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "port %p: invalid kobject type, got %d wanted %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "port %p: invalid kobject, got %p wanted %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipc_kobject_require_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "unexpected make-send count: %p[%d], %d, %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ipc_kobject_dealloc_bad_mscount_panic"
        prototype = ""
        caller = "ipc_kobject_dealloc_port_and_unlock"
    }
    new {
        args = 0
        anchors {
            new {
                string = "unexpected send right count: %p[%d], %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ipc_kobject_dealloc_bad_srights_panic"
        prototype = ""
        caller = "ipc_kobject_dealloc_port_and_unlock"
    }
    new {
        args = 2
        anchors {
            new {
                string = "mach_msg_rpc_from_kernel @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kernel_mach_msg_rpc @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kernel_mach_msg_rpc_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mach_task_self() name changed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "task_self_trap"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "userspace has control access to a kernel map %p through task %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "convert_port_to_map_with_flavor"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "strange thread flavor @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "convert_port_to_thread_with_flavor_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "com.apple.private.set-exception-port"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Allowing set_exception_ports from [%s] on [%s] for entitled process/debugger\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "com.apple.security.only-one-exception-port"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Disallowing set_exception_ports from [%s] on [%s] due to only_one_exception_port policy\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "set_exception_ports_validation"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s.%u"
                segment = "__TEXT"
                section = "__cstring"
                caller = "scnprintf"
            }
        }
        symbol = "kalloc_zone_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "kalloc_type_view_copy: Insufficient space in scratch buffer @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kalloc_type_view_copy"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "__text"
                segment = "__TEXT"
                section = "__cstring"
                caller = "getsectbynamefromheader"
            }
            new {
                string = "kalloc_type_view_parse: couldn\\'t find kext @ offset:%lx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kalloc_type_view_parse: No support for non-split seg KCs @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kalloc_type_view_parse"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kalloc_type_apply_policy: assigned %u zones wasted %u zones\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "kalloc_type_distribute_budget"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kalloc.type%u.%zu"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kalloc.%zu"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kalloc_type_create_zone_for_size"
        prototype = ""
        caller = "kalloc_type_create_zones_fixed"
    }
    new {
        args = 0
        anchors {
            new {
                string = "kt_var_heaps is too small @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kalloc_type_view_init_var"
        prototype = ""
        caller = "kalloc_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "kalloc_heap_startup_init: invalid KHEAP_ID: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kheap_startup_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "KT_NOSHARED used w/o private accounting for view %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kalloc_type_assign_zone_fixed"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Size\ttotal_sig\tunique_signatures\tzones\tzones_sig\tzones_type\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%u\t%u\t%u\t%u\t%u\t%u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kalloc_type_create_zones_fixed"
        prototype = ""
        caller = "kalloc_type_view_init_fixed"
    }
    new {
        args = 0
        anchors {
            new {
                string = "kalloc_data_require failed: address %p in [%s%s] @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kalloc_data_require failed: address %p in [%s%s], size too large %zd > %zd @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kalloc_data_require failed: address %p not in zone native map @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kalloc_data_require_panic"
        prototype = ""
        caller = "kalloc_data_require"
    }
    new {
        args = 0
        anchors {
            new {
                string = "kfree: addr %p trying to free with nonsensical size %zd @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kfree_size_invalid_panic"
        prototype = ""
        caller = "kfree_ext"
    }
    new {
        args = 0
        anchors {
            new {
                string = "kfree: addr %p, size %zd (offs:%zd) found in zone '%s%s' with elem_size %zd @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kfree: addr %p, size %zd (offs:%zd) not found in any zone @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kfree_size_confusion_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "kfree: addr %p found in kalloc type zone '%s'but being freed to %s heap @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kfree: addr %p, size %zd found in regular zone '%s%s' @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kfree: addr %p, size %zd found in heap %s* instead of %s* @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kfree_heap_confusion_panic"
        prototype = ""
        caller = "kfree_zone"
    }
    new {
        args = 0
        anchors {
            new {
                string = "krealloc: addr %p trying to free with nonsensical size %zd @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "krealloc_size_invalid_panic"
        prototype = ""
        caller = "krealloc_ext"
    }
    new {
        args = 0
        anchors {
            new {
                string = "kern_apfs_reflock_t %p was already destroyed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kern_apfs_reflock_t %p was allocated. kern_apfs_reflock_free should be called instead of kern_apfs_reflock_destroy @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kern_apfs_reflock_t %p: destroying a reflock currently locked by ctid %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kern_apfs_reflock_t %p: destroying a reflock with threads currently waiting or in the process of waiting @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kern_apfs_reflock_destroy"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "kern_apfs_reflock_t %p was not allocated. kern_apfs_reflock_destroy should be called instead of kern_apfs_reflock_free @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kern_apfs_reflock_t %p is already in the process of being freed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kern_apfs_reflock_t %p: freeing a reflock currently locked by ctid %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kern_apfs_reflock_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Cannot use KERN_APFS_REFLOCK_IN_FORCE and KERN_APFS_REFLOCK_IN_LOCK_IF_FIRST together @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kern_apfs_reflock: too many refs for %p thread %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kern_apfs_reflock_try_get_ref"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Cannot use KERN_APFS_REFLOCK_IN_FORCE and KERN_APFS_REFLOCK_IN_LOCK_IF_LAST together @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kern_apfs_reflock: over releasing reflock %p thread %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kern_apfs_reflock_try_put_ref"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Trying to lock a reflock owned by the same thread %p, reflock %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kern_apfs_reflock_try_lock"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "kern_apfs_reflock: kern_apfs_rl_waiters are 0 when trying to wait reflock %p thread %p. Probably a try* function with a positive will_wait wasn't called before waiting. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Trying to wait on a reflock owned by the same thread %p, reflock %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kern_apfs_reflock_wait_for_unlock"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Unlocking swiref_t %p from thread ctid %u owned by ctid %u @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kern_apfs_reflock_unlock"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Attempt to create a ledger template with more than MAX_LEDGER_ENTRIES. MAX_LEDGER_ENTRIES=%lu, old_cnt=%u, new_cnt=%u\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ledger_entry_add_with_flags"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "ledger_entry_check_new_balance(%p,%d): negative ledger %p credit:%lld debit:0 balance:%lld @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ledger_entry_check_new_balance(%p,%d): negative ledger %p credit:%lld debit:%lld balance:%lld @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ledger_entry_check_new_balance"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Compatibility APIs"
                segment = "__TEXT"
                section = "__cstring"
                caller = "lck_grp_init_flags"
            }
        }
        symbol = "lck_group_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "lck_debug_state: feature %d imbalance @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "lock_group.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "lck_grp_disable_feature"
        prototype = ""
        caller = "lockstat_disable"
    }
    new {
        args = 1
        anchors {
            new {
                string = "Mutex to destroy still has waiters: %p: <0x%06x 0x%02x 0x%08x 0x%08x/%p 0x%04x 0x%04x> @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "lck_mtx_destroy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "lck_mtx_assert(): invalid arg (%u) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "lck_mtx_assert"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Invalid/destroyed mutex %p: <0x%06x 0x%02x 0x%08x 0x%08x/%p 0x%04x 0x%04x> @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__lck_mtx_invalid_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Mutex interlock[%p] timeout after %llu ticks; current owner: %p, <0x%06x 0x%02x 0x%08x 0x%08x 0x%04x 0x%04x>, start time: %llu, now: %llu, timeout: %llu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "lck_mtx_ilk_timeout_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Mutex %p is held as a full-mutex (spin-always lock attempted) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__lck_mtx_lock_is_sleepable_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Mutex %p is unexpectedly not owned by thread %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__lck_mtx_not_owned_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Mutex %p is unexpectedly owned by thread %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__lck_mtx_owned_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Invalid/destroyed ptr spinlock %p: <%p %d 0x%04x> @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__hw_lck_ptr_invalid_panic"
        prototype = ""
        caller = "__smr_shash_rehash_with_target"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Ptr spinlock[%p] timeout after %llu ticks; ptr_value: %p, mcs_tail: 0x%04x, start time: %llu, now: %llu, timeout: %llu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "hw_lck_ptr_timeout_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Releasing non-exclusive RW lock without a reader refcount! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "lck_rw_done"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "lck_rw_unlock(): Invalid RW lock type: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "lck_rw_unlock"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s was called with an invalid blocking type @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kdp_rwlck_find_owner"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kdp_rwlck_find_owner"
        prototype = ""
        caller = "stackshot_thread_wait_owner_info"
    }
    new {
        args = 0
        anchors {
            new {
                string = "rw lock count underflow for thread %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__lck_rw_lock_count_dec_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Invalid HW ticket lock %p <0x%08x> @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__hw_lck_ticket_invalid_panic"
        prototype = ""
        caller = "hw_lck_ticket_destroy"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Invalid ticket lock %p <0x%08x 0x%08x 0x%08x 0x%08x> @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__lck_ticket_invalid_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Ticket spinlock[%p] timeout after %llu ticks; cticket: 0x%x, nticket: 0x%x, waiting for 0x%x, current owner: %p (on CPU %d), start time: %llu, now: %llu, timeout: %llu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "lck_ticket_timeout_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Ticket spinlock[%p] timeout after %llu ticks; cticket: 0x%x, nticket: 0x%x, valid: %d, start time: %llu, now: %llu, timeout: %llu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Ticket spinlock[%p] timeout after %llu ticks; cticket: 0x%x, nticket: 0x%x, waiting for 0x%x, valid: %d, start time: %llu, now: %llu, timeout: %llu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "hw_lck_ticket_timeout_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Ticket lock %p is unexpectedly not owned by thread %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__lck_ticket_not_owned_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Ticket lock %p is unexpectedly owned by thread %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__lck_ticket_owned_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Spinlock[%p] timeout after %llu ticks; current owner: %p, start time: %llu, now: %llu, timeout: %llu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Spinlock[%p] timeout after %llu ticks; current owner: %p (on cpu %d), start time: %llu, now: %llu, timeout: %llu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "hw_spin_timeout_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Spinlock[%p] timeout after %llu ticks; current value: 0x%08x, start time: %llu, now: %llu, timeout: %llu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "hw_lock_bit_timeout_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "wait_while_equals32[%p] timeout after %llu ticks; current value: 0x%08x, start time: %llu, now: %llu, timeout: %llu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "hw_wait_while_equals32_panic"
        prototype = ""
        caller = "ml_wait_for_cpu_signal_to_enable"
    }
    new {
        args = 0
        anchors {
            new {
                string = "wait_while_equals64[%p] timeout after %llu ticks; current value: 0x%016llx, start time: %llu, now: %llu, timeout: %llu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "hw_wait_while_equals64_panic"
        prototype = ""
        caller = "_mpsc_queue_wait_for_enqueuer"
    }
    new {
        args = 0
        anchors {
            new {
                string = "hwlock: thread %p is trying to lock %p recursively @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "hw_lock_lock_contended"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Attempt to take no-preempt lock %p in preemptible context @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__lck_require_preemption_disabled_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Gate used is invalid. gate %p data %lx turnstile %p refs %d flags %x  @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "gate_verify_tag_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Gate used was destroyed. gate %p data %lx turnstile %p refs %d flags %x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "gate_verify_destroy_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Trying to destroy a gate that was allocated by gate_alloc_init(). gate_free() should be used instead, gate %p thread %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "gate_destroy_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Trying to destroy a gate owned by %p. Gate %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "gate_destroy_owned_panic"
        prototype = ""
        caller = "gate_destroy_internal"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Trying to destroy a gate with waiters. Gate %p data %lx turnstile %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "gate_destroy_waiter_panic"
        prototype = ""
        caller = "gate_destroy_internal"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Trying to free a gate that was not allocated by gate_alloc_init(), gate %p thread %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "gate_free_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Trying to close a gate already closed gate %p holder %p current_thread %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "gate_already_owned_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Trying to open a gate %p owned by %p from current_thread %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Trying to handoff a gate %p owned by %p from current_thread %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "gate_not_owned_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Trying to wait on a not closed gate %p from current_thread %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Trying to steal a not closed gate %p from current_thread %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "gate_not_closed_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Too many refs taken on gate. gate %p data %lx turnstile %p refs %d flags %x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "gate_too_many_refs_panic"
        prototype = ""
        caller = "gate_wait"
    }
    new {
        args = 1
        anchors {
            new {
                string = "invalid %s flag %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "gate_assert"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "gate_assert"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Invalid size %d for ml_io_read(%p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Read from IO vaddr 0x%lx paddr 0x%lx took %llu ns, result: 0x%llx (start: %llu, end: %llu), ceiling: %llu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ml_io_read"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Invalid size %d for ml_io_write(%p, 0x%llx) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Write to IO vaddr %p paddr %p val 0x%llx took %llu ns, (start: %llu, end: %llu), ceiling: %llu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ml_io_write"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "can't allocate cpu_callback_chain_elem @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "cpu_event_register_callback"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Unfortunately, cpu_event_unregister_callback is unimplemented. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN11IOPCIBridge19setDevicePowerStateEP11IOPCIDevicem.cold.1"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ml-timeout-"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/machine-timeouts"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/chosen/machine-timeouts"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: unexpected machine timeout data_size %u for /machine-timeouts/%s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: unexpected machine timeout data_size %u for /chosen/machine-timeouts/%s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: unexpected machine timeout data_size %u for /machine-timeouts/%s-scale @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: unexpected machine timeout data_size %u for /chosen/machine-timeouts/%s-scale @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: unexpected machine timeout data_size %u for /machine-timeouts/global-scale @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: unexpected machine timeout data_size %u for /chosen/machine-timeouts/global-scale @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ml-timeout-global-scale"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "machine_timeout_init_with_suffix"
        prototype = ""
        caller = "machine_timeout_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "daemon.deferred-deallocation"
                segment = "__TEXT"
                section = "__cstring"
                caller = "bsd_setthreadname"
            }
            new {
                string = "thread_deallocate_daemon_init: creating daemon failed (%d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "thread_deallocate_daemon_init"
        prototype = ""
        caller = "thread_daemon_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "mpsc_queue[%p]: use after cancelation @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "_mpsc_daemon_queue_enqueue"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Waiting for DSMOS...\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "dsmos_page_transform"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "0123456789abcdef0123456789ABCDEF"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__doprnt_0"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Unexpected boot pset cluster type %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "processor_bootstrap"
        prototype = ""
        caller = "arm_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "processor_boot() missing for cpu %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "cpu %d failed to %s, waited %d seconds\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s>cpu %d still in shutdown @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s>cpu %d not online @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "processor_wait_for_start"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "processor %d already booted @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "processor_boot"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "recount: unexpected rollup request from %d to %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "recount_rollup"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "sched_clutch_bucket_group_interactive_pri"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sched_edge_init"
        prototype = ""
        caller = "sched_init"
    }
    new {
        args = 1
        anchors {
            new {
                string = "Unexpected sched_bucket passed to sched_edge_cluster_cumulative_count_decr() @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "sched_clutch thread count underflowed! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "sched_clutch_thread_remove"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Unexpected sched_bucket passed to sched_edge_cluster_cumulative_count_incr() @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "sched_clutch thread count overflowed! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "sched_clutch_processor_enqueue"
        prototype = ""
        caller = "thread_setrun"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Scheduler: Default of %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "sched_pri_decay_limit"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kern.sched_pri_decay_limit"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Setting scheduler priority decay band limit %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "sched_debug"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Scheduler: Debug flags 0x%08x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "sched_init"
        prototype = ""
        caller = "kernel_bootstrap"
    }
    new {
        args = 0
        anchors {
            new {
                string = "standard timeslicing quantum is %d us\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "standard background quantum is %d us\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "sched_decay_penalty"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Overriding scheduler decay penalty %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "sched_decay_usage_age_factor"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Overriding scheduler decay usage age factor %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "sched_timeshare_init"
        prototype = ""
        caller = "sched_edge_init"
    }
    new {
        args = 1
        anchors {
            new {
                string = "Invalid attempt to wait while running the idle thread @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "thread_mark_wait_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "assert_wait"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "assert_wait"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "assert_wait_timeout"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "assert_wait_timeout"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "assert_wait_timeout_with_leeway"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "assert_wait_timeout_with_leeway"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "assert_wait_deadline"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "assert_wait_deadline"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "assert_wait_deadline_with_leeway"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "assert_wait_deadline_with_leeway"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "thread_wakeup_prim"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "thread_wakeup_prim"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "Non-monotonic time: dispatch at 0x%llx, runnable at 0x%llx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "thread_dispatch"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Unrecognized scheduler IPI event type %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "sched_ipi_policy"
        prototype = ""
        caller = "sched_edge_ipi_policy"
    }
    new {
        args = 1
        anchors {
            new {
                string = "idle_thread_create failed: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "idle #%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "idle_thread_create"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "sched_startup @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "sched_startup"
        prototype = ""
        caller = "kernel_bootstrap_thread"
    }
    new {
        args = 0
        anchors {
            new {
                string = "sched_maintenance_thread"
                segment = "__TEXT"
                section = "__cstring"
                caller = "bsd_setthreadname"
            }
        }
        symbol = "sched_init_thread"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "sched_cpu_init_completed called twice! %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "failed to create sched_update_powered_cores thread @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "sched_update_powered_cores"
                segment = "__TEXT"
                section = "__cstring"
                caller = "bsd_setthreadname"
            }
        }
        symbol = "sched_cpu_init_completed"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Attempting to sleep before all CPUS are registered @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "sched_override_available_cores_for_sleep"
        prototype = ""
        caller = "__Z16IOCPUSleepKernelv"
    }
    new {
        args = 0
        anchors {
            new {
                string = "unknown mode %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "sched_processor_change_mode_locked"
        prototype = ""
        caller = "processor_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "shutting down the last available core! online: 0x%llx rec: 0x%llxx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "sched_mark_processor_offline"
        prototype = ""
        caller = "processor_offline"
    }
    new {
        args = 0
        anchors {
            new {
                string = "thread_invoke: preemption_level %d, possible cause: %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "unlocking an unlocked mutex or spinlock"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "blocking while holding a spinlock, or within interrupt context"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Non-monotonic time: invoke at 0x%llx, runnable at 0x%llx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Invalid attempt to context switch an offline processor @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "thread_invoke"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "no last resort cpu found! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "thread_setrun"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s>calling sched_update_powered_cores to suspend powerdown\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "suspend_cluster_powerdown_locked"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "suspend_cluster_powerdown_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s>calling sched_update_powered_cores to resume powerdown\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "resume_cluster_powerdown_locked"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "resume_cluster_powerdown() called with pcs.pcs_powerdown_suspend_count=%d\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "resume_cluster_powerdown_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "recommended core failsafe kicked in for %lld ms likely due to %s[%d] thread 0x%llx spending %lld ms on cpu at realtime priority - new recommendation: 0x%llx -> 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sched_timeshare_maintenance_continue"
        prototype = ""
        caller = "sched_init_thread"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s> no last resort cpu found: 0x%llx 0x%llx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "sched_update_recommended_cores_locked"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sched_update_recommended_cores_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Invalid SFI class 0x%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Duplicate SFI registration for class 0x%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "sfi_class_register"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Gap in registered SFI classes @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "sfi_init"
        prototype = ""
        caller = "kernel_bootstrap"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Invalid queue linkage: elt:%p next:%p next->prev:%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__smr_linkage_invalid"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Invalid queue tail (element past end): elt:%p elt->next:%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Invalid queue tail (early end): elt:%p tail:%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__smr_tail_invalid"
        prototype = ""
        caller = "smr_mark_active_trackers_stalled"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Unable to find item %p (linkage %p) in %p (traits %p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__smr_shash_missing_elt_panic"
        prototype = ""
        caller = "__smr_shash_entered_mut_begin"
    }
    new {
        args = 0
        anchors {
            new {
                string = "kernel_stack_pages"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "stack_init: stack size %p not a multiple of page size %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "stack.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "stack_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Section %s,%s missing @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Section %s,%s has invalid size @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kernel_startup_bootstrap"
        prototype = ""
        caller = "arm_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "chosen"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "unexpected tunable size %u in DT entry %s/%s/%s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kernel_startup_tunable_dt_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s[%d, rank %d]: %p(%p)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kernel_startup_initialize_upto"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: reached phase %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "kernel_startup_initialize_upto"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kern.serverperfmode"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "scale_setup"
        prototype = ""
        caller = "kernel_bootstrap"
    }
    new {
        args = 0
        anchors {
            new {
                string = "load_context @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "load_context"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "NULL continuation passed to %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "thread_handoff_parameter"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "syscall_subr.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "thread_handoff_parameter"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kern_invalid mach trap"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kern_invalid"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Warning: max_task_pmem %d below minimum.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Limiting task physical memory footprint to %d MB\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Limiting task physical memory warning to %d%%\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "hwm_user_cores"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "task_wakeups_monitor_rate"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "task_wakeups_monitor_interval"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "task_wakeups_monitor_ustackshots_trigger_pct"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "task_iomon_limit_mb"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "task_iomon_interval_secs"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "io_telemetry_limit"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "task_init @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "task_init"
        prototype = ""
        caller = "kernel_bootstrap"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Per-task ledger"
                segment = "__TEXT"
                section = "__cstring"
                caller = "ledger_template_create"
            }
            new {
                string = "couldn\\'t create task ledger template @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "tkm_private"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "tkm_shared"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "phys_mem"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "wired_mem"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "conclave_mem"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "internal"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "iokit_mapped"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mappings"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "alternate_accounting"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "alternate_accounting_compressed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "page_table"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "phys_footprint"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "internal_compressed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "reusable"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "external"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "purgeable_volatile"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "purgeable_nonvolatile"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "purgeable_volatile_compress"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "purgeable_nonvolatile_compress"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "tagged_nofootprint"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "tagged_footprint"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "tagged_nofootprint_compressed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "tagged_footprint_compressed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "network_volatile"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "network_nonvolatile"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "network_volatile_compressed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "network_nonvolatile_compressed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "media_nofootprint"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "media_footprint"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "media_nofootprint_compressed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "media_footprint_compressed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "graphics_nofootprint"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "graphics_footprint"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "graphics_nofootprint_compressed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "graphics_footprint_compressed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "neural_nofootprint"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "neural_footprint"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "neural_nofootprint_compressed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "neural_footprint_compressed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "neural_nofootprint_total"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "platform_idle_wakeups"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "interrupt_wakeups"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "couldn\\'t create entries for task ledger template for SFI class 0x%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "cpu_time_billed_to_me"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "cpu_time_billed_to_others"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "physical_writes"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "logical_writes_to_external"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fs_metadata_writes"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "energy_billed_to_me"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "energy_billed_to_others"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "memorystatus_dirty_time"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "swapins"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "couldn\\'t create entries for task ledger template @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "init_task_ledgers"
        prototype = ""
        caller = "coalitions_init"
    }
    new {
        args = 1
        anchors {
            new {
                string = "task_deallocate(%p): volatile_objects=%d nonvolatile_objects=%d owned=%d\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "task_deallocate_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Failed to send exception EXC_CORPSE_NOTIFY. error code: %d for pid %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "task_deliver_crash_notification"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "warning: %s(%d) failed to copyout suspension token for pid %d with error: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "task_suspend"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "warning: %s(%d) performed out-of-band resume on pid %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "task_resume"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "couldn\\'t take coredump of %s[%d]: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "coredump of %s[%d] taken in %d secs %d microsecs\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "process %s[%d] crossed memory high watermark (%d MB); EXC_RESOURCE suppressed by a boot-arg.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "process %s [%d] crossed memory %s (%d MB); EXC_RESOURCE \n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "high watermark"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "diagnostics limit"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "process %s[%d] crossed memory high watermark (%d MB); EXC_RESOURCE suppressed due to audio playback.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "PROC_CROSSED_HIGH_WATERMARK__SEND_EXC_RESOURCE_AND_SUSPEND"
        prototype = ""
        caller = "task_footprint_exceeded"
    }
    new {
        args = 0
        anchors {
            new {
                string = "FATAL "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "send_resource_violation(CPU wakes, ...): error %#x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "process %s[%d] caught waking the CPU %llu times over ~%llu seconds, averaging %llu wakes / second and violating a %slimit of %llu wakes over %llu seconds.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "SENDING_NOTIFICATION__THIS_PROCESS_IS_CAUSING_TOO_MANY_WAKEUPS"
        prototype = ""
        caller = "task_wakeups_rate_exceeded"
    }
    new {
        args = 0
        anchors {
            new {
                string = "send_resource_violation(disk_writes, ...): error %#x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "process [%d] caught causing excessive I/O (flavor: %d). Task I/O: %lld MB. [Limit : %lld MB per %lld secs]\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "SENDING_NOTIFICATION__THIS_PROCESS_IS_CAUSING_TOO_MUCH_IO"
        prototype = ""
        caller = "task_io_rate_exceeded"
    }
    new {
        args = 1
        anchors {
            new {
                string = "com.apple.private.skip.pac.exception"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.private.pac.exception"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "task_set_pac_exception_fatal_flag"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.security.fatal-exceptions"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "task_set_jit_exception_fatal_flag"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "proc_ro->task backref mismatch: t=%p, ro=%p, proc_ro_task(ro)=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "panic_proc_ro_task_backref_mismatch"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "unknown tier %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "proc_tier_to_iopol"
        prototype = ""
        caller = "thread_get_requested_policy_spinlocked"
    }
    new {
        args = 0
        anchors {
            new {
                string = "max_cpumon_percentage"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kern.max_cpumon_percentage"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "max_cpumon_interval"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kern.max_cpumon_interval"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "task_policy_suppression_flags"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "proc_init_cpumon_params"
        prototype = ""
        caller = "task_init"
    }
    new {
        args = 1
        anchors {
            new {
                string = "Attempting to set task policy on kernel_task @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "task_policy_update_internal_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "unknown task policy: %d %d %d %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "proc_set_task_policy_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "process %s[%d] denied attempt to escape CPU monitor (missing required entitlement).\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "proc_set_task_ruse_cpu"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "threads"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "thread_zone_startup"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "thread_corpse_continue @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "thread_corpse_continue"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Thread %p terminating with vm_faults disabled. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "depress timer failed to inactivate!thread: %p depress_timer_active: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "wait timer failed to inactivate!thread: %p, wait_timer_active: %d, wait_timer_armed: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "thread_terminate_self"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "daemon.thread-stack"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "thread_daemon_init: thread_stack_daemon @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "daemon.thread-exception"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "thread_daemon_init: thread_exception_daemon @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "daemon.thread-backtrace"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "thread_daemon_init: thread_backtrace_daemon @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "thread_daemon_init"
        prototype = ""
        caller = "kernel_bootstrap_thread"
    }
    new {
        args = 0
        anchors {
            new {
                string = "guard_exc_info %llx %llx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "guard_ast"
        prototype = ""
        caller = "ast_taken_user"
    }
    new {
        args = 0
        anchors {
            new {
                string = "process %s[%d] thread %llu caught burning CPU! It used more than %d%% CPU over %u seconds\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "  (actual recent usage: %d%% over ~%llu seconds)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "  Thread lifetime cpu usage %d.%06ds, (%d.%06d user, %d.%06d sys)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "  Ledger balance: %lld; mabs credit: %lld; mabs debit: %lld\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "  mabs limit: %llu; mabs period: %llu ns; last refill: %llu ns%s.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = " [fatal violation]"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "send_resource_violation(CPU usage, ...): error %#x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "SENDING_NOTIFICATION__THIS_THREAD_IS_CONSUMING_TOO_MUCH_CPU"
        prototype = ""
        caller = "thread_cputime_callback"
    }
    new {
        args = 0
        anchors {
            new {
                string = "CPU usage monitor activated, but blocking thread limit exists @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "thread_set_cpulimit"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "thread_terminate_continue @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "thread_terminate_continue"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "thread_deallocate: thread not properly terminated @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "thread_deallocate_complete"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Per-thread ledger"
                segment = "__TEXT"
                section = "__cstring"
                caller = "ledger_template_create"
            }
            new {
                string = "couldn\\'t create thread ledger template @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "couldn\\'t create cpu_time entry for thread ledger template @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "thread_init"
        prototype = ""
        caller = "kernel_bootstrap"
    }
    new {
        args = 1
        anchors {
            new {
                string = "idle thread calling thread_terminate! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "thread_terminate @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "thread_terminate"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "unsafe act_set_kperf operation @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "act_set_kperf"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "thread_call_initialize failed (%d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "thread_call_initialize"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "trying to cancel NULL func @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "thread_call_func_cancel"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Invalid thread call qos value: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "thread_call_allocate_with_qos"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "(%p %p) Refcount negative: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "(%p %p) freeing an uninitialized call @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "(%p %p) freeing a running once call @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "thread_call_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "(%p %p) thread_call_cancel_wait: can't wait on thread call whose storage I don't own @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "(%p %p) unsafe thread_call_cancel_wait @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "thread_call_cancel_wait: deadlock waiting on self from inside call: %p to function %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "thread_call_cancel_wait"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "invalid timer flavor: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "thread_call_delayed_timer"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Unable to wake up idle thread for termination (%d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "thread_call_dealloc_timer"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "_internal_call_allocate: thread_call_internal_queue empty @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "thread_call_enter_delayed_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "thread_call_daemon"
                segment = "__TEXT"
                section = "__cstring"
                caller = "bsd_setthreadname"
            }
        }
        symbol = "thread_call_daemon"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "cannot create new thread call thread %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "thread call %s #%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "snprintf"
            }
        }
        symbol = "thread_call_daemon_continue"
        prototype = ""
        caller = "thread_call_daemon"
    }
    new {
        args = 1
        anchors {
            new {
                string = "thread_terminate() returned? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "(%p %p) call on pending_queue from wrong group %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "pending call with NULL func: %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "thread_call_thread: preemption_level %d, last callout %p(%p, %p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kcall worker unable to assert wait %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "thread_call_thread"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "(%p %p) call finishing from wrong group: %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "(%p %p) thread_call_finish: detected over-released thread call @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "thread_call_finish"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "thread_groups"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "io storage"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "perf_controller"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "thread_group_init"
        prototype = ""
        caller = "kernel_bootstrap"
    }
    new {
        args = 0
        anchors {
            new {
                string = "thread_group.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sched_perfcontrol_thread_group_recommend() not supported on the Edge scheduler @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__sigwait_nocancel.cold.2"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "unknown effective QoS: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "unknown requested QoS: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "thread_update_qos_cpu_time_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Unrecognized QoS %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "thread_recompute_priority"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "unknown task policy: %d %d %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "proc_set_thread_policy_spinlocked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "timer_longterm_update_master() on non-boot cpu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "timer_call.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "timer_longterm_update"
        prototype = ""
        caller = "timer_longterm_callout"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Longterm timer threshold: %llu ms\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "timer_call_init"
        prototype = ""
        caller = "arm_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Needs implementation for turnstile_recompute_priority @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "turnstile_recompute_priority_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ts_htable_buckets"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Turnstiles hash table memory allocation failed! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "turnstiles_init"
        prototype = ""
        caller = "kernel_bootstrap"
    }
    new {
        args = 1
        anchors {
            new {
                string = "Missing type in flags (%x) for inheritor (%p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "turnstile_update_inheritor"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Inheritor flags not passed in turnstile_update_inheritor @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "turnstile_update_inheritor_priority_chain"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "turnstile_is_send_turnstile() called outside of kernel debugger context @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kdp_turnstile_traverse_inheritor_chain"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Couldn\\'t allocate send right for ux_handler_port! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "host_set_exception_ports failed to set ux_handler! %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ux_handler_setup"
        prototype = ""
        caller = "bsdinit_task"
    }
    new {
        args = 0
        anchors {
            new {
                string = "wqsize"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "waitq_bootstrap"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "thread already waiting on %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Trying to assert_wait on a turnstile proxy that hasn't been donated one (waitq: %p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "waitq_assert_wait64_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Trying to clear_wait on a turnstile proxy that hasn't been donated one (waitq: %p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "waitq_pull_thread_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "waitq(%p) lock timeout after %llu ticks; cpu=%d, cticket: 0x%x, nticket: 0x%x, waiting for 0x%x, start time: %llu, now: %llu, timeout: %llu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "waitq_timeout_handler"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "WI%lld (pid %d)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kern_work_interval_create"
        prototype = ""
        caller = "work_interval_ctl"
    }
    new {
        args = 0
        anchors {
            new {
                string = "zone %p isn't in the zone_array @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "zone_invalid_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "zone_submap_alloc_sequestered_va() of %u pages failed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "zone_fill_initially"
        prototype = ""
        caller = "fsevents_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Zone %s should be empty upon userspace reboot. Actual size: %lu. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "zone_userspace_reboot_checks"
        prototype = ""
        caller = "exec_mach_imgact"
    }
    new {
        args = 0
        anchors {
            new {
                string = "kalloc.%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "snprintf"
            }
        }
        symbol = "mach_memory_info_sample"
        prototype = ""
        caller = "mach_memory_info"
    }
    new {
        args = 0
        anchors {
            new {
                string = "zone_create: element size too large: %zd @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ZC_NOCACHING"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ZC_NOGC"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ZC_DATA"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Fragmentation greater than 10%% with elem size %d zone %s%s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ZC_PGZ_USE_GUARDS"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "zone_create: invalid desired zone ID %d for %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "zone_create: ID %d (%s) must be permanent @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "zone_create: creating zone ID %d (%s) twice @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "zone_create_ext"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "zdestroy: Zone %s%s isn't empty at zdestroy() time @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "zdestroy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "zc_mag_size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "zone_bootstrap"
        prototype = ""
        caller = "vm_mem_bootstrap"
    }
    new {
        args = 1
        anchors {
            new {
                string = "vm_page"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ksubmap[%s]: failed to make first entry (%d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ksubmap[%s]: failed to make last entry (%d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "zone_submap_init"
        prototype = ""
        caller = "zone_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "zsize"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NOTE: zonemap size reduced from 0x%lx to 0x%lx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "zone_set_map_sizes"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm.permanent"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vm.permanent.percpu"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "zcc_magazine_zone"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "zone_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "zone bound checks: address %p is a per-cpu allocation @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "zone bound checks: buffer %p of length %zd overflows object %p of size %zd in zone %p[%s%s] @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "zone_element_bounds_check_panic"
        prototype = ""
        caller = "zone_element_bounds_check"
    }
    new {
        args = 1
        anchors {
            new {
                string = "zone_require failed: address not in a zone (addr: %p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "zone_require failed: invalid zone index %d (addr: %p, expected: %s%s) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "zone_require failed: address in unexpected zone id %d (%s%s) (addr: %p, expected: %s%s) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "zone_require_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "addr %p being freed to zone %s%s%s, isn't from zone map @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "metadata %p corresponding to addr %p being freed to zone %s%s%s, is marked as secondary per cpu page @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "metadata %p corresponding to addr %p being freed to zone %s%s%s, has chunk len greater than max @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "addr %p being freed to zone %s%s%s, isn't aligned to zone element size @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "zone_invalid_element_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%p expected in zone %s%s[%d], but metadata has invalid zidx: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%p not in the expected zone %s%s[%d], but found in %s%s[%d] @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "zone_page_metadata_index_confusion_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "zone element pointer validation failed (addr: %p, zone %s%s) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "zone_invalid_element_addr_panic"
        prototype = ""
        caller = "zone_invalid_element_panic"
    }
    new {
        args = 0
        anchors {
            new {
                string = "zone bits allocator freelist is corrupt (%p <-> %p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "zba_chain_corruption_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "zba_populate: out of bitmap space, likely due to memory leak in zone [%s%s] (%u%c, %d elements allocated) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "zba_memory_exhausted"
        prototype = ""
        caller = "zba_grow"
    }
    new {
        args = 0
        anchors {
            new {
                string = "zone bits allocator head[%d:%d:%p] is corrupt @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "zba_head_corruption_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "accounting mismatch (%s) for zone %s%s, meta %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "zone_page_meta_accounting_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "metadata list corruption through element %p detected in zone %s%s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "zone_page_metadata_list_corruption"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "zfree_drop"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: double free of %p to zone %s%s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "zone_meta_double_free_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "zm_bitmap"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "zone_meta_find_and_clear_bit"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "\n%5d: 0x%016lx"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "[%s%s]: element modified after free (off:%d, val:0x%016lx, sz:%d, ptr:%p)%s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "zalloc_uaf_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "zalloc[%d]: zone map exhausted while allocating from zone [%s%s], likely due to memory leak in zone [%s%s] (%u%c, %d elements allocated) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "zone_expand_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "zone map exhaustion: waited for %dms (pages: %ld, max: %ld, wanted: %d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZONE_MAP_EXHAUSTED_AND_WAITING_FOR_GC__"
        prototype = ""
        caller = "zone_expand_locked"
    }
    new {
        args = 0
        anchors {
            new {
                string = "zalloc(Z_NOFAIL) can't be satisfied for zone %s%s (potential leak) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "zone_nofail_panic"
        prototype = ""
        caller = "zalloc_item"
    }
    new {
        args = 1
        anchors {
            new {
                string = "zalloc_ro_mut failed: source (%p) not from same zone as dst (%p) (expected: %s, actual: %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "zalloc_ro_mut failed: source (%p, phys %p) not from RO zone map (%p - %p), current stack (%p - %p) or const memory (phys %p - %p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "zalloc_ro_mut_validation_panic"
        prototype = ""
        caller = "zalloc_ro_mut"
    }
    new {
        args = 0
        anchors {
            new {
                string = "zone_require_ro failed: address not in a ro zone (addr: %p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "zone_require_ro failed: element improperly aligned (addr: %p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "zone_require_ro failed: invalid zone index %d (addr: %p, expected: %s%s) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "zone_require_ro failed: address in unexpected zone id %d (%s%s) (addr: %p, expected: %s%s) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "zone_id_require_ro_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "zdestroy: Zone %s%s isn't destructible @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "zdestroy: Zone %s%s in an invalid state for destruction @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "alloc_size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "page_count"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "z_elems_avail wrap-around"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "z_wired_cur wrap-around"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "zone_reclaim"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "zone metadata corruption: %s (meta %p, zone %s%s) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "zone_metadata_corruption"
        prototype = ""
        caller = "zone_reclaim"
    }
    new {
        args = 0
        anchors {
            new {
                string = "zone_map_exhaustion: Zone mapped %lld of %lld, used %lld, capacity %lld [jetsam limit %d%%]\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "zone_map_exhaustion: Largest zone %s%s, size %lu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "zone_map_exhaustion: Picking VM map entries as the zone to target, size %lu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "zone_map_exhaustion: Nothing to do for the largest zone [%s%s]. Waking up memorystatus thread.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "zone_map_exhaustion: Call to memorystatus failed, victim pid: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "zone_gc"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Zone info:\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "  Zone map: %p - %p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "  Metadata: %p - %p\n  Bitmaps : %p - %p\n  Extra   : %p - %p\n\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "Probabilistic GZAlloc Report:\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "  Zone    : <unknown>\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "wild deref, missing or invalid metadata"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "  Zone    : %s%s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "out-of-bounds (high confidence)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "use-after-free (medium confidence)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "  Element : [%p, %p) of size %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "  Access  : %d byte(s) past\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "  Metadata: zid:%d inl:%d cl:0x%x 0x%04x 0x%08x 0x%08x 0x%08x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%-20s %10lu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "Kernel Stacks"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%-20s %10llu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "Kalloc.Large"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "\n%-5s %10s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "%-5lld %10lld\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "addr belongs to"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic_print_types_in_zone"
            }
            new {
                string = "addr is being freed to"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic_print_types_in_zone"
            }
        }
        symbol = "panic_display_zalloc"
        prototype = ""
        caller = "SavePanicInfo"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Largest zones:\n%-28s %10s %10s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "Zone Name"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Cur Size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Free Size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%-8s%-20s %9u%c %9u%c\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "panic_display_largest_zones"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kalloc %s in zone, %s (%s):\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "type arrays"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "types"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "\t%-50s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "panic_print_types_in_zone"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "zone_create: creating zone %s: flag %s and %s are incompatible @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "zone_create_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "accounting mismatch (%s) for zone %s%s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "zone_accounting_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "swap_task_map @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "swap_task_map"
        prototype = ""
        caller = "exec_mach_imgact"
    }
    new {
        args = 0
        anchors {
            new {
                string = "tro %p points back to %p instead of %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__thread_ro_circularity_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mach_bridge_add_timestamp: thread_timestamp_calibration @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "remote_time.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "bt_calibration_thread_start"
        prototype = ""
        caller = "mach_bridge_init_timestamp"
    }
    new {
        args = 0
        anchors {
            new {
                string = "rt_ini_count"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "bt_calibration_thread"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "socd buffer size is too small @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "socd_client.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "socd_client_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Too many lightweight corpse in flight: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Lightweight corpse enqueued for %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "Full corpse enqueued for %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "task_enqueue_exception_with_corpse"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "kcd_c_type"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kcd_c_totalout"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kcd_c_totalin"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kcdata_init_compress_state: invalid compression type: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kcdata_init_compress"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "invalid compression type 0x%llx in kcdata_do_compress @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "zlib kcdata compression ret = %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kcdata_do_compress"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "invalid compression type 0x%llxin kcdata_finish_compression @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kcdata_finish"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "BANK subsystem is initialized\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Bank ledger"
                segment = "__TEXT"
                section = "__cstring"
                caller = "ledger_template_create"
            }
            new {
                string = "couldn\\'t create bank ledger template @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "couldn\\'t create cpu_time entry for bank ledger template @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "energy"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "couldn\\'t create energy entry for bank ledger template @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "bank_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = " Bank Context for a pid %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = " Bank Account linking holder pid %d with merchant pid %d, originator PID/persona: %d, %u and proximate PID/persona: %d, %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "bank_extract_content"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Bogus bank type: %d passed in voucher_command @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "bank_command"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Bogus bank type: %d passed in bank_get_preadopt_thread_group @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "bank_get_preadopt_thread_group"
        prototype = ""
        caller = "ipc_kmsg_get_thread_group"
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.persona.modify"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "bank_get_value"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.personas.no.propagate"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.private.persona.adopt.any"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "bank_task_initialize"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Releasing a non zero ref bank account %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "bank_release_value"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Bogus bank type: %d passed in bank_get_voucher_bank_account @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "bank_get_voucher_bank_account"
        prototype = ""
        caller = "bank_get_bank_ledger_thread_group_and_persona"
    }
    new {
        args = 0
        anchors {
            new {
                string = "kern.disable_atm"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "-disable_atm"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "atm_diagnostic_config"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kern.atm_diagnostic_config"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ATM subsystem is initialized\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "atm_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IPC_PTHREAD_PRIORITY subsystem is initialized\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ipc_pthread_priority_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipc_pthread_priority_release_value called for a persistent PTHPRIORITY value %x with sync value %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ipc_pthread_priority.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ipc_pthread_priority_release_value"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "vnode_pager_init: memory_object_change_attributes() failed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vnode_pager_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vnode_pager_data_initialize @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pmap_cs_core_entitlements_abort_0"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "compressor_segment"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vm_compressor_swap_trigger_thread: create failed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_compressor_init"
        prototype = ""
        caller = "vm_pageout"
    }
    new {
        args = 0
        anchors {
            new {
                string = "c_seg %p has bad c_state = %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "c_seg %p requesting bad c_state = %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "c_seg_switch_state"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "hibernate_write_image encountered error 0x%x - %u, %u, %d, %d, %d, %d, %d, %d, %d, %d, %llu, %d, %d, %d\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_panic_hibernate_write_image_failed"
        prototype = ""
        caller = "hibernate_write_image"
    }
    new {
        args = 0
        anchors {
            new {
                string = "csegbufsz_experiment_property: Failed to wait for IONVRAM."
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "csegbufsize_experiment_property: Failed to remove %s from NVRAM."
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "erase_csegbufsz_experiment_property"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_compressor_segment_buffer_size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kern.compressor_pool_multiplier"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_compressor_set_size"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: moved %d/%d segments from MAJORQ to AGEQ in %lu.%09u seconds and %d breaks\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "vm_compressor_process_major_segments"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_compressor_process_major_segments"
        prototype = ""
        caller = "vm_compressor_compact_and_swap"
    }
    new {
        args = 0
        anchors {
            new {
                string = "VM_cswap_trigger"
                segment = "__TEXT"
                section = "__cstring"
                caller = "bsd_setthreadname"
            }
        }
        symbol = "vm_compressor_swap_trigger_thread"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "C_KDP passed to decompress page from outside of debugger context @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "c_decompress_page: c_segno %d >= c_segments_available %d, slot_ptr(%p), slot_data(%x) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "c_decompress_page: c_segno %d is free, slot_ptr(%p), slot_data(%x) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "c_decompress_page: c_indx %d >= c_nextslot %d, c_seg(%p), slot_ptr(%p), slot_data(%x) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "c_decompress_page: c_size == 0, c_seg(%p), slot_ptr(%p), slot_data(%x) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "decompression failure from physical region %llx+%05x: popcount mismatch (%d != %d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "c_decompress_page"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "compressor_memory_object_init: bad request @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "compressor_memory_object_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "compressor_memory_object_map @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "os_reason_set_description_data.cold.3"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "compressor_memory_object_last_unmap @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "fourk_pager_data_return"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "compressor_memory_object_deallocate(): bad request @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "compressor_memory_object_deallocate"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "compressor_memory_object_data_request(): bad alignment @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "compressor_memory_object_data_request"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "compressor: data_request @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "compressor_memory_object_data_request"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "do a data_return() if slot for this page is empty @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "compressor_memory_object_data_initialize"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "compressor: data_return @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN24AppleUSBXHCITransferRing21refreshDequeuePointerEv.cold.1"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: size 0x%llx overflow @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "compressor_memory_object_create"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "compressor_memory_object_create"
        prototype = ""
        caller = "vm_object_compressor_pager_create"
    }
    new {
        args = 1
        anchors {
            new {
                string = "vm_compressor_pager_put"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vm_compressor_pager_put: out of range @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_compressor_pager_put"
        prototype = ""
        caller = "vm_pageout_compress_page"
    }
    new {
        args = 2
        anchors {
            new {
                string = "vm_compressor_pager_get"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_compressor_pager_get"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_compressor_pager_state_clr"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_compressor_pager_state_clr"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_compressor_pager_state_get"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_compressor_pager_state_get"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_swapout_thread: create failed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "VM_swapout"
                segment = "__TEXT"
                section = "__cstring"
                caller = "bsd_setthreadname"
            }
            new {
                string = "vm_swapfile_create_thread: create failed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "VM_swapfile_create"
                segment = "__TEXT"
                section = "__cstring"
                caller = "bsd_setthreadname"
            }
            new {
                string = "vm_swapfile_gc_thread: create failed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "VM_swapfile_gc"
                segment = "__TEXT"
                section = "__cstring"
                caller = "bsd_setthreadname"
            }
            new {
                string = "VM Swap Subsystem is ON\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_compressor_swap_init"
        prototype = ""
        caller = "vm_compressor_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_swap_get: vnode_getwithref on swapfile failed with %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vm_swap_get"
        prototype = ""
        caller = "c_seg_swapin"
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_swap_put: vnode_getwithref on swapfile failed with %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vm_swap_put"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_swap_reclaim: vnode_getwithref on swapfile failed.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vm_swap_reclaim"
        prototype = ""
        caller = "vm_swapfile_gc_thread"
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_swap_do_delayed_trim: vnode_getwithref on swapfile failed with %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vm_swap_do_delayed_trim"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_compressor_codec"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "-vm_compressor_wk_sw"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "-vm_compressor_wk_barriers"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "-vm_compressor_wk"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "-vm_compressor_hybrid"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_compressor_algorithm_init"
        prototype = ""
        caller = "vm_compressor_init"
    }
    new {
        args = 4
        anchors {
            new {
                string = "WKDMC(%p, %p) error, code: 0x%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vm_compressor_algorithms.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "metacompressor"
        prototype = ""
        caller = "vm_compressor_put"
    }
    new {
        args = 0
        anchors {
            new {
                string = "device_pager_populate_object: list_req failed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "device_pager_populate_object"
        prototype = ""
        caller = "__ZN18IOMemoryDescriptor19populateDevicePagerEPvP7_vm_mapyyyj"
    }
    new {
        args = 1
        anchors {
            new {
                string = "device_pager_init: memory_object_change_attributes() failed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "device_pager_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "device_pager_data_initialize @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "persona_lookup_and_invalidate.cold.1"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "vm_object_update: unexpected error 0x%x from vm_fault_page()\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_object_update"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Ignoring \"vm_compressor\" boot arg %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "kern.vm_compressor"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "\"vm_compressor_mode\" is %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "vm_protect_privileged_from_untrusted"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_fault_init"
        prototype = ""
        caller = "vm_mem_bootstrap"
    }
    new {
        args = 1
        anchors {
            new {
                string = "vm_fault_page(): unexpected error %d from vm_compressor_pager_get()\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_fault_page"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "vm_fault_unwire: failure @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_fault_unwire"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "vm_fault_copy: unexpected error 0x%x from vm_fault_page()\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vm_fault_copy(2): unexpected error 0x%x from vm_fault_page()\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_fault_copy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kdp_lightweight_fault called from outside of debugger context @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kdp_lightweight_fault"
        prototype = ""
        caller = "kdp_find_phys"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Text page corruption detected for pid %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "revalidate_text_page"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: pmap %p vaddr 0x%llx prot 0x%x options 0x%x !cs_bypass @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "page marked to be NX, not letting it be mapped EXEC\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "vm_fault: signed: %s validate: %s tainted: %s wpmapped: %s prot: 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "CODE SIGNING: process %d[%s]: rejecting invalid page at address 0x%llx from offset 0x%llx in file \"%s%s%s\" (cs_mtime:%lu.%ld %s mtime:%lu.%ld) (signed:%d validated:%d tainted:%d nx:%d wpmapped:%d dirty:%d depth:%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "<nil>"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/.../"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vm_fault_enter: failed to allocate codesigning exit reason\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "vm_fault_enter: failed to allocate buffer for codesigning exit reason\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "vm_fault_enter: failed to allocate kcdata for codesigning exit reason\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "CODE SIGNING: tainted page %p phys 0x%x phystokv 0x%llx copied to %p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "CODE SIGNING: process %d[%s]: rejecting invalid page (phys#0x%x) at address 0x%llx from offset 0x%llx in file \"%s%s%s\" (cs_mtime:%lu.%ld %s mtime:%lu.%ld) (signed:%d validated:%d tainted:%d nx:%dwpmapped:%d dirty:%d depth:%d)\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "CODESIGNING: vm_fault_enter(0x%llx): *** INVALID PAGE ***\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "CODESIGNING: panicking on invalid page @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_fault_enter_prepare"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Write fault on compressor map, va: %p type: %u bounds: %p->%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s:%d should not zero-fill page at offset 0x%llx in external object %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: map %p va 0x%llx obj %p,%u saved %p,%u: unexpected CoW @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "object_is_contended @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vm_fault: unexpected error 0x%x from vm_fault_page()\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: pmap %p vaddr 0x%llx prot 0x%x options 0x%x m%p obj %p copyobj %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_fault_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "CODESIGNING: %s: page %p obj %p off 0x%llx was modified\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "vm_page_validate_cs_fast"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_page_validate_cs_fast"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Bad compare and swap in setup! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vmtc_text_page_diagnose_setup"
        prototype = ""
        caller = "revalidate_text_page"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Bad compare and swap in diagnose! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vmtc_text_page_diagnose"
        prototype = ""
        caller = "revalidate_text_page"
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_page_bootstrap"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "zone_bootstrap"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vm_object_bootstrap"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vm_map_init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kmem_init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vm_fault_init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOKit IOMD setownership ENABLED\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOKit IOMD setownership DISABLED\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_mem_bootstrap"
        prototype = ""
        caller = "kernel_bootstrap"
    }
    new {
        args = 0
        anchors {
            new {
                string = "kmem_suballoc(map=%p, size=%zd) failed with %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kmem_suballoc"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "%s: page_list too short @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: page_list too long @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kernel_memory_populate_object_and_unlock"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "realloc"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kmem_%s(map=%p, addr=%p, size=%zd, flags=0x%x): invalid arguments passed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__kmem_invalid_arguments_panic"
        prototype = ""
        caller = "kmem_realloc_guard"
    }
    new {
        args = 0
        anchors {
            new {
                string = "kmem_range_init: Can't scramble with multiple constraints @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kmem_readjust_ranges"
        prototype = ""
        caller = "kmem_scramble_ranges"
    }
    new {
        args = 0
        anchors {
            new {
                string = "kmem_ptr_range"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kmem_ptr_range_meta"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kmem_add_ptr_claims"
        prototype = ""
        caller = "kmem_add_extra_claims"
    }
    new {
        args = 0
        anchors {
            new {
                string = "kmem_sprayqtn_range"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kmem_data_range"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kmem_add_extra_claims"
        prototype = ""
        caller = "kmem_scramble_ranges"
    }
    new {
        args = 0
        anchors {
            new {
                string = "kmem_range_init: vm_map_locate_space failing for claim %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kmem_range_init: vm_map_find_space failing for claim %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kmem_scramble_ranges"
        prototype = ""
        caller = "kmem_range_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "kmem_init(0x%llx,0x%llx): vm_map_enter(0x%llx,0x%llx) error 0x%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kmem_init"
        prototype = ""
        caller = "vm_mem_bootstrap"
    }
    new {
        args = 2
        anchors {
            new {
                string = "%s: %s range invalid min:%p <= base:%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: %s range invalid max:%p >= max packable:%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_packing_verify_range"
        prototype = ""
        caller = "zone_submap_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "invalid vm range: [0x%llx, 0x%llx) wraps around @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__mach_vm_range_invalid"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "addr %p + size %llu overflows %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "addr %p + size %llu doesnt fit in one range (id: %u min: %p max: %p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kmem_range_invalid_panic"
        prototype = ""
        caller = "kmem_addr_get_range"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Can't overwrite mappings (addr: %p) in kmem ptr ranges @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kmem_range_invalid_for_overwrite"
        prototype = ""
        caller = "vm_map_locate_space_fixed"
    }
    new {
        args = 0
        anchors {
            new {
                string = "atomicity"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "objectness"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "left bound"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "right bound"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "guard"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kmem(map=%p, addr=%p, size=%zd, flags=0x%x): entry:%p %s mismatch guard(0x%08x) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__kmem_entry_validate_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kmem(map=%p) no entry found at %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__kmem_entry_not_found_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "alloc"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kmem_%s(%p, %zd, 0x%x): failed with %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__kmem_failed_panic"
        prototype = ""
        caller = "kmem_alloc_guard_internal"
    }
    new {
        args = 3
        anchors {
            new {
                string = "VM page %p should not have an error @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kernel_memory_populate_pmap_enter"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kmem(map=%p, flags=0x%x): invalid size %zd @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__kmem_invalid_size_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kmem(map=%p) entry %p is a submap @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "is unexpectedly"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kmem(map=%p, flags=0x%x): entry %p %s for the %s object @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__kmem_entry_validate_object_panic"
        prototype = ""
        caller = "kmem_realloc_guard"
    }
    new {
        args = 1
        anchors {
            new {
                string = "kmem_realloc(map=%p, addr=%p, size=%zd, entry=%p): object %p has unexpected pager %p (%d,%d,%d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__kmem_realloc_invalid_pager_panic"
        prototype = ""
        caller = "kmem_realloc_guard"
    }
    new {
        args = 1
        anchors {
            new {
                string = "kmem_realloc(map=%p, addr=%p, size=%zd, entry=%p): object %p has unexpected size %ld @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__kmem_realloc_invalid_object_size_panic"
        prototype = ""
        caller = "kmem_realloc_guard"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Invalid sizeclass idx %u @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kmem_invalid_size_idx"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Metadata (%p) for addr (%p) not primary @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Metadata's (%p) sizeclass (%u != %u) changed during deletion @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Double free detected: Slot (%u) in meta (%p) for addr %p marked free @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kmem_validate_slot_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Invalid kmem ptr slot [%p:%p] for allocation [%p:%p] @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kmem_invalid_slot_for_addr"
        prototype = ""
        caller = "kmem_addr_get_slot_idx"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%uth free slot not found for meta %p bitmap %u @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kmem_slot_not_found"
        prototype = ""
        caller = "kmem_get_addr_from_meta"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Invalid slot idx %u [0:%u] for meta %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Invalid size_idx (%u != %u) in meta %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "page_marker %u not primary in meta %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kmem_invalid_meta_panic"
        prototype = ""
        caller = "kmem_get_addr_from_meta"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Entry (%p) already exists for addr (%p) being returned @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kmem_slot_has_entry_panic"
        prototype = ""
        caller = "kmem_get_addr_from_meta"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Reading free chunks for meta %p where marker != KMEM_META_FREE @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kmem_invalid_free_chunk_len"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Invalid number of chunks %u\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kmem_invalid_chunk_num"
        prototype = ""
        caller = "kmem_init_free_chunk"
    }
    new {
        args = 0
        anchors {
            new {
                string = "No more VA to allocate %u chunks in range %u @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kmem_range_out_of_va"
        prototype = ""
        caller = "kmem_locate_space"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Reading free chunks for meta %p where marker != KMEM_META_PRIMARY @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kmem_invalid_chunk_len"
        prototype = ""
        caller = "kmem_free_slot"
    }
    new {
        args = 0
        anchors {
            new {
                string = "cambria_pagesize"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "VM map entries"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "VM map holes"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "VM map copies"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "VM boostrap: %d maps, %d entries and %d holes available\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "vm_memory_malloc_no_cow_mask"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_map_init"
        prototype = ""
        caller = "vm_mem_bootstrap"
    }
    new {
        args = 0
        anchors {
            new {
                string = "VM bootstrap done: %d maps, %d entries and %d holes left\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vm_kernel_boostraped"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Unexpected zone ID %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_map_relocate_early_elem"
        prototype = ""
        caller = "zone_metadata_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "zone_map_exhaustion: victim pid %d, vm region count: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "find_largest_process_vm_map_entries"
        prototype = ""
        caller = "zone_gc"
    }
    new {
        args = 1
        anchors {
            new {
                string = "failing"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "turning off execute"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vm_map_enter: pmap_nest(0x%llx,0x%llx) error 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%d[%s] %s: map size 0x%llx over RLIMIT_AS 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%d[%s] %s: map size 0x%llx over RLIMIT_DATA 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vm_map_enter"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "VM_FLAGS_RETURN_DATA_ADDR not expected for submap. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vm_map_enter_mem_object: memory_entry->backing.copy unsupported type 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "invalid VM named entry %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "VM_FLAGS_RETURN_DATA_ADDR not expected for raw memory object. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_map_enter_mem_object"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_map_protect(%p,0x%llx,0x%llx) new=0x%x wired=%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_map_protect"
        prototype = ""
        caller = ""
    }
    new {
        args = 5
        anchors {
            new {
                string = "%s:%d WindowServer VM Debugging panic: dst_addr 0x%llx copy %p head_addr 0x%llx head_copy %p\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vm_map_copy_overwrite"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_map_copy_overwrite"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Aborting corpse map due to system shutdown\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "vm_map_fork"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vm_map_fork_share: pmap_nest failed! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vm_map_fork_share"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_map_fork"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "shared_region: task %p: vm_map_exec(%p,%p,%p,0x%x,0x%x): ->\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: task %p: vm_map_exec(%p,%p,%p,0x%x,0x%x): <-\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Failed to reserve %s region in user map %p %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_map_exec"
        prototype = ""
        caller = "exec_mach_imgact"
    }
    new {
        args = 3
        anchors {
            new {
                string = "%s:%d(start=0x%llx, size=0x%llx) pgmask 0x%x: wraparound\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vm_map_range_physical_size"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "%d[%s] vm_remap(0x%llx,0x%llx) VM_PROT_COPY denied on permanent mapping prot 0x%x/0x%x developer %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vm_map_remap"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "userspace has access to a kernel map %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "convert_port_entry_to_map"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%d[%s] vm_map_range_overflows addr 0x%llx size 0x%llx pgmask 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vm_map_range_overflows"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "invalid range ID (%u) for map %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_map_range_invalid_panic"
        prototype = ""
        caller = "vm_map_locate_space_anywhere"
    }
    new {
        args = 2
        anchors {
            new {
                string = "vm_map_clip_unnest(0x%llx,0x%llx): bad nested entry: start=0x%llx end=0x%llx\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_map_clip_unnest"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_map_clip(%p): Attempting to clip an atomic VM map entry %p [0x%llx:0x%llx] at 0x%llx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__vm_map_clip_atomic_entry_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mapHdr %p entry %p start 0x%llx end 0x%llx new start 0x%llx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_vm_map_clip_start"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mapHdr %p entry %p start 0x%llx end 0x%llx new end 0x%llx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_vm_map_clip_end"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_map_wire: re-lookup failed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_map_wire_nested"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_map_wire: too many wirings @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "add_wire_counts"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_map_unwire: start not found @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vm_map_unwire: in_transition entry @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vm_map_unwire: entry is unwired @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vm_map_unwire: non-contiguous region @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vm_map_unwire: re-lookup failed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_map_unwire_nested"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "%d[%s] removing permanent submap entry %p [0x%llx:0x%llx] prot 0x%x/0x%x -> KERN_PROT_FAILURE\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%d[%s] %s(0x%llx,0x%llx): code signing monitor disabled, allowing for permanent executable entry [0x%llx:0x%llx] prot 0x%x/0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d %d[%s] map %p entry %p [ 0x%llx - 0x%llx ] submap %d prot 0x%x/0x%x -> 0/0\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vm_map_delete"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_map_delete(%p,0x%llx,0x%llx): no map entry at 0x%llx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__vm_map_delete_gap_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_map_delete(%p,0x%llx,0x%llx): Attempting to remove permanent VM map entry %p [0x%llx:0x%llx] @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__vm_map_delete_permanent_panic"
        prototype = ""
        caller = "vm_map_delete"
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_map_delete(%p,0x%llx,0x%llx): failed unexpected with %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__vm_map_delete_failed_panic"
        prototype = ""
        caller = "vm_map_delete"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d WindowServer VM Debugging panic: address 0x%llx copy ptr %p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d WindowServer VM Debugging panic: start 0x%llx end 0x%llx entry %p copy ptr %p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d WindowServer VM Debugging panic: next %p entry %p copy ptr %p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_map_copy_overwrite_nested"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_map_entry_copy_code_signing"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "removing execute access"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_map_entry_copy"
        prototype = ""
        caller = ""
    }
    new {
        args = 5
        anchors {
            new {
                string = "vm_map_copyout: wiring %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_map_copyout_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_map_remap_extract"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_map_remap_extract"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Found an existing entry %p [0x%llx, 0x%llx) in map %p instead of potential hole at address: 0x%llx. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__vm_map_store_find_space_holelist_corruption"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "VMSEL: INSERT FAILED: 0x%lx, 0x%lx, 0x%lx, 0x%lx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_map_store_entry_link_rb"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "NO ENTRY TO DELETE @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_map_store_entry_unlink_rb"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Hole hint failed: Hole entry start: 0x%llx, entry start: 0x%llx, map hole start: 0x%llx, map hint start: 0x%llx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Hole hint failed: Hole entry end: 0x%llx, entry start: 0x%llx, map hole start: 0x%llx, map hint start: 0x%llx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "update_holes_on_entry_deletion"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Illegal action: h1: %p, s:0x%llx, e:0x%llx...h2:%p, s:0x%llx, e:0x%llx...h3:0x%p, s:0x%llx, e:0x%llx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "update_holes_on_entry_creation"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.memory.ownership_transfer"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.developer.memory.transfer-send"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.developer.memory.transfer-accept"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mach_memory_entry_ownership"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "unsupported type of mem_entry %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "mach_memory_entry_map_size"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Shouldn't be using data address with a parent entry that is a submap. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "mach_make_memory_entry_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm objects"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_object_bootstrap"
        prototype = ""
        caller = "vm_mem_bootstrap"
    }
    new {
        args = 0
        anchors {
            new {
                string = "VM_io_reprioritize_thread"
                segment = "__TEXT"
                section = "__cstring"
                caller = "bsd_setthreadname"
            }
            new {
                string = "Could not create io_reprioritize_thread @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_io_reprioritize_init"
        prototype = ""
        caller = "throttle_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "failed to launch vm_object_reaper_thread kr=0x%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "VM_object_reaper_thread"
                segment = "__TEXT"
                section = "__cstring"
                caller = "bsd_setthreadname"
            }
        }
        symbol = "vm_object_reaper_init"
        prototype = ""
        caller = "vm_pageout"
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_object_deallocate: losing a kernel_object @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vm_object_deallocate: losing retired_pages_object @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vm_object_deallocate: losing compressor_object @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_object_deallocate"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "object %p all_reusable: can't update pmap stats @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_object_reuse_pages"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_object_copy_slowly: unexpected error 0x%x from vm_fault_page()\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_object_copy_slowly"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "copy_strategically: bad strategy %d for object %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_object_copy_strategically"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "vm_object_compressor_pager_create(): no pager for object %p size 0x%llx\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vm_object_compressor_pager_create: mismatch (pager: %p, pager_object: %p, orig_object: %p, orig_object size: 0x%llx) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_object_compressor_pager_create"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_object_collapse() attempting to collapse purgeable object: %p(%d) %p(%d)\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_object_collapse"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_object_populate_with_private - %p not private @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_object_populate_with_private"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: external object %p has unsupported ledger_tag %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: object %p has unsupported ledger_tag %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_object_ledger_tag_ledgers"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s(%p): volatile=%d nonvolatile=%d owned=%d q=%p q_first=%p q_last=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vm_owned_objects_disown"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_owned_objects_disown"
        prototype = ""
        caller = "task_deallocate_internal"
    }
    new {
        args = 0
        anchors {
            new {
                string = "reservation without pageout? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "missing pager for copy object @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_pageout_initialize_page"
        prototype = ""
        caller = "vm_fault_page"
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_pageout: no victim @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_pageout_scan"
        prototype = ""
        caller = "vm_pageout_continue"
    }
    new {
        args = 0
        anchors {
            new {
                string = "VM_pressure"
                segment = "__TEXT"
                section = "__cstring"
                caller = "bsd_setthreadname"
            }
        }
        symbol = "vm_pressure_thread"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_restricted_to_single_processor"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Overriding vm_restricted_to_single_processor to %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "vm_set_restrictions"
        prototype = ""
        caller = "kernel_bootstrap_thread"
    }
    new {
        args = 0
        anchors {
            new {
                string = "mapping deprecated VM_PAGER_DEFAULT to VM_PAGER_COMPRESSOR_WITH_SWAP\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "mapping deprecated VM_PAGER_FREEZER_DEFAULT to VM_PAGER_FREEZER_COMPRESSOR_NO_SWAP\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "unknown compressor mode - %x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vm_config_init"
        prototype = ""
        caller = "vm_fault_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_pageout_garbage_collect: create failed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "VM_pageout_garbage_collect"
                segment = "__TEXT"
                section = "__cstring"
                caller = "bsd_setthreadname"
            }
        }
        symbol = "vm_pageout_create_gc_thread"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vmpgo_pcluster"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vmpgo_protect_realtime"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "VM_pageout_scan"
                segment = "__TEXT"
                section = "__cstring"
                caller = "bsd_setthreadname"
            }
            new {
                string = "vm_pageout: Unable to create external thread (%d)\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "VM_pageout_external_iothread"
                segment = "__TEXT"
                section = "__cstring"
                caller = "bsd_setthreadname"
            }
            new {
                string = "vm_pressure_thread: create failed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_pageout"
        prototype = ""
        caller = "kernel_bootstrap_thread"
    }
    new {
        args = 0
        anchors {
            new {
                string = "vmcomp_threads"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vmpgoi_maxlaundry"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vm_pageout: Unable to create compressor thread no. %d (%d)\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_pageout_internal_start"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_object_upl_request: external object with non-zero paging offset @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vm_object_upl_request: contiguous object specified @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "need corner case for fictitious page @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_object_upl_request"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "Only %d of the %d sub-upls within the Vector UPL are alread mapped @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "TODO4K: vector UPL not implemented @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vm_upl_map: page missing @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vm_map_enter failed for a Vector UPL @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vector_upl_get_submap was passed a NULL UPL @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "getting sub-upl iostate when none exists @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_map_enter_upl_range"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "%d of the %d sub-upls within the Vector UPL is/are not mapped @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vector_upl_get_submap was passed a null UPL @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_map_remove_upl_range"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "iopl_valid_data: NULL upl @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "iopl_valid_data: vector upl @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "iopl_valid_data: unsupported upl, flags = %x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "iopl_valid_data: object == kernel or compressor @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "iopl_valid_data: object %p purgable %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "iopl_valid_data: missing expected page at offset %lx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "iopl_valid_data: busy page w/o absent @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "iopl_valid_data: busy+absent page on page queue @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "iopl_valid_data: %p is reusable @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "iopl_valid_data: %p already wired @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "iopl_valid_data"
        prototype = ""
        caller = "__ZN25IOGeneralMemoryDescriptor8completeEj"
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_object_iopl_request: external object with non-zero paging offset @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vm_object_iopl_request: missing/bad page in kernel object @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vm_object_iopl_request: missing/bad page in compressor object @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vm_object_iopl_request: unexpected error 0x%x from vm_fault_page()\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vm_object_iopl_request: Wired page missing. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_object_iopl_request"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Deallocating non-empty Vectored UPL @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "upl_deallocate"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Trying to remove sub-upl when none exists @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vector_upl_set_subupl was passed a NULL upl element @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vector_upl_set_subupl was passed a NULL upl @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vector_upl_set_subupl"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vector_upl_set_pagelist was passed a NULL upl @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vector_upl_set_pagelist"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Vector UPL offset miscalculation @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vector_upl_subupl_byoffset"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "setting sub-upl iostate when none exists @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vector_upl_set_iostate was passed a NULL UPL @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vector_upl_set_iostate"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "upl_set_referenced not %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "upl_set_referenced"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IN Q: %d : %d : %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "AC Q: %d : %d : %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vm_countdirtypages"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "VM_compressor"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_pageout_iothread_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "upl(%p) ext_ref_count @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "upl_destroy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: Unrecognized page list type %hhu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "unified_page_list_iterator_init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vm_pmap.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pmap_batch_set_cache_attributes"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "unmarked object on purgeable q @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "marked object not on purgeable q @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_purgeable_object_remove"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "vm_purgeable_accounting(%p): unexpected old_state=%d\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_purgeable_accounting"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Unexpected reclaim action %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_deferred_reclamation_reclaim_memory"
        prototype = ""
        caller = "memstat_approaching_fg_band"
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_reclaim"
                segment = "__TEXT"
                section = "__cstring"
                caller = "os_log_create"
            }
        }
        symbol = "vm_deferred_reclamation_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_reclaim: About to kill %p due to %d with subcode %lld\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vm_reclaim: Unable to deliver guard exception because task [%d] is already dead.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "vm_reclaim: Skipping non fatal guard exception.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "vm_reclaim: Unable to deliver guard exception because proc is gone & pid rolled over.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "vm_reclaim: Unable to deliver guard exception because task does not have a proc.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "vm_reclaim: Unable to deliver guard exception to %p: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "reclaim_kill_with_reason"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "VM_reclaim"
                segment = "__TEXT"
                section = "__cstring"
                caller = "bsd_setthreadname"
            }
        }
        symbol = "reclaim_thread"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_page_bg_mode"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vm_page_bg_exclude_external"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vm_page_bg_target"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vm_page_bootstrap: WARNING -- strange page hash\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "vm_page_buckets"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vm_page_bucket_locks"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pmap_startup"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vm_page_bootstrap: %d free pages, %d wired pages, (up to %d of which are delayed free)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "vm_page_bootstrap complete"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "colors"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_page_bootstrap"
        prototype = ""
        caller = "vm_mem_bootstrap"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Filling vm_pages with pattern: 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "page_frame_init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pmap_startup(): too many pages to support vm_page packing @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "pmap_startup() init/release time: %lld microsec\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "pmap_startup() delayed init/release of %d pages\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "VM_PAGE_PACK_PTR failed on &vm_pages[0] - %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "VM_PAGE_PACK_PTR failed on &vm_pages[vm_pages_count-1] - %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pmap_startup"
        prototype = ""
        caller = "vm_page_bootstrap"
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm pages"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_page_module_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "vm_page_insert_internal: (page=%p,obj=%p,off=0x%llx,size=0x%llx) inserted at offset past object bounds @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_page_insert_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "panic: kdp_vm_page_lookup done outside of kernel debugger @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kdp_vm_page_lookup"
        prototype = ""
        caller = "kdp_lightweight_fault"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d should not modify cpu->free_pages while hibernating @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vm_page_grab_options"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: page 0x%llx is referenced @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_page_grab_options"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "vm_page_wire(%p): wire_count overflow @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_page_wire"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_page_reactivate_local: found vm_page_t(%p) with wrong cpuid @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vm_page_reactivate_local: count = %d, vm_page_local_count = %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_page_reactivate_local"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "could"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "hibernate_page_list_setall"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "hibernate_lookup_paddr of %d failed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "hibernate_free_range"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "vm_page_queues_remove - bad page q_state (%p, %d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_page_queues_remove"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pmap_steal_memory() size: 0x%llx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "pmap_steal_memory() pmap_enter failed, map_addr=%#lx, phys_page=%u @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pmap_steal_memory_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm pages array"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_free_delayed_pages"
        prototype = ""
        caller = "kernel_bootstrap_thread"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s(num=%d,low=%d): found %d pages at 0x%llx...scanned %d pages...  yielded %d times...  dumped run %d times... stole %d pages... stole %d compressed pages... wired count is %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "vm_page_find_contiguous"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vm_page_find_contiguous: zone_gc called... wired count is %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "cpm_allocate"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_page_alloc_list(%zd, 0x%x) failed unexpectedly with %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__vm_page_alloc_list_failed_panic"
        prototype = ""
        caller = "vm_page_alloc_list"
    }
    new {
        args = 0
        anchors {
            new {
                string = "hibernate_consider_discard: private @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "hibernate_consider_discard"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "hibernate_discard_page(%p) laundry @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "hibernate_discard_page(%p) private @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "hibernate_discard_page(%p) fictitious @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "hibernate_discard_page"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "shared_region: -> get(%p)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: get(%p) <- %p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vm_shared_region_get"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "shared_region: -> vm_map(%p)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: vm_map(%p) <- %p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vm_shared_region_vm_map"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "shared_region: -> set(%p, %p)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: set(%p) <- old=%p new=%p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vm_shared_region_set"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "shared_region: -> lookup(root=%p,cpu=<%d,%d>,64bit=%d,pgshift=%d,reslide=%d,driverkit=%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "shared_region: vm_shared_region_lastid wrapped @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "shared_region: lookup(root=%p,cpu=<%d,%d>,64bit=%d,pgshift=%d,reslide=%d,driverkit=%d) <- %p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "shared_region: -> create(root=%p,cpu=<%d,%d>,64bit=%d,pgshift=%d,reslide=%d,driverkit=%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: create: couldn\\'t allocate map\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: create(root=%p,cpu=<%d,%d>,64bit=%d,reslide=%d,driverkit=%d,base=0x%llx,size=0x%llx) <- %p mem=(%p,%p) map=%p pmap=%p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: create(root=%p,cpu=<%d,%d>,64bit=%d,driverkit=%d,base=0x%llx,size=0x%llx) <- NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vm_shared_region_lookup"
        prototype = ""
        caller = "vm_shared_region_enter"
    }
    new {
        args = 1
        anchors {
            new {
                string = "shared_region: -> reference(%p)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: reference(%p) <- %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vm_shared_region_reference"
        prototype = ""
        caller = "shared_region_pager_setup"
    }
    new {
        args = 1
        anchors {
            new {
                string = "shared_region: -> deallocate(%p)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: deallocate(%p): ref now %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: deallocate(%p): armed timer\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: deallocate(%p) <-\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vm_shared_region_deallocate"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "shared_region: -> start_address(%p)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: start_address(%p) <- 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vm_shared_region_start_address"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s(): shared_region_pager_match() failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s(): find_mapping_to_slide() failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s(): doesn't fully cover\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s(): mach_vm_map_kernel() failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vm_shared_region_auth_remap"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Failed to undo mappings because of NULL shared region.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "shared_region: mapping[%d]: address:0x%016llx size:0x%016llx offset:0x%016llx maxprot:0x%x prot:0x%x: undoing...\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_shared_region_undo_mappings"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "shared_region: region_slide(slide:0x%x start:0x%016llx size:0x%016llx) failed 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: map(%p) <- 0x%x \n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vm_shared_region_map_file"
        prototype = ""
        caller = "_shared_region_map_and_slide"
    }
    new {
        args = 6
        anchors {
            new {
                string = "shared_region: -> enter(map=%p,task=%p,root=%p,cpu=<%d,%d>,64bit=%d,driverkit=%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "shared_region: -> enter(map=%p,task=%p,root=%p,cpu=<%d,%d>,64bit=%d,reslide=%d,driverkit=%d): lookup failed !\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "shared_region: enter(%p,%p,%p,%d,%d,%d,%d,%d): nested vm_map_enter(0x%llx,0x%llx,%p) error 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "shared_region: enter(%p,%p,%p,%d,%d,%d,%d,%d) <- 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_shared_region_enter"
        prototype = ""
        caller = "vm_map_exec"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s:%d vm_map(0x%llx, 0x%llx) error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "vm_shared_region_remove"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_shared_region_remove"
        prototype = ""
        caller = "shared_region_check_np"
    }
    new {
        args = 0
        anchors {
            new {
                string = "commpage text: ->init()\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "commpage text: init() <-\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ARM comm page text section %s,%s missing @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "__commpage_text"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_commpage_text_init"
        prototype = ""
        caller = "kernel_bootstrap_thread"
    }
    new {
        args = 0
        anchors {
            new {
                string = "commpage: -> init()\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "commpage: init() <-\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_commpage_init"
        prototype = ""
        caller = "kernel_bootstrap_thread"
    }
    new {
        args = 1
        anchors {
            new {
                string = "vm_shared_region_slide: -> slide %#x, entry_start %#llx, entry_size %#llx, slide_start %#llx, slide_size %#llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: no shared region?\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "vm_shared_region_slide"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vm_shared_region_slide: <- %d (no shared region)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "slide_info initialization failed with kr=%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "vm_shared_region_slide: <- %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Slide_info_size too small: %lx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Slide_info_size too large: %lx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "copyin of slide_info failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Too many auth/private sections for shared region!!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "No sliding bitmap entry for pageIndex: %d at entryIndex: %d amongst %d entries\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s bad slide_info_size: %lx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vm_shared_region_slide_sanity_check_v2"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vm_shared_region_slide_sanity_check_v3: s_info->page_size != PAGE_SIZE_FOR_SR_SL 0x%llx != 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vm_shared_region_slide_sanity_check_v3: required_size != slide_info_size 0x%llx != 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vm_shared_region_slide_sanity_check_v4"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vm_shared_region_slide_sanity_check_v5: s_info->page_size != PAGE_SIZE_FOR_SR_SL 0x%llx != 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vm_shared_region_slide_sanity_check_v5: required_size != slide_info_size 0x%llx != 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_shared_region_slide"
        prototype = ""
        caller = "vm_shared_region_map_file"
    }
    new {
        args = 0
        anchors {
            new {
                string = "shared_region: pivot(%p): armed timer\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_shared_region_pivot"
        prototype = ""
        caller = "shared_region_pivot"
    }
    new {
        args = 0
        anchors {
            new {
                string = "shared_region: -> reference_locked(%p)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: reference_locked(%p) <- %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vm_shared_region_reference_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "shared_region: -> destroy(%p) (root=%p,cpu=<%d,%d>,64bit=%d,driverkit=%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: destroy(%p) <-\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vm_shared_region_destroy"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "shared_region: -> map(%p)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: more than 1 non-zero slide value amount slide 1:0x%x slide 2:0x%x\n "
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: mapping[0]: address:0x%016llx size:0x%016llx offset/addr:0x%016llx maxprot:0x%x prot:0x%x fd==-1\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s(): for fd==-1 vm_map_enter() in kernel failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s(): for fd==-1 copyin() failed, errno=%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s(): for fd==-1 vm_map_enter() in SR failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: mapping[%d]: address:0x%016llx size:0x%016llx offset:0x%016llx maxprot:0x%x prot:0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: mapping[%d]: address:0x%016llx size:0x%016llx offset:0x%016llx maxprot:0x%x prot:0x%x too many mappings to slide...\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: mapping[%d]: address:0x%016llx size:0x%016llx offset:0x%016llx maxprot:0x%x prot:0x%x already mapped...\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: mapping[%d]: address:0x%016llx size:0x%016llx offset:0x%016llx maxprot:0x%x prot:0x%x failed 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vm_shared_region_map_file_setup"
        prototype = ""
        caller = "vm_shared_region_map_file"
    }
    new {
        args = 0
        anchors {
            new {
                string = "shared_region: sr_cache_header.imagesTextCount >= UINT32_MAX @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vm_shared_region_map_file_final"
        prototype = ""
        caller = "vm_shared_region_map_file"
    }
    new {
        args = 2
        anchors {
            new {
                string = "No slide entry for this page in toc. PageIndex: %d Toc Count: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "No sliding bitmap entry for entryIndex: %d amongst %d entries\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "vm_shared_region_slide() carry over: i=%d j=%d b=0x%x slide=0x%x old=0x%x new=0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vm_shared_region_slide_page() did not find page start in slide info: pageIndex=%u, count=%u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "vm_shared_region_slide_page() out-of-bounds extras index: index=%u, count=%u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_shared_region_slide_page"
        prototype = ""
        caller = "shared_region_pager_data_request"
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_shared_region_slide_page() offset overflow: pageIndex=%u, start_offset=%u, slide_amount=%u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "rebase_chain"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "shared_region_find_key() no key for region '%s' @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "shared_region_find_key"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "shared_region_key_alloc() inherited key mismatch @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "shared_region_key_alloc"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "shared_region_key_dealloc() Shared region ID '%s' not found @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "shared_region_key_dealloc"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "shared_region_pager_init: memory_object_change_attributes() failed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "shared_region_pager_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "shared_region_pager_data_return: should never get called @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN31IOAppleConvergedIPCRTIInterface21createRingSourceGatedE25AppleConvergedIPCRingTypejP18IOACIPCRingOptionsPP23IOAppleConvergedIPCRing.cold.1"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "shared_region_pager_data_initialize: should never get called @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "msgctl.cold.1"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "shared_region_pager_data_request: vm_fault_page() unexpected error 0x%x\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "shared_region_data_request(%p,0x%llx+0x%llx+0x%04llx): 0x%llx in sliding range [0x%llx:0x%llx]: SLIDE offset 0x%llx=(0x%llx+0x%llx+0x%llx+0x%04llx)[0x%016llx 0x%016llx] code_signed=%d cs_validated=%d cs_tainted=%d cs_nx=%d kr=0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "shared_region_pager_data_request"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s no object for file_control\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "vm_map_with_linking"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_map_with_linking"
        prototype = ""
        caller = "map_with_linking_np"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s(): control NULL\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "dyld_pager_init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dyld_pager_init: memory_object_change_attributes() failed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "dyld_pager_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "dyld_pager_data_return: should never happen! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "compressor_memory_object_init.cold.1"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "dyld_pager_data_initialize: should never happen @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vn_open_auth.cold.6"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "dyld_pager_data_request: vm_fault_page() unexpected error 0x%x\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s(): Range not found for offset 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dyld_pager_data_request"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s(): seg_info out of bounds\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s(): seg->size out of bounds\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s(): seg->size too small\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s(): seg->page_count out of bounds\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s(): seg->page_count too small\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s(): No segment for user VA 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s(): unknown pointer_format %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s(): out of range segInfo->page_start[overflowIndex]"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "fixupPage32"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dyld_pager_data_request"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s(): Invalid ptr auth key %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "signPointer"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "signPointer"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s out of range bind ordinal %u (max %u)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "fixupPage64"
        prototype = ""
        caller = "dyld_pager_data_request"
    }
    new {
        args = 1
        anchors {
            new {
                string = "swapfile_pager_init: memory_object_change_attributes() failed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "swapfile_pager_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "swapfile_pager_data_return: should never get called @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "sysctl_register_oid.cold.2"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "swapfile_pager_data_initialize: should never get called @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN30AppleBCMWLANPCIeCompletionRing6commitEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 4
        anchors {
            new {
                string = "upl_abort_range: kernel_object being DUMPED @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "upl_abort_range"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "wire_count == 0, m = %p, obj = %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "upl_commit_range"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_allocate failed - %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "kext_alloc"
        prototype = ""
        caller = "__ZN6OSKext25initWithPrelinkedInfoDictEP12OSDictionaryb7kc_kind"
    }
    new {
        args = 0
        anchors {
            new {
                string = "__RECEIPT_INFO"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "__aux_kc_receipt"
                segment = "__TEXT"
                section = "__cstring"
                caller = "getsectbynamefromheader"
            }
        }
        symbol = "kext_receipt"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s is not supported on this kernel architecture (called from %s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "kmod_get_info"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kmod_get_info"
        prototype = ""
        caller = "_Xkmod_get_info"
    }
    new {
        args = 0
        anchors {
            new {
                string = "__memmove_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__memmove_chk"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "__memset_chk object size check failed: dst %p, c %c, (%zu < %zu) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__memset_chk"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "__strlcat_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__strlcat_chk"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "__strlcpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__strlcpy_chk"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "__strncpy_chk object size check failed: dst %p, src %p, (%zu < %zu) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__strncpy_chk"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "__strncat_chk object size check failed: dst %p, src %p, (%zu < %zu + %zu + 1) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__strncat_chk"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "__strcpy_chk object size check failed: dst %p, src %p, (%zu < %zu + 1) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__strcpy_chk"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "__strcat_chk object size check failed: dst %p, src %p, (%zu < %zu + %zu + 1) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__strcat_chk"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kperf: unable to parse '%s' as action sampler\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "kperf: missing timer period in config\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "kperf: unable to parse '%s' as timer period\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "kperf: cannot enable sampling at boot: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "kperf_kernel_configure"
        prototype = ""
        caller = "kperf_init_early"
    }
    new {
        args = 0
        anchors {
            new {
                string = "kperf: pending AST to non-current thread @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "action.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kperf_ast_pend"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "HUH @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "callstack.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kperf_ucallstack_pend"
        prototype = ""
        caller = "kperf_sample"
    }
    new {
        args = 0
        anchors {
            new {
                string = "kperf: failed to create PET thread %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "pet.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kperf-pet-sampling"
                segment = "__TEXT"
                section = "__cstring"
                caller = "bsd_setthreadname"
            }
        }
        symbol = "kppet_config"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kperf: timer fired at %llu, but sampling is disabled @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kperf: unknown sampling state 0x%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kptimer_expire"
        prototype = ""
        caller = "kperf_timer_expire"
    }
    new {
        args = 0
        anchors {
            new {
                string = "kptimer"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kptimer_set_count"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kpc_percpu_alloc failed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kpc_common.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kpc_register_cpu"
        prototype = ""
        caller = "ml_processor_register"
    }
    new {
        args = 0
        anchors {
            new {
                string = "setting period %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "kpc_set_period"
        prototype = ""
        caller = "sysctl_kpc_set_period"
    }
    new {
        args = 0
        anchors {
            new {
                string = "kpc: pm released counters\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kpc_release_pm_counters"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Serial keyboard started\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "serial_keyboard_init @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "serial_keyboard_init"
        prototype = ""
        caller = "kernel_bootstrap_thread"
    }
    new {
        args = 0
        anchors {
            new {
                string = "serial_keyboard_poll: Shouldn't never ever get here... @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "serial_keyboard_poll"
        prototype = ""
        caller = "serial_keyboard_start"
    }
    new {
        args = 1
        anchors {
            new {
                string = "switch_to_old_console: unknown ops %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "kPEDisableScreen %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "kPEEnableScreen %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "PE_initialize_console"
        prototype = ""
        caller = "__ZN16IOPlatformExpert14setConsoleInfoEP8PE_Videoj"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Automatic NMI"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_serial_getc_0"
        prototype = ""
        caller = "serial_keyboard_poll"
    }
    new {
        args = 0
        anchors {
            new {
                string = "initialize_screen: b=%08llX, w=%08X, h=%08X, r=%08X, d=%08X\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "initialize_screen: No video - forcing serial mode\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "initialize_screen"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "meter"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vcattach"
        prototype = ""
        caller = "PE_init_iokit"
    }
    new {
        args = 0
        anchors {
            new {
                string = "telemetry_buffer_size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Telemetry: Allocation failed: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "telemetry_notification_leeway"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "telemetry: nonsensical telemetry_notification_leeway boot-arg %d changed to %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "telemetry_sample_rate"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "telemetry_sample_all_tasks"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Telemetry: Sampling %stasks once per %u second%s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "telemetry_init_0"
        prototype = ""
        caller = "kernel_bootstrap"
    }
    new {
        args = 2
        anchors {
            new {
                string = "telemetry: disabling ustackshot on PMI\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "instructions"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "cycles"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "telemetry: ustackshot every %llu %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "telemetry_pmi_setup"
        prototype = ""
        caller = "telemetry"
    }
    new {
        args = 0
        anchors {
            new {
                string = "bootprofile_buffer_size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bootprofile_interval_ms"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bootprofile_stackshot_flags"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bootprofile_proc_name"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bootprofile_type"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Boot profile: Allocation failed: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "Boot profile: Sampling %s once per %u ms at %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "all procs"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "bootprofile_init"
        prototype = ""
        caller = "kernel_bootstrap_thread"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Telemetry (MACF): Allocation failed: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "telemetry_macf_init_locked"
        prototype = ""
        caller = "telemetry_macf_mark_curthread"
    }
    new {
        args = 0
        anchors {
            new {
                string = "cc_abort.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cc_abort"
        prototype = ""
        caller = "cc_try_abort"
    }
    new {
        args = 0
        anchors {
            new {
                string = "random_cpu_init: kernel prng has not been installed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ml_processor_register"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "[%d]%s>pset_create(cluster_id=%d) returned pset %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "[%d]%s>cpu_id %p cluster_id %d cpu_number %d is type %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "ml_processor_register"
        prototype = ""
        caller = "__ZL15cpu_boot_threadPvi"
    }
    new {
        args = 0
        anchors {
            new {
                string = "ccdrbg_init() returned %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Early boot random cchkdf_expand %s failed with err %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Expected %u seed bytes from bootloader, but got %u. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "bootseed_init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "prngseed_init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "entropy_init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "early_random_init"
        prototype = ""
        caller = "early_random"
    }
    new {
        args = 0
        anchors {
            new {
                string = "read_erandom ccdrbg error %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "read_erandom_generate"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "entropy-data"
                segment = "__TEXT"
                section = "__cstring"
                caller = "lck_grp_init_flags"
            }
        }
        symbol = "entropy_init"
        prototype = ""
        caller = "register_and_init_prng"
    }
    new {
        args = 1
        anchors {
            new {
                string = "apple_protect_pager_init: memory_object_change_attributes() failed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "apple_protect_pager_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "apple_protect_pager_data_return: should never get called @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN21AppleGPIOICController5startEP9IOService.cold.9"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "apple_protect_pager_data_initialize: should never get called @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__Z18IOPCIRangeOptimizeP10IOPCIRange.cold.1_0"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "apple_protect_pager_data_request: vm_fault_page() unexpected error 0x%x\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "apple_protect_data_request(%p,0x%llx+0x%llx+0x%04llx): out of crypto range [0x%llx:0x%llx]: COPY [0x%016llx 0x%016llx] code_signed=%d cs_validated=%d cs_tainted=%d cs_nx=%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "apple_protect_data_request(%p,0x%llx+0x%llx+0x%04llx): in crypto range [0x%llx:0x%llx]: DECRYPT offset 0x%llx=(0x%llx-0x%llx+0x%llx+0x%llx+0x%04llx)[0x%016llx 0x%016llx] code_signed=%d cs_validated=%d cs_tainted=%d cs_nx=%d ret=0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "apple_protect_pager_data_request"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: failed pmap_enter, virt=%p, start_addr=%p, end_addr=%p, prot=%#x, flags=%#x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pmap_map"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pmap_map"
        prototype = ""
        caller = "io_map"
    }
    new {
        args = 0
        anchors {
            new {
                string = "pmap_map_bd @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pmap_map_bd_with_options"
        prototype = ""
        caller = "io_map"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: area too large, pa_start=%p, len=%p, prot=0x%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: insufficient pages, pa_start=%p, len=%p, prot=0x%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pmap_map_high_window_bd"
        prototype = ""
        caller = "PE_consistent_debug_inherit"
    }
    new {
        args = 0
        anchors {
            new {
                string = "pmap_asid_plru"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "arm_maxoffset"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pmap_panic_dev_wimg_on_managed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pmap-max-asids"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pmap-max-asids property is not a 32-bit integer @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "pmap-max-asids 0x%x too large @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "pmap-max-asids cannot be zero @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pmap_bootstrap"
        prototype = ""
        caller = "arm_vm_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Panic occurred while attempting to lock PAI %u (%p):\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "PAI is of type PVH_TYPE_NULL.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PAI is of type PVH_TYPE_PTDP.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PAI contains an IOMMU mapping, but the IOMMU state is invalid\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "<No Driver Supplied Name>"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PTEP (%p) is an IOMMU mapping (state: %p) mapped by %s (on behalf of %s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "Kernel"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PTEP (%p) is a %s CPU mapping (pmap: %p)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "\nTotal number of PTEPs: %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
        }
        symbol = "pmap_panic_inspect_pai"
        prototype = ""
        caller = "SavePanicInfo"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: Passed in pmap doesn't own the page table to be deleted ptd=%p ptd->pmap=%p pmap=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "pmap_tte_deallocate"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pmap_tte_deallocate"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pmap_set_ptov_ap"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pmap_set_ptov_ap"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pmap_protect_options() pmap %p start 0x%llx end 0x%llx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pmap_protect_options"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: failed pmap_enter_addr, pmap=%p, va=%#llx, pa=%llu, size=%u, prot=%#x, flags=%#x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pmap_map_block_addr"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pmap_map_block_addr"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: failed with return code %d; pmap: 0x%016llx, v: 0x%016llx, wired: %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pmap_change_wiring"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pmap_change_wiring"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: failed to make forward progress from 0x%llx to 0x%llx at 0x%llx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "pmap_nest"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pmap_nest"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: failed to insert the shared page, kr=%d, pmap=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "pmap_insert_commpage"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pmap_insert_commpage"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s(%p): attempt to pin static mapping for page 0x%llx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s(%p): physical page 0x%llx belongs to PPL @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s(%p): VA no longer mapped to physical page 0x%llx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pmap_pin_kernel_pages"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s(%p): physical page 0x%llx not pinned @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pmap_unpin_kernel_pages"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: addr 0x%016llx doesn't have a valid kernel mapping @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: I/O filter entry found at 0x%016llx for %llu-byte wide register at va: 0x%016llx and pa: 0x%016llx, but I/O filter refused to write it. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: width %llu not supported @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pmap_iofilter_protected_write"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "initialized PPL provisioning profile data\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pmap_initialize_provisioning_profiles"
        prototype = ""
        caller = "csm_initialize_provisioning_profiles"
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMAP_CS: underflow on the max_profile_blob_size: %lu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "PMAP_CS: overflow on the profile_blob_size: %lu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "PMAP_CS: profile does not validate through CoreTrust: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "PMAP_CS: profile does not have any content: %p | %lu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "PMAP_CS: unable to create a CoreEntitlements context for the profile @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "PMAP_CS: fatal error while setting up profile entitlements: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "PMAP_CS: Anomaly, profile already exists in the tree: %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pmap_register_provisioning_profile_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMAP_CS: unregistering an unknown profile: %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pmap_unregister_provisioning_profile_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMAP_CS: associating an unknown profile: %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "PMAP_CS: attempted association with unverified profile: %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "PMAP_CS: overflow on reference count for profile: %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pmap_associate_provisioning_profile_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "PMAP_CS: attempted to associate NULL kernel entitlements: %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pmap_associate_kernel_entitlements_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pmap_resolve_kernel_entitlements_internal"
                segment = "__TEXT"
                section = "__cstring"
                caller = "validate_user_pmap"
            }
        }
        symbol = "pmap_resolve_kernel_entitlements_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMAP_CS: unable to gauge index size for entitlements acceleration: %p | %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "PMAP_CS: unable to accelerate entitlements: %p | %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "PMAP_CS: entitlements not marked as accelerated: %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pmap_accelerate_entitlements_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMAP_CS [CoreEntitlements]: encountered an unrecoverable error @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kernel_mach_msg_rpc.cold.3"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMAP_CS: CoreEntitlements allocating index without buffer @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "PMAP_CS: CoreEntitlements allocating index with mismatched size: %lu | %u @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pmap_cs_alloc_index"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "PMAP_CS: magic number mismatch on acceleration buffer: %u @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pmap_cs_free_index"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pai %d already locked down @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pmap_static_allocations_done"
        prototype = ""
        caller = "arm_vm_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: L%d TTE is already empty. Potential double unmap or memory stomper? pmap=%p ttep=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: Found inconsistent state in soon to be deleted L%d table: %d valid, %d compressed, %d non-empty, refcnt=%d, L%d tte=%#llx, pmap=%p, bpte=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pmap_tte_remove"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pmap_tt_deallocate(): ptdp %p, count %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pmap_tt_deallocate"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: no ptep? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "pmap_update_tt3e"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pmap_update_tt3e"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "PMAP_CS: PNX bit not set for PTE: %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "validate_debug_pte"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "PMAP_CS: cannot query for entitlements as pmap_cs is disabled @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "PMAP_CS: attempted to query kernel_pmap for entitlements @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "check_entitlement_pmap"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "check_entitlement_pmap"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMAP_CS: compilation service binary signed as a main binary @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "code_signature_validate_constraints"
        prototype = ""
        caller = "code_signature_validate"
    }
    new {
        args = 0
        anchors {
            new {
                string = "LOCALSPKEY"
                segment = "__TEXT"
                section = "__cstring"
                caller = "_strcmp"
            }
            new {
                string = "PMAP_CS: failed to validate serialized local signing entitlements constraint: %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "PMAP_CS: failed acquiring unmanaged context for local signing entitlements: %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "validate_constraints_local_signing"
        prototype = ""
        caller = "code_signature_validate_constraints"
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMAP_CS: AppleInternalProfile field not a boolean type in provisioning profile @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "validate_constraints_profile_preflight"
        prototype = ""
        caller = "code_signature_validate_constraints"
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMAP_CS: passed in a NULL address @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "PMAP_CS: address not within kernel memory: %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "PMAP_CS: length causes an address overflow: %p + %lu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "PMAP_CS: address end not within kernel memory: %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "PMAP_CS: address range spans through the read-only zone: %p through %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "PMAP_CS: zero length data not allowed for: %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pmap_cs_assert_addr"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "free blob to add unaligned: (%p,%p)/%zu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "blob free count overflow (bin %d, %d/%d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "blob page count overflow (bin %d, %d/%d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pmap_cs_blob_add_to_free_list"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: physical address is 0 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "pmap_alloc_page_for_kern"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pmap_alloc_page_for_kern"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "%s: PVH entry at pai %d is locked down (%#lx), cannot remove @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: ptep=%p does not match pvh=%p (%p), pai=0x%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: ptep=%p (pai=0x%x) not in pvh=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: unexpected PV head %p, ptep=%p pmap=%p pvh=%p pai=0x%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pmap_remove_pv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: %u addr 0x%llx is not page-aligned @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: %u length 0x%llx is not page-aligned @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: %u addr 0x%llx length 0x%llx wraps around @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: %u addr 0x%llx length 0x%llx overlaps physical memory @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pmap_compute_io_rgns"
        prototype = ""
        caller = "pmap_data_bootstrap"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: io filter entry %u offset 0x%hx length 0x%hx crosses page boundary @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "pmap_compute_io_filters"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pmap_compute_io_filters"
        prototype = ""
        caller = "pmap_data_bootstrap"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: io filter entry %u and %u overlap. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "pmap_load_io_filters"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pmap_load_io_filters"
        prototype = ""
        caller = "pmap_data_bootstrap"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: pmap array index %lu >= limit %lu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: pmap %p does not match array element %p at index %lu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: pmap %p is not in use @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "validate_user_pmap"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: failed, no pages available? kr=%d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "pmap_ppl_interface.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mapping_free_prime"
        prototype = ""
        caller = "kernel_bootstrap"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Returned from exception_triage()? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Trap with %d words of args? We only support 9. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "mach_syscall"
        prototype = ""
        caller = "sleh_synchronous"
    }
    new {
        args = 0
        anchors {
            new {
                string = "CTRR (MMU) Begin: %p End: %p, setting lockdown\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "rorgn_lockdown"
        prototype = ""
        caller = "machine_lockdown"
    }
    new {
        args = 0
        anchors {
            new {
                string = "/chosen/lock-regs"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "lock-regs: /chosen/lock-regs not found (your iBoot or EDT may be too old) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "amcc-ctrr-a"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ioa-ctrr-a"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "amcc_find_lock_group_data"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "map aperture_phys_addr[%u]/%#x failed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Inconsistent memory config @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "rorgn_stash_range"
        prototype = ""
        caller = "machine_init"
    }
    new {
        args = 1
        anchors {
            new {
                string = "lock-regs: /chosen/lock-regs/%s not found @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "aperture-count"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s %u exceeds maximum %u @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "aperture-size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: have %u apertures, but 0 size @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "plane-count"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "plane-stride"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: plane-count (%u) > 1, but stride is 0/missing @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: aperture-size (%#x) is insufficent to cover plane-count (%#x) of plane-stride (%#x) bytes @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "aperture-phys-addr"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: missing required %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: aperture-phys-addr size (%#x) != (aperture-count (%#x) * PA size (%#zx) = %#lx) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "cache-status"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "master-lock"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_dt_get_lock_group"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s-reg-offset"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: missing property '%s' @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s-reg-mask"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s-reg-value"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_dt_get_lock_reg"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "lock-regs: /chosen/lock-regs/%s/%s not found @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "page-size-shift"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "lower-limit"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "upper-limit"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "write-disable"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_dt_get_lock_type"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Unknown CPU subtype... @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "cpu_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "cpu_start() cpu: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "cpu_start"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "can't shutdown: PE_halt_restart returned %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ml_arm_sleep"
        prototype = ""
        caller = "PE_cpu_machine_quiesce"
    }
    new {
        args = 0
        anchors {
            new {
                string = "effective-production-status-ap"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cpu_machine_idle_init"
        prototype = ""
        caller = "arm_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "cpu_control(%d,%p,%d) not implemented\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "_Xprocessor_control"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "CPU%d failed to shut down @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "CPU %d failed to reach ARM_CPU_ON_SLEEP_PATH: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "cpu_exit_wait"
        prototype = ""
        caller = "processor_doshutdown"
    }
    new {
        args = 0
        anchors {
            new {
                string = "cpu_xcall_internal: invalid cpu_number %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "cpu_xcall_internal: cannot have null func/param: %p %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "cpu_xcall_internal: cpu %d not initialized @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "cpu_xcall_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "CPU%u has failed to respond to cross-call after %llu nanoseconds (timeout = %llu ns) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "cpu_signal of self while signals are disabled @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "cpu_signal_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = " vm_cache_geometry_colors: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "%s() - %u bytes %s cache (I:%u D:%u (%s)), %u-way assoc, %u bytes/line\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "do_cacheid"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "unified"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "separate"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "do_cacheid"
        prototype = ""
        caller = "cpu_init"
    }
    new {
        args = 1
        anchors {
            new {
                string = "user_ts_jop"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "diversify_user_jop"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kernel_startup_bootstrap"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "maxmem"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bpret"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "immediate_NMI"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Unable to find 'chosen' DT node @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "dram-base"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Unable to find 'dram-base' entry in the 'chosen' DT node @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "dram-size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Unable to find 'dram-size' entry in the 'chosen' DT node @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kprintf initialized\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "Serial mode specified: %08X\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "drain_uart_sync"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "WARNING: Forcing uart driver to output synchronously.printf()s/IOLogs will impact kernel performance.\nYou are advised to avoid using 'drain_uart_sync' boot-arg.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "WARNING: invalid serial boot-args : ON_DEMAND (0x%x) flag requires INPUT(0x%x). Ignoring ON_DEMAND.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "The cpumask=N boot arg cannot be used together with cpus=N, and the boot CPU must be enabled @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "aprr_jit"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "icdsb"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "arm_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "unexpected preemption count %u on boot cpu thread (should be %u) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "arm_cpu_init(): cpu %d online\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "arm_init_cpu"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "phystokv_range"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "phystokv_range"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: illegal VA: %p; virt base 0x%llx, size 0x%llx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ml_static_vtop"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ml_static_vtop"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Unexpected /chosen/memory-map/TrustCache property size %u != %zu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Unexpected location of TrustCache region: %#lx != %#lx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "TrustCache region is in an unexpected place: %#lx > %#lx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "EXTRADATA is in an unexpected place: %#lx > %#lx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "AuxKC"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "AuxKC-mach_header"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "auxkc_base (%p) not below segLOWEST (%p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "arm_vm_prot_init"
        prototype = ""
        caller = "arm_vm_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Unsupported memory configuration %lx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "__PPLTEXT"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "__PPLTRAMP"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "__PPLDATA_CONST"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "__PPLDATA"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "__LAST"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "__LASTDATA_CONST"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "__hib_text"
                segment = "__TEXT"
                section = "__cstring"
                caller = "getsectbynamefromheader"
            }
            new {
                string = "__hib_const"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "__HIBDATA"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "use_contiguous_hint"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "segLOWESTAuxKC (%p) not equal to segLOWEST (%p). auxkc_mh: %p, auxkc_base: %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "arm_vm_init"
        prototype = ""
        caller = "arm_init"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: PTOV table limit exceeded; segment va = 0x%llx, size = 0x%llx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "arm_vm_physmap_slide"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "arm_vm_physmap_slide"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: cpte=%#llx is not empty, vaddr=%#lx, pte=%#llx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "arm_vm_map"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "arm_vm_map"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ml_probe_read() unimplemented @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZL31IOShutdownNotificationsTimedOutPvS__0"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Not yet implemented. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN30AppleT8101PlatformErrorHandler16_handleDCSErrorsEv.cold.1"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s address error: passed in address (%#llx) not a kernel managed address @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s alignment error: tried accessing addresses spanning more than one page %#llx %#lx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "apply_func_phys"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ml_phys_read_data"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Invalid size %d for ml_phys_read_data @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Read from physical addr 0x%llx took %llu ns, result: 0x%016llx%016llx (start: %llu, end: %llu), ceiling: %llu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ml_phys_read_data"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ml_phys_write_data"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Invalid size %d for ml_phys_write_data @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Write from physical addr 0x%llx took %llu ns, data: 0x%016llx%016llx (start: %llu, end: %llu), ceiling: %llu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ml_phys_write_data"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Invalid spinlock %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Lock not owned %p = %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Lock not owned by current thread %p = %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Lock owned by current thread %p = %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "lck_spin_assert(): invalid arg (%u) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "lck_spin_assert"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s at pc 0x%016llx, lr 0x%016llx (saved state: %p%s)\n\t  x0:  0x%016llx x1:  0x%016llx  x2:  0x%016llx  x3:  0x%016llx\n\t  x4:  0x%016llx x5:  0x%016llx  x6:  0x%016llx  x7:  0x%016llx\n\t  x8:  0x%016llx x9:  0x%016llx  x10: 0x%016llx  x11: 0x%016llx\n\t  x12: 0x%016llx x13: 0x%016llx  x14: 0x%016llx  x15: 0x%016llx\n\t  x16: 0x%016llx x17: 0x%016llx  x18: 0x%016llx  x19: 0x%016llx\n\t  x20: 0x%016llx x21: 0x%016llx  x22: 0x%016llx  x23: 0x%016llx\n\t  x24: 0x%016llx x25: 0x%016llx  x26: 0x%016llx  x27: 0x%016llx\n\t  x28: 0x%016llx fp:  0x%016llx  lr:  0x%016llx  sp:  0x%016llx\n\t  pc:  0x%016llx cpsr: 0x%08x         esr: 0x%016llx  far: 0x%016llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = " INVALID"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "panic_with_thread_kernel_state"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Unexpected debugger trap while SP1 selected"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Synchronous exception taken while SP1 selected"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sleh_synchronous_sp1"
        prototype = ""
        caller = "fleh_synchronous_sp1"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Exception on 2-byte instruction, context=%p, esr=%#llx, far=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Exception on 2-byte instruction"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Invalid SVC_64 context @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Kernel instruction fetch abort"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Unsupported Class %u event code. state=%p class=%u esr=%llu far=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Hardware Breakpoint Debug exception from kernel. Panic (by design)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Software Step Debug exception from kernel. Panic (by design)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Illegal instruction set exception. state=%p class=%u esr=%llu far=%p spsr=0x%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Unexpected jitbox fault in the kernel, state=%p, esr=%#llx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "UC access exception from kernel, state=%p, esr=%#llx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Unrecognized private exception, state=%p, esr=%#llx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "AMX exception from kernel, state=%p, esr=%#llx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Unrecognized AMX exception, state=%p, esr=%#llx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "MSR/MRS trap (ESR 0x%llx) from 32-bit state @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "MSR/MRS trap (ESR 0x%llx) from kernel @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "sleh_synchronous"
        prototype = ""
        caller = "_fleh_synchronous"
    }
    new {
        args = 0
        anchors {
            new {
                string = "attempt to set invalid recovery handler %p on kernel saved-state %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "panic_on_invalid_recovery_handler"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Invalid kernel stack pointer (probable overflow)."
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic_with_thread_kernel_state"
            }
            new {
                string = "Invalid kernel stack pointer (probable corruption)."
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic_with_thread_kernel_state"
            }
        }
        symbol = "sleh_invalid_stack"
        prototype = ""
        caller = "fleh_invalid_stack"
    }
    new {
        args = 3
        anchors {
            new {
                string = "Unexpected host abort from guest context"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sleh_guest_synchronous"
        prototype = ""
        caller = "_fleh_guest_synchronous"
    }
    new {
        args = 1
        anchors {
            new {
                string = "Undefined kernel instruction: pc=%p instr=%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "handle_uncategorized"
        prototype = ""
        caller = "sleh_synchronous"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Break 0x%04X instruction exception from kernel. Ptrauth failure with %s key resulted in 0x%016llx"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "0x%016llx"
                segment = "__TEXT"
                section = "__cstring"
                caller = "_strlen"
            }
            new {
                string = "0xFFFFFFFFFFFFFFFF"
                segment = "__TEXT"
                section = "__cstring"
                caller = "_strlen"
            }
        }
        symbol = "ptrauth_handle_brk_trap"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "panic: corrupt list around element %p"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "panic: string operation caused an overflow"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "xnu_hard_trap_handle_breakpoint"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "PC alignment exception from kernel."
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic_with_thread_kernel_state"
            }
        }
        symbol = "handle_pc_align"
        prototype = ""
        caller = "sleh_synchronous"
    }
    new {
        args = 1
        anchors {
            new {
                string = "SP alignment exception from kernel."
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic_with_thread_kernel_state"
            }
        }
        symbol = "handle_sp_align"
        prototype = ""
        caller = "sleh_synchronous"
    }
    new {
        args = 1
        anchors {
            new {
                string = "Floating point exception from kernel"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Unrecognized floating point exception, state=%p, esr=%#llx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "handle_fp_trap"
        prototype = ""
        caller = "sleh_synchronous"
    }
    new {
        args = 1
        anchors {
            new {
                string = "SW_STEP_DEBUG exception from kernel."
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic_with_thread_kernel_state"
            }
            new {
                string = "SW_STEP_DEBUG exception thread DebugData is NULL."
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic_with_thread_kernel_state"
            }
        }
        symbol = "handle_sw_step_debug"
        prototype = ""
        caller = "sleh_synchronous"
    }
    new {
        args = 1
        anchors {
            new {
                string = "User abort from non-interruptible context"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vm_fault() KERN_FAILURE from user fault on thread %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "handle_user_abort"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Unexpected residue @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Unexpected atomic LDST size %llu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Unexpected SWP encoding, opc=%llu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "handle_alignment_fault_from_user"
        prototype = ""
        caller = "handle_user_abort"
    }
    new {
        args = 1
        anchors {
            new {
                string = "Unexpected page fault under dtrace_probe"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Unexpected fault in kernel static region\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Unaligned kernel data abort."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Unclassified kernel abort (fault_code=0x%x)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "Kernel data abort."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "handle_kernel_abort"
        prototype = ""
        caller = "sleh_synchronous"
    }
    new {
        args = 0
        anchors {
            new {
                string = "PAC failure (ESR 0x%llx) from 32-bit state @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "PAC failure from kernel with %s key while authing %s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PAC failure from kernel with %s key while returning"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PAC failure from kernel with %s key"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "handle_pac_fail"
        prototype = ""
        caller = "sleh_synchronous"
    }
    new {
        args = 0
        anchors {
            new {
                string = "ESR (0x%llx) for instruction trapped from U32, but saved state is 64-bit. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ESR (0x%llx) for instruction trapped from U32, actually came from kernel? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "handle_user_trapped_instruction32"
        prototype = ""
        caller = "sleh_synchronous"
    }
    new {
        args = 0
        anchors {
            new {
                string = "ESR (0x%llx) for SIMD trap from userland, actually came from kernel? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "handle_simd_trap"
        prototype = ""
        caller = "sleh_synchronous"
    }
    new {
        args = 2
        anchors {
            new {
                string = "vm_fault() KERN_FAILURE from guest fault on state %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "handle_guest_abort"
        prototype = ""
        caller = "sleh_guest_synchronous"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Unrecognized guest trap exception, state=%p, esr=%#llx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "handle_guest_trap"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: Invalid required state size %lu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "sched_perfcontrol_register_callbacks"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sched_perfcontrol_register_callbacks"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "siq_realtime_thread_mode"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Invalid siq_realtime_thread_mode %u @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "siq_init"
        prototype = ""
        caller = "arm_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Invalidate HMAC function already set @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "set_invalidate_hmac_function"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Invalidate HMAC function wasn't set when needed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "machine_lockdown"
        prototype = ""
        caller = "kernel_bootstrap_thread"
    }
    new {
        args = 0
        anchors {
            new {
                string = "certificate-production-status"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "spr_lockdown"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "slto_us"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "tlto_us"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mtxspin"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "max_wfe_us"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ml_init_lock_timeout"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ml_cpu_down: cpu_signal of cpu %d failure %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "boot cpu powering down with nowhere for its timers to go @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ml_cpu_down"
        prototype = ""
        caller = "processor_offline"
    }
    new {
        args = 0
        anchors {
            new {
                string = "MACH Reboot\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "CPU halted\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "halt_all_cpus"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "cpumask"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "die-cluster-id"
                segment = "__TEXT"
                section = "__cstring"
                caller = "ml_readprop"
            }
            new {
                string = "cluster-core-id"
                segment = "__TEXT"
                section = "__cstring"
                caller = "ml_readprop"
            }
            new {
                string = "unable to retrieve state for cpu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Wrong property size for %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "chip-revision"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "enable_skstb"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "enable_skstsct"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "cluster_power"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ml_parse_cpu_topology"
        prototype = ""
        caller = "arm_init"
    }
    new {
        args = 1
        anchors {
            new {
                string = "ml_static_protect(): %p < %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ml_static_protect(): WX request on %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ml_static_protect(): attempt to inject executable mapping on %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ml_static_protect"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Failed ml_static_mfree on %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ml_static_mfree"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "wfe_events_sec"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "wfe_timeout_configure"
        prototype = ""
        caller = "arm_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "invalid CPSR in user saved-state %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ml_panic_on_invalid_old_cpsr"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "attempt to set non-user CPSR %#010x on user saved-state %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ml_panic_on_invalid_new_cpsr"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Missing mandatory property '%s' @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ml_readprop"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.custom-x18-abi"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "machine_task_process_signature"
        prototype = ""
        caller = "process_signature"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Unknown AMX feature ID bit has been set @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "AMXIDR_EL1 doesn't advertise any known version of AMX @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "configure_misc_apple_regs"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Preemption count underflow @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "preemption_disable.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_enable_preemption_underflow"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Warning: clock is locked.  Can't get time\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mach_absolute_time: 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "Epoch Time:        sec       usec\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "  Boot    : 0x%08x 0x%08x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "  Sleep   : 0x%08x 0x%08x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "  Wake    : 0x%08x 0x%08x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "  Calendar: 0x%08x 0x%08x\n\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
        }
        symbol = "panic_display_times"
        prototype = ""
        caller = "SavePanicInfo"
    }
    new {
        args = 0
        anchors {
            new {
                string = "cpu_signal failed in DebuggerXCallEnter\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s>found CPU %d offline, debugger_sync=%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "%s>Debugger synch pending on cpu %d\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Attempting to forcibly halt cpu %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "cpu %d failed to halt with error %d: %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "cpu %d halted with warning %d: %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Unable to obtain state for cpu %d with status %d: %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "cpu %d successfully halted\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Immediate halt requested on all cores\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush"
            }
            new {
                string = "Debugger synchronization timed out; timeout %llu nanoseconds\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "DebuggerXCallEnter"
        prototype = ""
        caller = "handle_debugger_trap"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Resuming from debugger synchronization failed: waited %llu nanoseconds\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "DebuggerXCallReturn"
        prototype = ""
        caller = "handle_debugger_trap"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s>found_mp_kdp_trap=true found_SIGPdebug=%s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "wait_while_mp_kdp_trap"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "wait_while_mp_kdp_trap"
        prototype = ""
        caller = "processor_cpu_reinit"
    }
    new {
        args = 2
        anchors {
            new {
                string = "context switch with PAN disabled @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "machine_switch_context @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "machine_switch_context"
        prototype = ""
        caller = "thread_invoke"
    }
    new {
        args = 0
        anchors {
            new {
                string = "thread %p already has AMX saved state %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "machine_thread_amx_state_alloc"
        prototype = ""
        caller = "sleh_synchronous"
    }
    new {
        args = 2
        anchors {
            new {
                string = "stack handoff with PAN disabled @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "machine_stack_handoff"
        prototype = ""
        caller = "stack_handoff"
    }
    new {
        args = 0
        anchors {
            new {
                string = "arm_debug_set @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "arm_debug_set"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "rtclock timebase_callback: invalid constant %ld / %ld @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "rtclock.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "timebase_callback"
        prototype = ""
        caller = "arm_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "kdp panic: %s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kdp_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: should not have been invoked. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "_was_in_userspace"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kdp_machdep.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_was_in_userspace"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "hib bank[%d]: 0x%llx (%d) end 0x%llx (%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "hibernate_page_list_allocate"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "monotonic: invalid core counter read: %u @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "mt_core_snap"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mach_bridge_recv_timestamps"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mach_bridge_recv_timestamps"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mach_bridge_set_params"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mach_bridge_set_params"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "sart %p: Invalid config for region %d size 0 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "sart_set_registers"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "UAT PPL: Failed to acquire %p's lock because it has already been acquired by another thread. The IOUAT mutex should have prevented this scenario. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "uat_lock"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "UAT PPL %p (%s): ttbr_index <--> state_object mismatch: vaddr(%#llx) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "UAT PPL %p (%s): address not page-aligned: vaddr(%#llx) PAGE_SIZE(%#llx) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "UAT PPL %p (%s): size not a multiple of PAGE_SIZE: vaddr(%#llx) size(%#llx) PAGE_SIZE(%#llx) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "UAT PPL %p (%s): region wraps round: vaddr(%#llx) size(%#llx) last_vaddr(%#llx) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "UAT PPL %p (%s): region not wholly within permitted inclusive range: vaddr(%#llx) min_vaddr(%#llx) size(%#llx) last_vaddr(%#llx) max_vaddr(%#llx) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "uat_validate_vaddr"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "hmac-reg-base"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: hmac register base is zero @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "secure_hmac_get_reg_base"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pmgr-reg-base"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: pmgr register base is zero @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "secure_hmac_get_aes_reg_base"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "secure_hmac_get_aes_offset"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pmgr-aes-offset"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "secure_hmac_get_aes_offset"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: failed to initialize PPL state object: 0x%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "secure_hmac_init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "secure_hmac_init"
        prototype = ""
        caller = "machine_lockdown"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: pmap_iommu_map failed: 0x%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "secure_hmac_hibernate_begin"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "secure_hmac_hibernate_begin"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: Only non-wired memory should be getting hashed during hibernation restore @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "secure_hmac_reset"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: output_len should be %d but is %zu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: PPL ioctl PPL_HIB_IOCTL_FINAL failed: 0x%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "secure_hmac_final"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: PPL ioctl PPL_HIB_IOCTL_FETCH_HIBSEG failed: 0x%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: PPL ioctl PPL_HIB_IOCTL_FETCH_HIBSEG_INFO failed: 0x%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "secure_hmac_fetch_hibseg_and_info"
        prototype = ""
        caller = "hibernate_write_image"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: PPL ioctl PPL_HIB_IOCTL_COMPUTE_RORGN_HMAC failed: 0x%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "secure_hmac_compute_rorgn_hmac"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "secure_hmac_compute_rorgn_hmac"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: PPL ioctl PPL_HIB_IOCTL_FETCH_RORGN_SHA failed: 0x%x\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "secure_hmac_fetch_rorgn_sha"
        prototype = ""
        caller = "hibernate_write_image"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: PPL ioctl PPL_HIB_IOCTL_FETCH_RORGN_HMAC failed: 0x%x\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "secure_hmac_fetch_rorgn_hmac"
        prototype = ""
        caller = "hibernate_write_image"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: hmac_len should be %d but is %zu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: PPL ioctl PPL_HIB_IOCTL_FINALIZE_IMAGE failed: 0x%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "secure_hmac_finalize_image"
        prototype = ""
        caller = "hibernate_write_image"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: PPL ioctl PPL_HIB_IOCTL_GET_IO_RANGES failed: 0x%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "secure_hmac_get_io_ranges"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "secure_hmac_get_io_ranges"
        prototype = ""
        caller = "hibernate_page_list_allocate"
    }
    new {
        args = 0
        anchors {
            new {
                string = "apple-isa-vm-quota"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "hv_apple_isa_vm_quota"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "hv_vm"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "hv_init"
        prototype = ""
        caller = "kernel_bootstrap_thread"
    }
    new {
        args = 0
        anchors {
            new {
                string = "3B878185-AA62-4E1F-9DC9-D6799CBB6EBB"
                segment = "__TEXT"
                section = "__cstring"
                caller = "uuid_parse"
            }
        }
        symbol = "hv_trap_vcpu_run"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Unexpected failure to free VA space we just allocated: %d! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "mmap_jitbox_region"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "LLC_ERR_STS/ADR/INF=%#llx/%#llx/%#llx LSU_ERR_STS=%#llx FED_ERR_STS=%#llx MMU_ERR_STS=%#llx DPC_ERR_STS=%#llx"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "LLC dup tag multi-hit error by CPU %d: FAR=%#lx way_mask=%#x err_sts: (%s) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "way predictor"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "LLC %s multi-hit error: FAR=%#lx way_mask=%#x err_sts: (%s) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "L2 RAM addr out of range"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "LLC %s error: FAR=%#lx err_sts: (%s) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Unhandled %c-core error: %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s err (%s) %son %c-core: FAR=%#llx %s_ERR_STS=%#llx err_sts: (%s) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = " (UNKNOWN)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = " (Normal completion)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = " (Decode error)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = " (Slave error)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = " (Bus error)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = " (Non-recoverable Uncorrected)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = " (AMX Uncorrected)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = " (Recoverable Uncorrected)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = " (Unavailable)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = " (Reserved)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "cpu%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "cpu%d: LLC %s error%s from %s: FAR=%#lx addr=%#llx cmd=%#x(%s) err_sts: (%s) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "single-bit ECC counter overflow"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "single-bit ECC"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "LLC %s error: FAR=%#lx way=%#x syndrome=%#x err_sts: (%s) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "double-bit cache ECC overflow"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "double-bit cache ECC"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "LLC %s error: FAR=%#lx way=0x%x syndrome=%#x cmd=%#x(%s) err_sts: (%s) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Uncontained LLC AMX %s error: FAR=%#lx way=0x%x syndrome=%#x cmd=%#x(%s) err_sts: (%s) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Unhandled recoverable LLC %s error: FAR=%#lx way=0x%x syndrome=%#x cmd=%#x(%s) err_sts: (%s) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "generic_platform_error_handler"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "l2-ecc-correctable-panic"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "init_generic_platform_error_handler"
        prototype = ""
        caller = "machine_startup"
    }
    new {
        args = 0
        anchors {
            new {
                string = "(va=0x%#llx) "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "format_va"
        prototype = ""
        caller = "generic_platform_error_handler"
    }
    new {
        args = 0
        anchors {
            new {
                string = "(va=%#llx) "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "format_va_or_tlb_set_way"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(PIO offset from this cluster: %#llx, info=%#llx AFID=%#llx%s)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "format_multiple_err_and_pio_addr"
        prototype = ""
        caller = "generic_platform_error_handler"
    }
    new {
        args = 0
        anchors {
            new {
                string = "(multiple errors) "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "format_multiple_err"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(info=%#llx%s) "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "format_multiple_err_and_raw_info"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "[bti_telemetry] bti_telemetry_init\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "bti_telemetry_init"
        prototype = ""
        caller = "kernel_bootstrap"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Unexpectedly found multiple concurrent drains! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Unexpected duplicate splay entry! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Unexpectedly could not acquire telemetry lock (nested acquire will deadlock) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "[bti_telemetry] Unexpected BTI exception (pc=0x%08lx, BTYPE=%d)\n[bti_telemetry] \t<UUID: %s, offset: 0x%08lx>\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "drain_record_submission_buffer_thread_call"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "nfsvc_addsock:: nfsrv_check_exports_allow_address(myname) returned %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "nfssvc_addsock: socket buffer setting SO_SNDBUF to %llu error(s) %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "nfssvc_addsock: socket buffer setting SO_RCVBUF to %llu error(s) %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "nfssvc_addsock: socket timeout setting SO_RCVTIMEO error(s) %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "nfssvc_addsock: socket timeout setting SO_SNDTIMEO error(s) %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "nfssvc_addsock"
        prototype = ""
        caller = "nfssvc"
    }
    new {
        args = 0
        anchors {
            new {
                string = "NFS server: NULL reply from proc = %d error = %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "mbuf siz=%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Bad nfs svc reply @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "nfs_syscalls.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nfssvc_nfsd"
        prototype = ""
        caller = "nfssvc"
    }
    new {
        args = 1
        anchors {
            new {
                string = "Server header: gss_krb5_verify_mic_mbuf failed %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Server args: gss_krb5_verify_mic_mbuf failed %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: gss_krb5_unwrap_mbuf failes %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: Sequence number mismatch seqnum = %d nd->nd_gss_seqnum = %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "reply_mbuf"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "reply_mbuf %p nmc_head %p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nfs_gss_svc_cred_get"
        prototype = ""
        caller = "nfsrv_getreq"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: %d: is running\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %d: Removing contex for %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "nfs_printf"
            }
        }
        symbol = "nfs_gss_svc_ctx_timer"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "gss_krb5_get_mic_mbuf failed %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "nfs_gss_svc_protect_reply"
        prototype = ""
        caller = "nfssvc_nfsd"
    }
    new {
        args = 0
        anchors {
            new {
                string = "nfs_gss_svc_gssd_upcall: can't get gssd port, status %x (%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nfs_gss_svc_gssd_upcall: gssd port not valid\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Calling mach_gss_accept_sec_context\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "mach_gss_accept_sec_context returned %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "nfs_gss_svc_gssd_upcall failed: %x (%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "nfs_gss_svc_gssd_upcall: bad context length (%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Failed to make context from lucid_ctx_buffer\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nfs_gss_svc_gssd_upcall: could not allocate %d bytes\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "nfs_gss_svc_ctx_init"
        prototype = ""
        caller = "nfsrv_null"
    }
    new {
        args = 0
        anchors {
            new {
                string = "nfs_gss_mach_alloc_buffer: vm_map_round_page failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nfs_gss_mach_alloc_buffer: vm_allocate failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nfs_gss_mach_alloc_buffer: vm_map_unwire failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nfs_gss_mach_alloc_buffer: vm_map_copyin failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nfs_gss_mach_alloc_buffer"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "nfsrv_send"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nfsrv_send\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nfsrv_send"
        prototype = ""
        caller = "nfssvc_nfsd"
    }
    new {
        args = 1
        anchors {
            new {
                string = "nfsrv_rcv: mbuf_setnext failed %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "nfsrv_rcv: mbuf_setnext failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "nfsrv_rcv_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "nfs getstream @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "nfsrv_getstream: nfsrv_unprocessed_rpc_current (%u) has reached the max allowed consumption (%u)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "nfsrv_getstream: mbuf_setnext failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "nfsrv_getstream: mbuf_setnext failed 3, %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "nfsrv_getstream"
        prototype = ""
        caller = "nfsrv_rcv_locked"
    }
    new {
        args = 1
        anchors {
            new {
                string = "nfsrv cache @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "nfs_srvcache.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nfsrv cache: reply alloc failed for nonidem request hit\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "nfsrv cache: reply copym failed for nonidem request hit\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "nfsrv cache: nam copym failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "nfsrv_getcache"
        prototype = ""
        caller = "nfssvc_nfsd"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%2.2x "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s    "
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "nfs_dump_mbuf"
        prototype = ""
        caller = "nfsrv_send"
    }
    new {
        args = 0
        anchors {
            new {
                string = "got NULL mbuf? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "nfs_subs.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nfsm_chain_new_mbuf"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nfsrv_free_addrlist: invalid socket address (%u)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nfsrv_free_addrlist: address not found (0)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nfsrv_free_addrlist: address not found (1)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_nfsrv_free_addrlist"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nfsrv_export: warning: nested exports: %s/%s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "nfsrv_export"
        prototype = ""
        caller = "nfssvc_export"
    }
    new {
        args = 0
        anchors {
            new {
                string = "nfsrv_uc_dequeue_wait"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nfsrv_uc_dequeue remove %p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "nfsrv_uc_dequeue"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nfsd_upcall_shutdown_stop"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nfsrv_uc_cleanup"
        prototype = ""
        caller = "nfsrv_cleanup"
    }
    new {
        args = 1
        anchors {
            new {
                string = "nfsd_upcall_shutdown_wait"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nfsd: Could not start nfsd proxy up-call service. Falling back\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "nfsrv_uc_addsock"
        prototype = ""
        caller = "nfssvc_addsock"
    }
    new {
        args = 0
        anchors {
            new {
                string = "nfsd_upcall_handler"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nfsrv_uc_thread"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nfsd up-call queue limit exceeded @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "nfs_upcall.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nfsrv_uc_proxy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s mbuf = %p offset = %d len = %d:\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Count chars %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "printmbuf"
        prototype = ""
        caller = "nfs_gss_svc_cred_get"
    }
    new {
        args = 0
        anchors {
            new {
                string = "buffer"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "printgbuf"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Token id does not match\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Bad flags %x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "krb5_cfx_crypt_mbuf %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Encrypted token mismach\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "gss_krb5_cfx_unwrap_mbuf"
        prototype = ""
        caller = "gss_krb5_unwrap_mbuf"
    }
    new {
        args = 4
        anchors {
            new {
                string = "Bad mic TOK_ID %x %x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Bad flags received %x exptect %x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Bad mic filler %x @ %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "gss_krb5_cfx_verify_mic_mbuf"
        prototype = ""
        caller = "gss_krb5_verify_mic_mbuf"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: bad framing\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: invalid length\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: token to short"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "toklen = %d, length = %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: Invalid mechanism\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: Invalid body\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: Invalid des mac\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "gss_krb5_3des_token_get"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: invalid version %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: Could not decode initiate\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Could not decode endtime\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Could not decode send_seq\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Could not decode recv_seq\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Could not decode mech protocol\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Could not decode rfc1964 sign and seal\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Could not decode rfc4121 acceptor_subkey"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Invalid mech protocol %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Could not decode key enctype\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: could not decode key length\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: etype = %d keylen = %d expected keylen = %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: could not get memory for key\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: could get key value\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "gss_krb5_make_context"
        prototype = ""
        caller = "nfs_gss_svc_ctx_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "netboot: no suitable interface\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "netboot: using network interface '%s'\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "netboot: socreate, error=%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "netboot: SIFFLAGS, error=%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "netboot: can't retrieve IP parameters\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "netboot: IP address %d.%d.%d.%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = " netmask %d.%d.%d.%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = " router %d.%d.%d.%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "netboot: inet_aifaddr failed, %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "netboot: adding default route %d.%d.%d.%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "netboot: default_route_add failed %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "dhcp-response"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "netboot: retrieving IP information from DHCP response\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "netboot: retrieving IP information from BOOTP response\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "rootpath"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "netboot_info_init: rp0='%s' isn't a network path, ignoring\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "netboot: NFS boot is deprecated\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "http:"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "netboot: HTTP URL %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "netboot: root path uses unrecognized format\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "netboot: nested image %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "bsdp-response"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "netboot: retrieving root path from BSDP response\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "netboot: retrieving root path from BOOTP response\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "netboot_mountroot"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "netboot_setup: calling imageboot_mount_image\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "netboot_setup"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "failed to register provider '%s': invalid arguments"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "<NULL>"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "failed to register provider '%s': invalid provider name"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "failed to register provider '%s': invalid provider ops"
                segment = "__TEXT"
                section = "__cstring"
                caller = "cmn_err"
            }
            new {
                string = "failed to register provider '%s': invalid provider attributes"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "failed to register provider '%s': invalid privilege attributes"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "failed to register provider '%s': need dtps_usermode() op for given privilege attributes"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dtrace_register"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "attempt to unregister non-existent dtrace provider %p\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "dtrace_unregister"
        prototype = ""
        caller = "fasttrap_pid_cleanup_cb"
    }
    new {
        args = 0
        anchors {
            new {
                string = "failed to register meta-provider: invalid name"
                segment = "__TEXT"
                section = "__cstring"
                caller = "cmn_err"
            }
            new {
                string = "failed to register meta-register %s: invalid ops"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "failed to register meta-register %s: user-land meta-provider exists"
                segment = "__TEXT"
                section = "__cstring"
                caller = "cmn_err"
            }
        }
        symbol = "dtrace_meta_register"
        prototype = ""
        caller = "fasttrap_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "helper_init before dtrace_init @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "helper_init: failed to allocate a major number!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dtracehelper"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dtrace_init: failed to devfs_make_node for helper!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "helper_init: called twice! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "helper_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "dtrace_kernel_symbol_mode"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kernel_bootstrap_thread"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "dtrace_init: failed to retrieve the hw.memsize, defaulted to %lld bytes\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "dtrace_init: failed to allocate a major number!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dtrace_init: failed to devfs_make_node_clone for dtrace!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "dtrace_dof_mode"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dtrace_init: called twice! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "dtrace_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "dtrace_postinit: Could not register mach_kernel modctl\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "illegal value (%lu) for dtrace_retain_max; setting to 1"
                segment = "__TEXT"
                section = "__cstring"
                caller = "cmn_err"
            }
            new {
                string = "BEGIN"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dof-data-%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "failed to create anonymous state"
                segment = "__TEXT"
                section = "__cstring"
                caller = "cmn_err"
            }
            new {
                string = "unreadable DOF"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "truncated header"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "truncated DOF"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "invalid DOF size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "oversized DOF"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "enabling probe %d (%s:%s:%s:%s)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dtrace_postinit"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "(scope == DIFV_SCOPE_GLOBAL && size <= maxglobalsize) || (scope == DIFV_SCOPE_LOCAL && size <= maxlocalsize)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dtrace_canstore_remains"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "inprobe == 0 || id == dtrace_probeid_error"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dtrace_probe"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "id < (uint_t)vstate->dtvs_nglobals"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "id < (uint_t)vstate->dtvs_nlocals"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "id < (uint_t)vstate->dtvs_ntlocals"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dtrace_dif_emulate"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "dtrace: panic action at probe %s:%s:%s:%s (ecb %p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "dtrace_action_panic"
        prototype = ""
        caller = "dtrace_probe"
    }
    new {
        args = 0
        anchors {
            new {
                string = "attempt to unref non-existent string %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "dtrace_strunref"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "state->dts_formats[ndx]->dtf_refcount < UINT64_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dtrace_ecb_create_enable"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "fmt->dtf_refcount > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dtrace_ecb_destroy"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "returned value did not match expected generation"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dtrace_lazy_dofs_process"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "helper"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ustack"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "unmatched helpers"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "misaligned section offset"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "provider section too small"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "invalid provider name"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "invalid entry size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "misaligned entry size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "invalid function name"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "function name too long"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "invalid probe name"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "invalid probe offset"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "is-enabled offsets with null section"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "invalid is-enabled offset"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "zero probe and is-enabled offsets"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "zero probe offsets"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "invalid args"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bad native argument type"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "native argument type too long"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bad native argument index"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bad translated argument type"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "translated argument type too long"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dtrace_helper_slurp"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "DOF magic string mismatch"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "DOF has invalid data model"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "DOF encoding mismatch"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "DOF version mismatch"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "DOF uses unsupported instruction set"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "DOF uses too many integer registers"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "DOF uses too many tuple registers"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "DOF has invalid ident byte set"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "DOF has invalid flag bits set"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "invalid section header size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "truncated section headers"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "misaligned section headers"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "misaligned section size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "illegal sections for enabling"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bad section alignment"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "misaligned section"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "corrupt section header"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "non-terminating string table"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dtrace_dof_slurp"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Non loadable section with ECB description"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "truncated ECB description"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bad alignment in ECB description"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "invalid probe section"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bad alignment in probe description"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "truncated probe description"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "corrupt probe provider"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "corrupt probe module"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "corrupt probe function"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "corrupt probe name"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dtrace_dof_ecbdesc"
        prototype = ""
        caller = "dtrace_dof_slurp"
    }
    new {
        args = 0
        anchors {
            new {
                string = "invalid DIFO header section"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bad alignment in DIFO header"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bad size in DIFO header"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "exceeds maximum size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bad alignment"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "entry size mismatch"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "corrupt entry size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "unrecognized DIFO subsection"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "missing DIF text"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "cannot write to 0 address\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "invalid branch target %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "dtrace_difo_err"
            }
            new {
                string = "backward branch to %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "invalid integer ref %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "invalid string ref %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "dtrace_difo_err"
            }
            new {
                string = "invalid ref type %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "invalid val type %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "dtrace_difo_err"
            }
            new {
                string = "invalid key\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "expected 'ret' as last DIF instruction\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "dtrace_difo_err"
            }
            new {
                string = "bad return size\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "unrecognized variable scope %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "unrecognized variable type %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%d exceeds variable id limit\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "zero-sized variable\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "oversized by-ref static\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%d changed variable kind\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%d changed variable type flags\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%d changed variable type size\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dtrace_dof_difo"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "dtrace DIF object error: [%u]: "
                segment = "__TEXT"
                section = "__cstring"
                caller = "uprintf"
            }
        }
        symbol = "dtrace_difo_err"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "invalid action section"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "truncated action description"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bad alignment in action description"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "section entry size exceeds total size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bad entry size in action description"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "actions exceed dtrace_actions_max"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bogus format string"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "empty format string"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dtrace_dof_actdesc"
        prototype = ""
        caller = "dtrace_dof_ecbdesc"
    }
    new {
        args = 0
        anchors {
            new {
                string = "illegal variable %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "illegal dynamic variable load\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "illegal dynamic variable store\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dtrace_difo_validate_helper"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "dtrace_open: couldn\\'t acquire minor number %d. This usually means that too many DTrace clients are in use at the moment"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "dtrace_aggid_%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dtrace_state_create"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "unloaded module '%s' had enabled probes"
                segment = "__TEXT"
                section = "__cstring"
                caller = "cmn_err"
            }
        }
        symbol = "dtrace_module_unloaded"
        prototype = ""
        caller = "_dtrace_close"
    }
    new {
        args = 0
        anchors {
            new {
                string = "security restrictions disallow DTRACEIOC_MODUUIDSLIST"
                segment = "__TEXT"
                section = "__cstring"
                caller = "cmn_err"
            }
            new {
                string = "dtrace_kernel_symbol_mode of %u disallows DTRACEIOC_MODUUIDSLIST"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "failed to copyin dtmul_count"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dtmul_count is not valid"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "failed copyin of dtrace_module_uuids_list_t"
                segment = "__TEXT"
                section = "__cstring"
                caller = "cmn_err"
            }
            new {
                string = "failed copyout of dtrace_symbolsdesc_list_t"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dtrace_kernel_symbol_mode of %u disallows DTRACEIOC_PROVMODSYMS"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "failed to copyin dtmodsyms_count"
                segment = "__TEXT"
                section = "__cstring"
                caller = "cmn_err"
            }
            new {
                string = "Invalid dtmodsyms_count value"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Invalid module_symbols_size %ld"
                segment = "__TEXT"
                section = "__cstring"
                caller = "cmn_err"
            }
            new {
                string = "failed copyin of dtrace_module_symbols_t"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_dtrace_ioctl"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Non loadable option section"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bad alignment in option description"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "zeroed option entry size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bad option entry size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "non-zero option string"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "unset option"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "rejected option"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dtrace_dof_options"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "dstate->dtds_chunksize < (LONG_MAX - sizeof (dtrace_dynhash_t))"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(uintptr_t)start < limit"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(uintptr_t)start >= (uintptr_t)base"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "limit <= (uintptr_t)base + size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(uintptr_t)dvar >= (uintptr_t)base && (uintptr_t)dvar <= (uintptr_t)base + size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dtrace_state_go"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "failed to copyin dofiod_count"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dofiod_count is not valid"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "failed copyin of dof_ioctl_data_t"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "failed copyout of dof_ioctl_data_t"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "lazy_dofs_add merged_dofs_count out of range"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "helper_ioctl"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "dtrace load module already exists '%s %u' is failing against '%s %u'"
                segment = "__TEXT"
                section = "__cstring"
                caller = "cmn_err"
            }
            new {
                string = "dtrace module load '%s %u' is failing "
                segment = "__TEXT"
                section = "__cstring"
                caller = "cmn_err"
            }
        }
        symbol = "dtrace_module_loaded"
        prototype = ""
        caller = "dtrace_postinit"
    }
    new {
        args = 0
        anchors {
            new {
                string = "lockstat_init: failed to allocate a major number!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "lockstat_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "dtrace_proc_waitfor"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dtrace_proc_waitfor"
        prototype = ""
        caller = "_dtrace_ioctl"
    }
    new {
        args = 0
        anchors {
            new {
                string = "attempt to remove non-existent invop handler @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "dtrace_subr.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dtrace_invop_remove"
        prototype = ""
        caller = "fbt_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "timer_call_cancel() failed to cancel a timer call: %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "dtrace_cpu_state_changed"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vmem_alloc: failure after blist_resize! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vmem_alloc"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "blist_meta_alloc: allocation too large @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "blst_meta_alloc"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "blst_meta_free: freeing already free blocks (%d) %d/%d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "blst_meta_free: freeing unexpected range @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "blst_meta_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "fbt_init: failed to allocate a major number!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IgnoreFBTBlacklist"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fbt_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "SDT: unable to find prelink info\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sdt_early_init"
        prototype = ""
        caller = "kernel_bootstrap_thread"
    }
    new {
        args = 0
        anchors {
            new {
                string = "SDT: No kernel symbols for %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "__sdt"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sdt_load_machsect"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "sdt_init: failed to allocate a major number!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/dev/sdt couldn\\'t create minor node"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "failed to register sdt provider %s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sdt_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Ignoring probes from unsupported provider %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Ignoring probe %s (no symbol name)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__sdt_provide_module"
        prototype = ""
        caller = "sdt_provide_module"
    }
    new {
        args = 0
        anchors {
            new {
                string = "systrace_init: failed to allocate a major number!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "systrace"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "machtrace"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mach_trap"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "systrace_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "profile_init: failed to allocate a major number!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "profile_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "hrtime_t"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "profile_getargdesc"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "fasttrap_init: failed to allocate a major number!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Could not create fasttrap_cleanup_thread @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "fasttrap.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dtrace_fasttrap_cleanup_thread"
                segment = "__TEXT"
                section = "__cstring"
                caller = "bsd_setthreadname"
            }
            new {
                string = "dtrace.fasttrap_probe_t[1]"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dtrace.fasttrap_probe_t[2]"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dtrace.fasttrap_probe_t[3]"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fasttrap_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Failed to install fasttrap probe for pid %d: Process does not allow invalid code pages\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "cmn_err"
            }
            new {
                string = "Failed to install fasttrap probe for pid %d: Failed to re-acquire process\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "cmn_err"
            }
        }
        symbol = "fasttrap_pid_enable"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "fasttrap_fork: sprlock(%d) returned a different proc\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "fasttrap_fork: failed to re-acquire proc\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fasttrap_fork"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "failed to instantiate provider %s: name too long to accomodate pid"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "failed to instantiate provider %s: %s is an invalid name"
                segment = "__TEXT"
                section = "__cstring"
                caller = "cmn_err"
            }
            new {
                string = "failed to instantiate provider %s for process %u"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fasttrap_meta_provide"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "userland struct sigvec *"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "userland struct sigaltstack *"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "userland struct rusage *"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "userland unsigned char *"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "userland struct statfs *"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "userland fhandle_t *"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "userland void **"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "userland struct rlimit *"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "userland const struct fhandle *"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "userland sem_t *"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "userland struct statfs64 *"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "userland au_id_t *"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "userland struct auditinfo_addr *"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "au_asid_t"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "userland struct nxctl_init *"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "userland struct ch_init *"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "userland struct net_qos_param *"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "userland struct timex *"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "userland struct ntptimeval *"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "systrace_entry_setargdesc"
        prototype = ""
        caller = "systrace_getargdesc"
    }
    new {
        args = 0
        anchors {
            new {
                string = "random_init: failed to allocate a major number! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "randomdev.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "random"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "urandom"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "random_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mdevadd: attempt to add overlapping memory device at %016llX-%016llX @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "mdevadd: attempt to add more than %d memory devices @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "mdevadd: attempt to explicitly add a bogus memory device: %08X @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "mdevadd: attempt to explicitly add a previously defined memory device: %08X @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "mdevadd: error - bdevsw_add() returned %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ramdevice_init: error - cdevsw_add() returned %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "mdevadd: devfs_make_node for block failed!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "rmd%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mdevadd: devfs_make_node for character failed!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Added memory device md%x/rmd%x (%08X/%08X) at %016llX for %016llX\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "mdevadd"
        prototype = ""
        caller = "IOFindBSDRoot"
    }
    new {
        args = 1
        anchors {
            new {
                string = "ramstrategy: buf_map failed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "mdevstrategy: sink address %016llX not mapped @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "mdevstrategy: source address %016llX not mapped @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "mdevstrategy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kern.maxvnodes"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "bsd_startupearly"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "mbuf_pool"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "bsd_mbuf_cluster_reserve"
        prototype = ""
        caller = "__startup_kmem_range_spec_mb_block_invoke_2"
    }
    new {
        args = 0
        anchors {
            new {
                string = "monotonic: cdevsw_add failed: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "monotonic: devfs_make_node failed for '%s' @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "mt_dev_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Directory expected to have fg_vn_data @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "getattrlistbulk"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "buf_strategy: b_vp == NULL || vtype == VCHR | VBLK @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "buf_strategy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vnode_flushdirtyblks"
                segment = "__TEXT"
                section = "__cstring"
                caller = "tsleep"
            }
        }
        symbol = "buf_flushdirtyblks_skipinfo"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "using %d buffer headers and %d cluster IO buffer headers\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Couldn\\'t register buffer cache callout for vm pressure! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "bufinit"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "buf_bdwrite"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "bdwrite_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "buf_brelse: bad buffer = %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "brelse: bp @ %p has NULL b_iodone! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "brelse: Failed to create UPL @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ubc_upl_unmap failed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "brelse: UPL set for non VREG; vp=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "buf_brelse_shadow: bp_head on freelist %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "buf_brelse_shadow: bp not on list %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "buf_relse_shadow: b_shadow != NULL && b_shadow_ref == 0  bp(%p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "buf_relse_shadow: b_shadow == NULL && b_shadow_ref != 0  bp(%p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "buf_brelse"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "buf_getblk"
                segment = "__TEXT"
                section = "__cstring"
                caller = "msleep"
            }
            new {
                string = "getblk: paging or unknown operation for incore busy buffer - %x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "buffer has UPL, but not marked BUSY: %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "getblk: paging or unknown operation for incore buffer- %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "bp already has UPL: %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "getblk: VNOP_BLOCKMAP failed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "getblk: paging or unknown operation - %x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "bgetvp_locked: not free @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "buf_getblk"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "allocbuf: buffer larger than MAXBSIZE requested @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "allocbuf"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "buf_invalblkno"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "buf_invalblkno"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "buf_biowait"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "buf_biowait"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "biodone already @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "biodone: bp @ %p has NULL b_iodone! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "buf_biodone"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "alloc_io_buf (1)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "alloc_io_buf (2)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "alloc_io_buf"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "free_io_buf: bp(%p) - bufstats.bufs_iobufinuse < 0 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "free_io_buf"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "buf_reassign: NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "buf_reassign"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "bremfree_locked: %p not on freelist @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "bremfree: lost tail @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "bremfree_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "getnewbuf: bp @ %p is LOCKED or BUSY! (flags 0x%x) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "getnewbuf"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "buf_acquire"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "buf_acquire_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "blaundry"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "bcleanbuf_thread"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%c(%u, %u)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vnode_getname_printable"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "firmlink target for vnode %p does not have flag set @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vnode_getfirmlink"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Incorrect state for old nc_counter(%d), should be even @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "cache_enter_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Incorrect state for old nc_counter(%d), should be odd @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "cache_delete"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "failed to resize the hash table.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "add_name_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 6
        anchors {
            new {
                string = "cluster_pagein: NULL upl passed in @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "cluster_pagein_ext"
        prototype = ""
        caller = "cluster_pageout_0"
    }
    new {
        args = 5
        anchors {
            new {
                string = "cluster_push"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cluster_push_err"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s(): Called with real buffer of size %d bytes which is greater than the maximum allowed size of %d bytes (the system PAGE_SIZE).\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s(): Called with real buffer and needs verification  @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s:%d pageout of unaligned first page offset = %lld, size = %d  returned %d,\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d pageout of unaligned last page offset = %lld, size = %d  returned %d,\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Vector UPLs should not take this code-path @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "BUSY bp found in cluster_io @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "buf_setupl failed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s(): cbp_head is not NULL. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "cluster_io"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "cluster_wait_IO"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cluster_wait_IO"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s length = %zu, verify_block_size = %zu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "cluster_EOT"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cluster_EOT"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ubc_upl_map_range returned error %d upl = %p, upl_offset = %d, size = %d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "cluster_iodone"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "ecount >= DRT_BITVECTOR_PAGES, cmap = %p, index = %d, bit = %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ecount <= 0, cmap = %p, index = %d, bit = %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vfs_drt_do_mark_pages"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vfs_drt: new cluster map mysteriously too small @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vfs_drt_alloc_map"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "cluster_write_copy: failed to get pagelist @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "cluster_write_copy"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "cluster_push: failed to get pagelist @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "cluster_push_now"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "encrypted blocks will hit UBC! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "cluster_read_copy: failed to get pagelist @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "cluster_read_copy"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "Failed to restore dirty state on failure @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vfs_drt: entry summary count > 0 but no bits set in map, cmap = %p, index = %d, count = %lld @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "sparse_cluster_push"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "operation %s not listed in %s.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "vfs_opv_init: bad operation @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vfs_opv_init: operation vector without default routine. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vfs_opv_init"
        prototype = ""
        caller = "vfsinit"
    }
    new {
        args = 0
        anchors {
            new {
                string = "We need to keep going on a continued lookup, but for vp type %d (tag %d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "NAMEI_ROOTDIR is set but ni_rootdir is not\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "p->p_fd.fd_rdir is not set\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "rootvnode is not set\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(1) invalid pre-increment usecount (%d) for rootdir vnode %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "(1) usecount overflow for vnode %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "(2) invalid pre-increment usecount (%d) for vnode %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "(2) usecount overflow for vnode %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "(3) Unexpected pre-decrement value (%d) of usecount for rootvnode %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "(4) Unexpected pre-decrement value (%d) of usecount for rootvnode %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "namei"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "leaf should be empty @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "lookup"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "lookup_traverse_union: null parent name: .%s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "lookup_traverse_union"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "NULL vp with error == 0. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "lookup_compound_vnop_post_hook"
        prototype = ""
        caller = ""
    }
    new {
        args = 4
        anchors {
            new {
                string = "NULL ni_vp in %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "lookup_handle_found_vnode"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Incorrect termination of path in %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "lookup_handle_rsrc_fork"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "lookup_handle_found_vnode"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "dquot"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dqlookup: error %d looking up id %u at index %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "dqlookup: error looking up id %u at index %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "dqget"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "dqsync_orphans: dquot in use @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "dqsync_orphans"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "dqflush: stray dquot @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "dqflush"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "dqsync: NULL dq_qfile @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "dqsync: NULL qf_vp @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "dqsync_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "vnode_writedone: numoutput < 0 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vnode_writedone"
        prototype = ""
        caller = "buf_biodone"
    }
    new {
        args = 0
        anchors {
            new {
                string = "vnode_drain_network"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vnode_umount_preflight"
        prototype = ""
        caller = "vflush"
    }
    new {
        args = 0
        anchors {
            new {
                string = "mount_iterdrain"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mount_iterdrain"
        prototype = ""
        caller = "dounmount"
    }
    new {
        args = 1
        anchors {
            new {
                string = "already in drain @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "mount_drain"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mount_refdrain: dangling vnode @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "mount_refdrain"
        prototype = ""
        caller = "dounmount"
    }
    new {
        args = 1
        anchors {
            new {
                string = "vfsbusy"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vfs_busy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vfs_mountroot: can't setup bdevvp\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "root_device"
                segment = "__TEXT"
                section = "__cstring"
                caller = "vfs_rootmountalloc_internal"
            }
            new {
                string = "%s() VFS_ROOT() returned %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "vfs_mountroot"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s_mountroot failed: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vfs_mountroot"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s : shuffling mount points : %s <-> / <-> %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Do not use a leading slash in outgoing_vol_new_path\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Incoming rootfs root vnode not found\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Outgoing rootfs path not found, abandoning / switch, error = %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Outgoing rootfs path is not a directory, abandoning / switch\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "skipping preserved mountpoint because not found or error: %d: %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "skipping preserved mountpoint because not a mountpoint: %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "preserved new mount directory not found or error: %d: %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "preserved new mount directory not directory: %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "will preserve mountpoint across pivot: /%s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s : done shuffling mount points with error: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Incoming rootfs path not a directory\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Incoming rootfs root vnode does not have associated mount\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Incoming rootfs root vnode mount is busy\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Could not get rootvnode of incoming rootfs\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Incoming rootfs root vnode mount is is not a mountpoint\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Incoming rootfs is backed by a virtual device; cannot switch to it"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vfs_switch_root"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vnode_get(rootvnode) failed with error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "attempting kernel mount for recovery volume... \n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Failed to mount recovery volume (%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mounted recovery volume\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vfs_mount_recovery"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "bdevvp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bdevvp failed: vnode_ref @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "bdevvp failed: fsync @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "bdevvp failed: invalidateblks @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "bdevvp failed: open @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "bdevvp"
        prototype = ""
        caller = "vfs_mountroot"
    }
    new {
        args = 1
        anchors {
            new {
                string = "vnode_ref_ext: vp %p has no valid reference %d, %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vnode_ref_ext: v_writecount @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vnode_ref_ext: v_kusecount @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vnode_ref_ext"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "vnode_rele_ext: vp %p usecount -ve : %d.  v_tag = %d, v_type = %d, v_flag = %x. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vnode_rele_ext: vp %p writecount -ve : %d.  v_tag = %d, v_type = %d, v_flag = %x. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vnode_rele_ext: vp %p kusecount -ve : %d.  v_tag = %d, v_type = %d, v_flag = %x. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vnode_rele_ext: vp %p kusecount(%d) out of balance with usecount(%d).  v_tag = %d, v_type = %d, v_flag = %x. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vnode_rele_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "vflush"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vflush"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vfs: bad selector 0x%.8x for old-style sysctl().  use the sysctl-by-fsid interface instead\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "smbfs"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vfs_sysctl_node"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vfs_unmountall(%ssystem) start\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Unmounting timed out\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "missed mount"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vfs_unmountall(%ssystem) end\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vfs_unmountall"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ioqueue_depth = %d,   ioscale = %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vfs_init_io_attributes"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "vnode getiocount"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vnode_getiocount"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vnode_getiocount"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "NULL vnode passed to vnode_initialize @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vnode_initialize"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "add_fsref: vp already has named reference @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "addfsref: vp on the free list @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vnode_addfsref"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "remove_fsref: no named reference @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vnode_removefsref"
        prototype = ""
        caller = "null_reclaim"
    }
    new {
        args = 3
        anchors {
            new {
                string = "Open parameters, but not a regular file. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Mode for open, but not trying to open... @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vnode_create: unknown vtype %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vn_create"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.kauth.vnode"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vfsinit"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 3
        anchors {
            new {
                string = "NULL ndp @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vn_authorize_open_existing"
        prototype = ""
        caller = "vn_open_auth"
    }
    new {
        args = 4
        anchors {
            new {
                string = "NULL cn_ndp @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vn_authorize_create"
        prototype = ""
        caller = ""
    }
    new {
        args = 5
        anchors {
            new {
                string = "Passed something other than NULL as reserved field! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vn_authorize_renamex_with_paths"
        prototype = ""
        caller = ""
    }
    new {
        args = 4
        anchors {
            new {
                string = "reserved not NULL in vn_authorize_mkdir() @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vn_authorize_mkdir"
        prototype = ""
        caller = ""
    }
    new {
        args = 4
        anchors {
            new {
                string = "Non-NULL reserved argument to vn_authorize_rmdir() @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vn_authorize_rmdir"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "(1) vnode attrs not complete for vnode_attr_authorize @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "(2) vnode attrs not complete for vnode_attr_authorize (2) vap->va_active = 0x%llx , vap->va_supported = 0x%llx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vnode_attr_authorize"
        prototype = ""
        caller = "vnode_attr_authorize_dir_clone"
    }
    new {
        args = 0
        anchors {
            new {
                string = "vclean: cannot reclaim @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vclean"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "insmntque: vp not in mount vnode list @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vp already in mount list @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "insmntque: vp already in mount vnode list @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "insmntque"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vnode_reload with no iocount %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vnode_iterate"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "unmount(%d) %s skipped\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "unmount(%d) %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Unmount of %s failed (%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "unmount_callback"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "new_vnode(%p): the vnode is VL_DEAD but not VBAD @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "new_vnode(%p): vp on list @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "new_vnode(%p): free vnode still referenced @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "new_vnode(%p): vnode seems to be on mount list @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "new_vnode(%p): vnode still hooked into the name cache @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "process_vp"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s : vp %p holdcount -ve: %d.  v_tag = %d, v_type = %d, v_flag = %x. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vnode_drop_internal"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vnode_drop_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vnode_put(%p): iocount < 1 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vnode_put_internal_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "vnode reclaim in progress @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vnode_reclaim_internal: cleaned vnode isn't @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vnode_reclaim_internal: clean vnode has pending I/O's @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vnode_reclaim_internal: vparent not removed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vnode_reclaim_internal: vname not removed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vnode_reclaim_internal: vleases NOT empty @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "missing bdev @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "missing alias @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vnode_reclaim_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "vnode_drain: recursive drain @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vnode_drain_with_timeout"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vnode_drain"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vnode_drain"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vnode_create: vnode_resolver_create() err %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: alias vnode (vid = %u) is in state of change (start) v_flags = 0x%x v_numoutput = %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: alias vnode (vid = %u), is in state of change (end) v_flags = 0x%x v_numoutput = %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "insmntque: vp on the free list @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "new_vnode: vp (%p) on RAGE list not marked VLIST_RAGE @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vnode"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%d desired, %ld numvnodes, %ld free, %ld dead, %ld async, %d rage\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "checkalias with VT_NON vp that shouldn't: %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vnode_create_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "trigger_unmount_callback: unexpected match '%s'\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "trigger_unmount_callback: trigger mnt changed! (%p != %p)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "unresolving: '%s', err %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "trigger_unmount_callback"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vnode_trigger_unresolve: not currently resolved\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vnode_trigger_unresolve"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "VNODE_REF_FORCE didn't help... @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vnode_resolver_create"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.vfs.file-leases"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vnode_setlease"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "wait_for_lease_break"
                segment = "__TEXT"
                section = "__cstring"
                caller = "msleep"
            }
        }
        symbol = "wait_for_lease_break"
        prototype = ""
        caller = "vnode_breaklease"
    }
    new {
        args = 1
        anchors {
            new {
                string = "failed to locate mount-on path: %s "
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "kernel_mount"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: mount on %s failed, error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "vfs_mount_at_path"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vfs_mount_at_path"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = ".quota.ops"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "group"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "enablequotas"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "attempt to unmount a system mount (%s), will return EBUSY\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "safedounmount"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "dounmount: no coveredvp @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "dounmount"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "sync_thread failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "sync_thread"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sync timed out: %d sec\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "sync_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.vfs.pivot-root"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pivot_root"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "safe_getpath: failed to get the path for vp %p (%s) : err %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "no-name"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "safe_getpath_new"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: %s: Bad dirent recived from directory %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "vnode_readdir64"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vnode_readdir64"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.vfs.snapshot.user"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOTaskHasEntitlement"
            }
            new {
                string = "com.apple.private.vfs.snapshot"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.developer.vfs.snapshot"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.private.apfs.arv.limited.snapshot"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fs_snapshot"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "/System/Library/AssetsV2/manifests/"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "graftdmg"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Volume mounted on a device with invalid major number. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s() VFS_ROOT returned %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "mount_common"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "webdav"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mount_common(): mount of %s filesystem failed with %d, but vnode list is not empty. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "mount_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.vfs.open-by-id"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "openbyid_np"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "No vp, but no compound remove? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "EKEEPLOOKING, but not a filesystem that supports compound VNOPs? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "unlinkat_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "EKEEPLOOKING without NAMEI_CONTLOOKUP on either ndp? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "rename retry limit due to ERECYCLE reached\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "renameat_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "No error, but no compound rmdir? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "rm AD"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "rmdirat_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nspace.complete: gencount changed! (orig %llu cur %llu)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "nspace.complete: syncroot changed! (orig %llu cur %llu)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sysctl_nspace_complete"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nspacerq"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nspace_resolver_req_add"
        prototype = ""
        caller = "vfs_materialize_item"
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.kernel.set-package-extensions"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOTaskHasEntitlement"
            }
        }
        symbol = "fsctl_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "EKEEPLOOKING from a filesystem that doesn't support compound VNOPs? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Haven't cleaned up adequately in vn_open_auth() @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Why am I trying to use VNOP_OPEN() on anything other than the root or a named stream? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "com.apple.private.security.file-unencrypt-access"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vn_open_auth_retry"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "EKEEPLOOKING, but we did a create? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "EKEEPLOOKING from filesystem that doesn't support compound vnops? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vn_open_auth"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Invalid knote filter on a vnode! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Should never have an EVFILT_READ except for reg or fifo. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "filt_vnode_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vnode_flushnamedstream: err %d opening file\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vnode_flushnamedstream"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "getnamedstream"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vnode_getnamedstream"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "/var/run/.vfs_rsrc_streams_%p%x"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/var/run"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = ".vfs_rsrc_streams_%p%x"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "get_shadow_dir"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "get_xattrinfo: resource fork not last entry\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "get_xattrinfo"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "setxattr: VNOP_WRITE error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "setxattr: write_xattrinfo error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "setxattr: VNOP_TRUNCATE error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "setxattr: uiomove error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "default_setxattr_vfs"
        prototype = ""
        caller = "default_setxattr"
    }
    new {
        args = 1
        anchors {
            new {
                string = "removexattr: write_xattrinfo error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "default_removexattr"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vfs_fsadd: operation %s not listed in %s.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "vfs_fsadd: bad operation @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vfs_fsadd: operation vector without default routine. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vfs_fsadd"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vnode_lookup_continue_needed(): cnp->cn_ndp is NULL @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vnode_lookup_continue_needed"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "No dvp? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Want create, but no vap? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Don't want create, but have a vap? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Filesystem did a create, even though none was requested? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "VNOP_COMPOUND_OPEN"
        prototype = ""
        caller = ""
    }
    new {
        args = 5
        anchors {
            new {
                string = "Not batched, and no fvp? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "VNOP_COMPOUND_RENAME() returned %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vn_rename"
        prototype = ""
        caller = "renameat_internal"
    }
    new {
        args = 0
        anchors {
            new {
                string = "No fvpp after compound rename? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "VNOP_COMPOUND_RENAME"
        prototype = ""
        caller = ""
    }
    new {
        args = 4
        anchors {
            new {
                string = "Non-CREATE nameiop in vn_mkdir()? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vn_mkdir"
        prototype = ""
        caller = "vn_create"
    }
    new {
        args = 1
        anchors {
            new {
                string = "NULL vp, but not a compound VNOP? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Non-NULL vap, but not a compound VNOP? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "vn_rmdir"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "add_fsevent: event queue is full! dropping events (num dropped events: %d; num events outstanding: %d).\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "add_fsevent: kfse_list head %p ; num_pending_rename %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "add_fsevent: zalloc sez: %p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "add_fsevent: event_zone info: %d 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "add_fsevent: line %d: kfse recount %d but should be at least 1 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "add_fsevent: you can't pass me a NULL vnode ptr (type %d)! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "add_fsevent: was not able to add path %s to event %p. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "add_fsevent: funny looking string length: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "add_fsevent: bogus looking string (len %d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "add_fsevent: unknown type %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "fsevents: watcher falling behind: %s (pid: %d) rd: %4d wr: %4d q_size: %4d flags: 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "add_fsevent"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "release_event_ref: bogus kfse refcount %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "release_event_ref"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "fsevents: watcher %s (pid: %d) - Using /dev/fsevents directly is unsupported.  Migrate to FSEventsFramework\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "fsevents: too many watchers!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "com.apple.private.vfs.fsevents-watcher"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.private.vfs.fsevents-access-granted-watcher"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "add_watcher"
        prototype = ""
        caller = "fseventsioctl"
    }
    new {
        args = 0
        anchors {
            new {
                string = "fsevents: close: still have readers! (%d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "remove_watcher"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "fsevents_empty"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/.Spotlight-V100/"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/.MobileBackups/"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/Backups.backupdb/"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fseventsf_read"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "fsevents: copy_out_kfse: asked to copy out an invalid event (kfse %p, refcount %d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "copy_out_kfse:2: empty/short path (%s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "copy_out_kfse"
        prototype = ""
        caller = "fseventsf_read"
    }
    new {
        args = 0
        anchors {
            new {
                string = "unexpected unmount pending ack %d (%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "fseventsf_ioctl"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "watcher-close"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fseventsf_drain"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kern.maxkfsevents"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fs-event-buf"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fsevents_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "cp_os_version: unable to parse osversion `%s'\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "cp_os_version"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.dmc.set"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "disk_conditioner_set_info"
        prototype = ""
        caller = "fsctl_internal"
    }
    new {
        args = 0
        anchors {
            new {
                string = "dead_read: lock @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "dead_read"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "dead_write: lock @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "dead_write"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "dead_badop called @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "dead_badop"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Couldn\\'t make stdin, err %d.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Couldn\\'t make stdout, err %d.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Couldn\\'t make stderr, err %d.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "devfs_fdesc_makelinks"
        prototype = ""
        caller = "devfs_fdesc_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "fdesc_allocvp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fdesc_allocvp"
        prototype = ""
        caller = "devfs_devfd_lookup"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Invalid type for fdesc node! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "fdesc_open"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "fifo_open with no fifoinfo @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "fifo_vnops.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fifocreatewait"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fifoor"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fifoow"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fifo_open"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "spec_open"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "spec_open type @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "spec_open"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "spec_read type @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "spec_read"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "spec_write type @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "spec_write"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "spec_ioctl @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "spec_ioctl"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "iosched"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "io_throttle_window_tier1"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "io_throttle_window_tier2"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "io_throttle_window_tier3"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "throttle_init"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "throttle_lowpri_io"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "throttle_lowpri_io"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Illegal devno (%d) passed into throttle_info_disable_throttle() @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "throttle_info_disable_throttle"
        prototype = ""
        caller = "vfs_init_io_attributes"
    }
    new {
        args = 0
        anchors {
            new {
                string = "spec_strategy"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Invalid value (%d) for si_devbsdunit for vnode %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Invalid value (%d) for si_isssd for vnode %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "spec_strategy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "negative open count (c, %u, %u) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "negative open count (b, %u, %u) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "spec_close: not special @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "spec_close"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "spec_blktooff: not implemented for VBLK\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "spec_blktooff type @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "spec_blktooff"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "spec_offtoblk: not implemented for VBLK\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "spec_offtoblk type @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "spec_offtoblk"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s : si_devbsdunit initialized to (%d), throttle_mask is (0x%llx), isssd is (%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "spec_init_bsdunit"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "devfs_sinit: dev_add_entry failed "
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "devfs_sinit"
        prototype = ""
        caller = "devfs_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "devfs_remove: not ready for devices!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "devfs_remove"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "plane count wrapped around. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "devfs_free_plane"
        prototype = ""
        caller = "devfs_unmount"
    }
    new {
        args = 1
        anchors {
            new {
                string = "devfs_dntovn: DN_DELETE set on a devnode upon entry. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "devfs_dntovn: cloning device with a vnode? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "devfs_dntovn"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "devfs_rele_node: devnode without a refcount! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "devfs_rele_node"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "devfs_make_node: not ready for devices!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "devfs_make_node_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "devfs_read(): bad file type %d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "devfs_read"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "devfs_write(): bad file type %d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "devfs_write"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "devfs_kernel_mount: kernel_mount failed: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "devfs_kernel_mount"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "oslog_stream"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "devfs_init"
        prototype = ""
        caller = "vfsinit"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d:%s: %s: unknown cmp_state %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "decmpfs_file_is_compressed"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d:%s: %s: VNOP_VERIFY returned error = %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d:%s: %s: verify block size (%zu) is not power of 2, no verification will be done\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d:%s: %s: upl size (%zu) is not a multiple of verify block size (%zu)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d:%s: %s: FS block size (%u) is greater than PAGE_SIZE (%d) and is not power of 2, no verification will be done\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d:%s: %s: FS block size (%u) is greater than verify block size (%zu), no verification will be done\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d:%s: %s: unexpected pagein during decompress\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d:%s: %s: Unexpected size fetch of decompressed data, l_uplSize = %d, l_did_read = %d, inval_size = %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d:%s: %s: Verification failed with error %d, uplPos = %lld, uplSize = %d, did_read = %d, valid_pages = %d, invalid_pages = %d, tail_page_valid = %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d:%s: %s: ubc_upl_unmap error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "decmpfs_pagein_compressed"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d:%s: %s: verify block size is not power of 2, no verification will be done\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d:%s: %s: ubc_create_upl error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d:%s: %s: ubc_upl_map kr=0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d:%s: %s: ubc_upl_map mapped null\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d:%s: %s: cmp_state == FILE_IS_CONVERTING\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d:%s: %s: cmp_state == FILE_IS_COMPRESSED\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d:%s: %s: cmp_state == FILE_IS_NOT_COMPRESSED\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d:%s: %s: Verification failed with error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "ubc_upl_unmap returned error %d (kern_return_t) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s:%d:%s: %s: uplOff %lld should never be negative\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d:%s: %s: uplOff %lld too large\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d:%s: %s: cluster_copy_upl_data err %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "decmpfs_read_compressed"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d:%s: %s: decmpfs_fetch_compressed_header err %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d:%s: %s: decompressor err %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "decmpfs_free_compressed_data"
        prototype = ""
        caller = "decmpfs_decompress_file"
    }
    new {
        args = 2
        anchors {
            new {
                string = "%s:%d:%s: %s: uio_addiov err %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d:%s: %s: VNOP_WRITE err %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d:%s: %s: file decompressed to %lld instead of %lld\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d:%s: %s: VNOP_FSYNC err %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d:%s: %s: aborting decompress, err %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d:%s: %s: vnode_setsize err %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d:%s: %s: decmpfs_free_compressed_data err %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d:%s: %s: vnode_getattr err %d, num retries %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d:%s: %s: vnode_setattr err %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d:%s: %s: FSIOC_CAS_BSDFLAGS err: flags mismatc. actual (%x) expected (%x), num retries %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d:%s: %s: FSIOC_CAS_BSDFLAGS err %d, num retries %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "decmpfs_decompress_file"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s:%d:%s: %s: invalid compression_magic 0x%08x, should be 0x%08x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d:%s: %s: compression_type %d out of range\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "decmpfs_fetch_compressed_header"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.AppleFSCompression.providesType%u"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d:%s: %s: waiting for %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d:%s: %s: the kext with %s is no longer present\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d:%s: %s: still waiting for %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d:%s: %s: we found %s, but the type still isn't registered\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d:%s: %s: tried to access a compressed file of unregistered type %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "_decmp_get_func"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "wait_for_decompress"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "wait_for_decompress"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "bpfdraining"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Two threads blocked in a BPF close @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "bpf buffer freed during read/write @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: bpf%d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "bpf%u closed by %s.%u dcount %llu fcount %llu ccount %llu"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bpfclose"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "bpf_read"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: bpf%d ERESTART to EINTR"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bpfread"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "bpfwrite"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bpfwrite: resid %d error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "bpf_movein_batch uiomove error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "bpf_movein_batch bh_hdrlen %u too small"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "bpf_movein_batch bh_caplen %u != bh_datalen %u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "bpf_movein_batch bh_hdrlen %u too large"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "bpf_movein_batch bpf_movein error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bpfwrite"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "BIOCFLUSH"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bpfioctl"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bpf%d BIOCSBLEN capped to %u from %u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "bpf%d BIOCSBLEN bumped to %u from %u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "bpf%d BIOCSBLEN %u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "bpf%u cannot set BIOCSHDRCMPLT when BIOCSBATCHWRITE is set"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "bpf%u cannot set BIOCSETTC when BIOCSBATCHWRITE is set"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: ifnet not found for %s error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "bpf%u bd_write_size_max %u too big"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "bpf%u cannot set BIOCSBATCHWRITE when BIOCSHDRCMPLT is not set"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "bpf%u cannot set BIOCSBATCHWRITE when BIOCSETTC is set"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bpfioctl"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "bpfselect"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "bpfselect"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "bpf_hdr_comp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bpf_init: failed to allocate a major number"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bpf_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "bpf_growing"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bpf%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bpf_make_dev_t: malloc bpf_dtab failed"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bpf_make_dev_t"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: %p refcnt <= 0 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: %p BPF_DETACHED not set @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "bpf_release_d"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "bpf_detachd: descriptor not in list @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "bpf_detachd"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = " closed and"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bpf_detachd: bpf%d %s disable input 0"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: bpf%d ifnet_set_promiscuous %s failed"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "bpf%d%s detached from %s fcount %llu dcount %llu"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bpf_detachd"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "bpf_setf"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "bpf_setf"
        prototype = ""
        caller = "bpfioctl"
    }
    new {
        args = 1
        anchors {
            new {
                string = "bpf_setif"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bpf%u attached to %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bpf_setif"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "bpf_setdlt"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bpf_setdlt: bpf%d bpf_attachd %s error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "bpf_setdlt: bpf%d ifpromisc %s error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bpf_setdlt"
        prototype = ""
        caller = "bpfioctl"
    }
    new {
        args = 1
        anchors {
            new {
                string = "SO_VALID_TC(tc)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "bpf_set_packet_service_class"
        prototype = ""
        caller = "bpfwrite"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s:%d tlen %u > bpfp_total_length %lu bpfp_header_length %lu pth_frame_pre_length %u pre_adjust %u in_pkt_len %u out_pkt_len %u @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d tlen %u > bpfp_total_length %lu bpfp_header_length %lu pth_frame_pre_length %u pre_adjust %u in_pkt_len %u out_pkt_len %u"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "bpf_tap_imp"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "bpf_mcopy @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "buflet != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "addr != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "copy_bpf_packet_offset"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "x_cnt < nbpfilter"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sysctl_bpf_stats"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "bridgeattach"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "proto_register_plumber failed for PF_INET error=%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "proto_register_plumber failed for PF_INET6 error=%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: ifnet_clone_attach failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ether_family_init"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 2
        anchors {
            new {
                string = "is_promisc == list_is_promisc"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: (%s): count %u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_early_input"
        prototype = ""
        caller = "dlil_input_packet_list_common"
    }
    new {
        args = 0
        anchors {
            new {
                string = "mac_nat_entry_print2"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %.*s %s%s%s %p (%s, %s, %s)"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mac_nat_entry_print2"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "created"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "bridge_create_mac_nat_entry_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "bridge_mac_nat_arp_translate"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: mbuf_copyback failed"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: mbuf_copyback uh_sum failed"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: mbuf_copyback dp_flags failed"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: mbuf_copyback lladdr failed"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: mbuf_copyback cksum=0 failed"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: mbuf_copyback cksum failed"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_mac_nat_translate"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "bridge_pf"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: m_pullup failed"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_pf"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = " frag"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Short IP packet %d < %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: bad IP version"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: bad IP header length %d < %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: IP total len %d < header len %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: invalid IP payload length %d > %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: short IPv6 packet %d < %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: bad IPv6 version"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: ip6_lasthdr() returned %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: invalid IPv6 payload length %d > %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: IPv%c proto %d ip %u pay %u opt %u pkt %u%s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_get_ip_proto"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "dst_ifp != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s bridge_send(%s) len %d op %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "bridge_enqueue"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "tso_hwassist"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s: does%s support checksum 0x%x if_csum 0x%x"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tso_hwassist"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "gso_ip_tcp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s %s mss %d nsegs %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "gso_tcp"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "dst_ifp != NULL && src_ifp != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bridge_finalize_cksum"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bridge_compute_cksum"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: [%s] before 0x%x hwcap 0x%x sw_csum 0x%x did 0x%x after 0x%x"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: [%s -> %s] before 0x%x did 0x%x after 0x%x"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_handle_checksum_op"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "com.apple.kernel.bsd.net.if_bridge"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s invalid MTU for %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: ifnet_set_promiscuous(%s) failed %d, ignoring"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: ifnet_set_promiscuous(%s) failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: if_allmulti(%s) failed %d, ignoring"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: iflt_attach failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: bridge_attach_protocol failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_ioctl_add"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "inside"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "outside"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bridge_iff_input["
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bridge_iff_input]"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bcast_mcast "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bridge_ifp->if_bridge == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s from %s m 0x%llx data 0x%llx frame 0x%llx %s frmlen %lu"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: frame_ptr outside mbuf"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: short frame %lu < %lu"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: mbuf_pullup(%lu) failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s %sfrom %s m 0x%llx data 0x%llx"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s bridge_host_filter failed"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:  broadcast: %02x:%02x:%02x:%02x:%02x:%02x"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s mcast for us"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_iff_input"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "bridge_forward"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "src_if == m->m_pkthdr.rcvif"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s m 0x%llx"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_forward"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "bridge_mac_nat_arp_input"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s %s ARP %s -> %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_mac_nat_input"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "bridge_rtnode_hash"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s EEXIST %02x:%02x:%02x:%02x:%02x:%02x"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_rtnode_hash"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "bridge_iff_output"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bridge_member_output"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s from %s m 0x%llx data 0x%llx"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: ifp %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_iff_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "bridge_iflinkevent"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: ifnet_set_promiscuous (%s) failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: if_allmulti (%s) failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_iff_event"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "flushed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "bridge_mac_nat_flush_entries_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "bridge_iff_detached"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "bridge_iff_detached"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "bridge_attach_protocol"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: ifnet_attach_protocol(%s) failed, %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_attach_protocol"
        prototype = ""
        caller = "bridge_ioctl_add"
    }
    new {
        args = 0
        anchors {
            new {
                string = "bridge_proto_input"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s unexpected packet"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_proto_input"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "bridge_link_event"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "bridge_link_event"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "bridge_detach_protocol"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifnet_detach_flowswitch_nexus"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: ifnet_detach_protocol(%s) failed, %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_delete_member"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "aged out"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "bridge_mac_nat_age_entries_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "bridge_cancel_delayed_call"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s call 0x%llx flags 0x%x"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_cancel_delayed_call"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s (%d): ifnet_detach(%p) failed %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "bridge_clone_destroy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(call->bdc_flags & BDCF_OUTSTANDING) == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(call->bdc_flags & BDCF_CANCELLING) == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s thread_call_free() failed for call %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "bridge_cleanup_delayed_call"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "bridge_cleanup_delayed_call"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "etypef == ETHER_TYPE_FLAG_ARP"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s from %s count %d head 0x%llx.0x%llx tail 0x%llx.0x%llx"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_input_list"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "bridge_filter_checksum"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "bridge_filter_checksum_list"
        prototype = ""
        caller = "bridge_input_list"
    }
    new {
        args = 2
        anchors {
            new {
                string = "bridge_broadcast_list"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s mcast for us in_m %p"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_broadcast_list"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "dst_if != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s (%s) append gso #segs %u bytes %u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s (%s) append %d bytes op %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: %s (%s) bridge_transmit packets %u bytes %u error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_enqueue_multi"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ifmultiaddr"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "net_affinity"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "net_rxpoll"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "net_rtref"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "net_async"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifnet_debug"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dlil_pending_thread_cnt == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kern.skywalk_netagent_enable"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kern.skywalk_netagent_disable"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(!pe_enable_fsw_transport_netagent && !pe_disable_fsw_transport_netagent) || (pe_enable_fsw_transport_netagent ^ pe_disable_fsw_transport_netagent)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SK: netagent is enabled via an override for this platform\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "SK: netagent is disabled via an override for this platform\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "SK: netagent is %s by default for this platform\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "disabled"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "if_attach_nx"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SK: netagent is force-enabled\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SK: netagent is force-disabled\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "ifnet"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifnet_tcpstat"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifnet_udpstat"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Waiting for all the create dlil kernel threads to get scheduled at least once.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: All the created dlil kernel threads have been scheduled at least once. Proceeding.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "if_low_power_event"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: no CPU clock available! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "pktsched_init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pktsched.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dlil_init"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "sc == MBUF_SC_UNSPEC || MBUF_VALID_SC(sc)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "flow != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "if_qflush_sc"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "%s[%s,%d]: ifp %s cmd 0x%08lx (%c%c [%lu] %c %lu) error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s[%s,%d]: ifp %s cmd 0x%08lx (%c%c [%lu] %c %lu) OK\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ifioctl"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: promiscuous mode %s %s (%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "ifnet_set_promiscuous"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: %s allmulti %s (%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "if_allmulti"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: ifma=%p negative refcnt @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ifma_remref"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ifma_remref"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ifa %p attached to ifp is being freed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ifa_deallocated"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "intf_event_enqueue_nwk_wq_entry"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: eventhandler enqueuing event of type=intf_event event_code=%s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "intf_event_enqueue_nwk_wq_entry"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: Mismatch ifa_ifp=%p != ifp=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: Attempt to attach an already attached ifa=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "if_attach_ifa_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: Link address ifa=%p not first @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: Attempt to detach an unattached address ifa=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: Mismatch ifa_ifp=%p, ifp=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: Attempt to detach a stray address ifa=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "if_detach_ifa_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "sa->sa_family == AF_LINK"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ifconf"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ifnet_reset_order"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "if_ordered_count == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: count %u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ifnet_reset_order"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "ifioctl_get_media"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: first ifnet_ioctl(%s, %08lx) error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s kalloc_data() failed"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s copyin() error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s converted extended media %08x to compat media %08x"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: %s copyout() error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ifioctl_get_media"
        prototype = ""
        caller = "ifioctl"
    }
    new {
        args = 1
        anchors {
            new {
                string = "if_output_netem_%s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ifioctl_linkparams"
        prototype = ""
        caller = "ifioctl"
    }
    new {
        args = 2
        anchors {
            new {
                string = "ifioctl_ifreq"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "so->so_proto != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: interface name too long @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "if_clone_create"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s SIOCSIFMEDIA ignore IFM_OTHER"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "SIOCSIFESTTHROUGHPUT %s%s up: %u, down: %u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "SIOCSIFRADIODETAILS %s%s technology: %u, channel: %u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ifioctl_req: cmd SIOCSIFMANAGEMENT on %s not allowed for %s:%u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ifioctl_req: cmd SIOCSIFMANAGEMENT 0 not allowed on %s with subfamily management"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ifioctl_req: SIOCSATTACHPROTONULL ifnet_attach_protocol(%s) failed, %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ifioctl_req: SIOCSATTACHPROTONULL ifnet_detach_protocol(%s) failed, %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "SIOCSIFNOTRAFFICSHAPING %s %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ifioctl_ifreq"
        prototype = ""
        caller = "ifioctl"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: Freeing ifma=%p with outstanding anon req @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: ifma=%p attached to ifma_ifp=%p is being freed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: ifma %p cannot be freed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: non-zero refcount ifma=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: non-zero reqcnt ifma=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: non-NULL ifma_ifp=%p for ifma=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: non-NULL ifma_ll=%p for ifma=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ifma_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "!anon || sa->sa_family == AF_UNSPEC || sa->sa_family == AF_LINK"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!anon"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifma->ifma_ll->ifma_ifp == ifp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "if_addmulti_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "(ifma->ifma_flags & IFMAF_ANONYMOUS) || ifma->ifma_anoncnt == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifma->ifma_reqcnt > 1"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "if_addmulti_doesexist"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ifma->ifma_anoncnt == 1"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Mismatch ifma_ifp=%p != ifp=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: Attempt to attach an already attached ifma=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: ifma=%p unexpected IFMAF_ANONYMOUS @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: Attempt to reattach a detached ifma=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ifma->ifma_reqcnt == 1"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "if_attach_ifma"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: ifma %p has no debug structure @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ifma_trace"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ifma_trace"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "!lastref || (!(ifma->ifma_debug & IFD_ATTACHED) && ifma->ifma_reqcnt == 0)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "if_delmulti_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: ifma=%p negative reqcnt @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: ifma=%p missing IFMAF_ANONYMOUS @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: ifma=%p negative anonreqcnt @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: Mismatch ifma_ifp=%p, ifp=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: Detaching ifma=%p with outstanding anon req @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: Attempt to detach an unattached address ifma=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: ifma %p is already in trash list @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "if_detach_ifma"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "if_rtdel: error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "if_rtdel"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ifnet_set_flowswitch_rx_callback"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ifnet_set_flowswitch_rx_callback"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ifnet_set_delegate_parent"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ifnet_set_delegate_parent"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "((intptr_t)base + dlif_tcpstat_size) <= ((intptr_t)buf + dlif_tcpstat_bufsize)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "((intptr_t)base + dlif_udpstat_size) <= ((intptr_t)buf + dlif_udpstat_bufsize)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IS_P2ALIGNED(ifp->if_tcp_stat, sizeof(u_int64_t)) && IS_P2ALIGNED(ifp->if_udp_stat, sizeof(u_int64_t))"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dlil_alloc_local_stats"
        prototype = ""
        caller = "dlil_if_acquire"
    }
    new {
        args = 0
        anchors {
            new {
                string = "dlil_attach_filter"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s filter attached\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: failed to attach %s (err=%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "dlil_attach_filter"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "plowat != 0 && phiwat != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "blowat != 0 && bhiwat != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ival >= IF_RXPOLL_INTERVALTIME_MIN"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: speed %llu bps, sample per %llu nsec, poll interval %llu nsec, pkts per poll %u, pkt limits [%u/%u], wreq limits [%u/%u], bytes limits [%u/%u]\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dlil_rxpoll_update_params"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ifp != NULL && p != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dlil_rxpoll_get_params"
        prototype = ""
        caller = "ifnet_poll_params"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: restart interval set to %lu nsec\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: TBR disabled\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: TBR %s (rate %llu bps depth %u)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "reconfigured"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "idepth > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: TBR calculated tokens %lld filluptime %llu ns\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: TBR calculated tokens %lld infinite filluptime\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: TBR suspended (link is down)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ifclassq_tbr_set"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "tail->m_flags & M_PKTHDR"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ifnet_enqueue"
        prototype = ""
        caller = "lo_pre_enqueue"
    }
    new {
        args = 2
        anchors {
            new {
                string = "ifp->if_output_dlil != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifp->if_eflags & IFEF_ENQUEUE_MULTI"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dlil_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(pop & ones) == pop"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(ptrdiff_t)(uth->uu_network_marks & pop) == pop"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "net_thread_marks_pop"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(unpop & ones) == unpop"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(ptrdiff_t)(uth->uu_network_marks & unpop) == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "net_thread_unmarks_pop"
        prototype = ""
        caller = "domain_unguard_release"
    }
    new {
        args = 0
        anchors {
            new {
                string = "IF_FULLY_ATTACHED(ifp)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ifnet_incr_iorefcnt"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ifp->if_datamov > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Waking up drainers on %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "ifnet_datamov_end"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Waiting for data path(s) to quiesce on %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifnet_datamov_drain"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifp->if_drainers > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ifnet_datamov_drain"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: negative refcnt for ifp=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "dlil_if_free"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dlil_if_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: failed to attach v1 protocol %d (err=%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: attached v1 protocol %d (count = %d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "ifnet_attach_protocol"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: failed to attach v2 protocol %d (err=%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: attached v2 protocol %d (count = %d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "ifnet_attach_protocol_v2"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: detached %s protocol %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "ifnet_detach_protocol"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: flags mismatch (embryonic not set) ifp=%p"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ifp->if_threads_pending == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Attempt to attach interface without family module - %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "ifp->if_proto_hash == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "LIST_EMPTY(&ifp->if_multiaddrs)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifp->if_allhostsinm == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifnet_addrs[ifp->if_index - 1] == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifp->if_output_sched_model == IFNET_SCHED_MODEL_NORMAL || ifp->if_output_sched_model == IFNET_SCHED_MODEL_DRIVER_MANAGED || ifp->if_output_sched_model == IFNET_SCHED_MODEL_FQ_CODEL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dl_inp->dlth_flags == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dl_inp->dlth_wtot == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dl_inp->dlth_ifp == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "qhead(&dl_inp->dlth_pkts) == NULL && qempty(&dl_inp->dlth_pkts)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "qlimit(&dl_inp->dlth_pkts) == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!dl_inp->dlth_affinity"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifp->if_inp == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dl_inp->dlth_thread == THREAD_NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dl_inp->dlth_strategy == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dl_inp->dlth_driver_thread == THREAD_NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dl_inp->dlth_poller_thread == THREAD_NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dl_inp->dlth_affinity_tag == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dl_inp->dlth_pkts_cnt == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "thfunc == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: ifp=%p couldn\\'t get an input thread; err=%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ifp->if_start_thread == THREAD_NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifp->if_start != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: ifp=%p couldn\\'t get a start thread; err=%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ifp->if_input_poll != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifp->if_input_ctl != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: ifp=%p couldn\\'t get a poll thread; err=%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ifp->if_desc.ifd_len == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: attached with %d suspended link-layer multicast membership(s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "ifp->if_agentids == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifp->if_agentcount == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s if_set_qosmarking_mode(%s) error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "IGMP_IFINFO(ifp) != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IGMP_IFINFO(ifp)->igi_ifp == ifp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "MLD_IFINFO(ifp) != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "MLD_IFINFO(ifp)->mli_ifp == ifp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifp->if_data_threshold == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Waiting for all kernel threads created for interface %s to get scheduled at least once.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: All kernel threads created for interface %s have been scheduled at least once. Proceeding.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: attached%s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = " (recycled)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s already has nexus attached\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s kern_nexus_ifattach %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "ll_addr == NULL || ll_addr->sdl_alen == ifp->if_addrlen"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifa->ifa_debug == IFD_LINK"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ifnet_attach"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ifp->if_flowhash != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifp != NULL && (ifp->if_eflags & IFEF_TXSTART)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ifnet_disable_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "!(ifp->if_refflags & IFRF_EMBRYONIC)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: detaching\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "ifnet_detach"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifindex2ifnet[ifp->if_index] == ifp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifnet_detaching_cnt != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s %s tcp_kao_cnt %u not zero"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ifnet_detach"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "*ifp == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "((intptr_t)base + dlif_size) <= ((intptr_t)buf + dlif_bufsize)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: failed to allocate if local stats, error: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "dlil_if_acquire"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dlifp1 == NULL || (IS_P2ALIGNED(dlifp1, sizeof(u_int64_t)) && IS_P2ALIGNED(&ifp1->if_data, sizeof(u_int64_t)))"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dlil_if_acquire"
        prototype = ""
        caller = "ifnet_allocate_extended"
    }
    new {
        args = 0
        anchors {
            new {
                string = "src_rt.ro_rt == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ifnet_cached_rtlookup_inet"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "lqm >= IFNET_LQM_MIN && lqm <= IFNET_LQM_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "if_lqm_update"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: Post DL_NODE_PRESENCE failed witherror %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "dlil_node_present"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dlil_node_present"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "sa != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dlil_node_absent"
        prototype = ""
        caller = "ifnet_notice_node_absence"
    }
    new {
        args = 1
        anchors {
            new {
                string = "sa != NULL && sdl != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sa->sa_family == AF_INET6 && sdl->sdl_family == AF_LINK"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sdl->sdl_len <= sizeof(*kev_sdl)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Post DL_NODE_PRESENCE failed with error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "dlil_node_present_v2"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dlil_node_present_v2"
        prototype = ""
        caller = "ifnet_notice_node_presence_v2"
    }
    new {
        args = 0
        anchors {
            new {
                string = "modid != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dlil_report_issues"
        prototype = ""
        caller = "ifnet_report_issues"
    }
    new {
        args = 1
        anchors {
            new {
                string = "cmd == SIOCSIFOPPORTUNISTIC || cmd == SIOCGIFOPPORTUNISTIC"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ifnet_getset_opportunistic"
        prototype = ""
        caller = "ifioctl_ifreq"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: throttling level set to %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "ifnet_set_throttle"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "cmd == SIOCSIFLOG || cmd == SIOCGIFLOG"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ifnet_getset_log"
        prototype = ""
        caller = "ifioctl_ifreq"
    }
    new {
        args = 0
        anchors {
            new {
                string = "level >= IFNET_LOG_MIN && level <= IFNET_LOG_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "flags & IFNET_LOGF_MASK"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: logging level set to %d flags=0x%x arg=0x%x, category=%d subcategory=%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "ifnet_set_log"
        prototype = ""
        caller = "ifnet_getset_log"
    }
    new {
        args = 0
        anchors {
            new {
                string = "NAT64 prefixes purged from Interface %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NAT64 prefixlen is incorrect %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "NAT64 prefix has interface/link local scope.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NAT64 prefix set to %s with prefixlen: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ifnet_set_nat64prefix"
        prototype = ""
        caller = "ifioctl_nat64prefix"
    }
    new {
        args = 0
        anchors {
            new {
                string = "skip attaching fsw to %s using legacy TX model\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: can't find netif for %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s kern_nexus_ifattach device failed %d %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: not attaching flowswitch to %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "dlil_attach_flowswitch_nexus"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "%s: SIOCGIFDEVMTU failed for %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: %s %d %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: can't determine MAX MTU for %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: can't get pbufpool info for %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: interface %s packet pool (rx %d * %d, tx %d * %d) can't support max mtu(%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_dlil_get_flowswitch_buffer_size"
        prototype = ""
        caller = "dlil_attach_flowswitch_nexus"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s can't get %s provider, error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s register %s provider failed, error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s alloc_provider_instance %s failed, %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "dlil_create_provider_and_instance"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "dlil_detach_flowswitch_nexus"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dlil_detach_flowswitch_nexus"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "%s deregister_provider %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s kern_nexus_ifdetach device failed %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s free_provider_instance failed %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "dlil_detach_nexus"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "dlil_filter_event"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: eventhandler saw event type=net_filter_event_state event_code=0x%d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "dlil_filter_event"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "main_input"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s_input_poll"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s_input"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "inp->dlth_thread == THREAD_NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: couldn\\'t create main input thread"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: couldn\\'t create %s input thread"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "dlil_create_input_thread"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "m_head != NULL || (m_tail == NULL && m_cnt == 0)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dlil_input_async"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s %s burst limit %u (sysctl: %u) exceeded. %u packets dropped [%u total in %u events]. new qlen %u "
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "dlil_input_async"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "overcommitted_qlen == target_qlen + dropped_pkts"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: qlen: %u -> %u, qsize: %llu -> %llu qlimit: %u (sysctl: %u) target_qlen: %u (if_rcvq_trim_pct: %u) pkts_to_drop: %u dropped_pkts: %u dropped_bytes %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dlil_trim_overcomitted_queue_locked"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dlil_trim_overcomitted_queue_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "inp->dlth_ifp == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dlil_main_input_thread_func"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "wres != THREAD_INTERRUPTED"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!(inp->dlth_flags & (DLIL_INPUT_TERMINATE | DLIL_INPUT_RUNNING))"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!(inp->dlth_flags & DLIL_INPUT_TERMINATE)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dlil_main_input_thread_cont"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "!(ifp->if_eflags & IFEF_RXPOLL) || !net_rxpoll || !(ifp->if_xflags & IFXF_LEGACY)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifp->if_poll_mode == IFNET_MODEL_INPUT_POLL_OFF || !(ifp->if_xflags & IFXF_LEGACY)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dlil_input_%s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dlil_input_thread_func"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "(inp->dlth_flags & DLIL_INPUT_TERMINATE) != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: input thread terminated\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "dlil_terminate_input_thread"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "dlil_input_sync"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s %s burst limit %u (sysctl: %u) exceeded. %u packets dropped [%u total in %u events]. new qlen %u \n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "dlil_input_sync"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: %s filter detached\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s filter detached\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "OSDecrementAtomic64(&net_api_stats.nas_iflt_attach_count) > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "OSDecrementAtomic64(&net_api_stats.nas_iflt_attach_os_count) > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "failed to detach %s filter (err=%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "dlil_detach_filter_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "m_head != NULL || (s == NULL && m_tail == NULL && !ext && poll)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "m_tail == NULL || ext"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "input_func != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: invalid mbuf %p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: invalid input packet chain for %s, tail mbuf %p instead of %p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: input packet count mismatch for %s, %d instead of %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ifnet_input_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IS_INTF_CLAT46(ifp)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "*proto_family == PF_INET"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dlil_clat46"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "%s: frame header pointer 0x%llx out of range [0x%llx,0x%llx] for mbuf 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: partial cksum start offset %d is less than frame header length %d for mbuf 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: bad partial cksum value 0x%x (expected 0x%x) for mbuf 0x%llx [rx_start %d]\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "failed to restore"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "wake packet from %s len %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "dlil_input_packet_list_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "if_proto_count == tmp_ifproto_arr_idx"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "proto != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dlil_event_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "proto->detached"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "if_proto_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "dlil_attach_protocol"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dlil_attach_protocol"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ifnet_start_%s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "skywalk_doorbell_%s_tx"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!ifp->if_start_embryonic && !ifp->if_start_active"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ifnet_start_thread_func"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: starter thread terminated\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "ifnet_start_thread_cont"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ifp != NULL && (ifp->if_eflags & IFEF_RXPOLL) && (ifp->if_xflags & IFXF_LEGACY)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dlil_input_poll_%s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dlil_rxpoll_input_thread_func"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "m != NULL || m_cnt == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: [%s] pkts avg %d max %d limits [%d/%d], wreq avg %d limits [%d/%d], bytes avg %d limits [%d/%d]\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: polling is now %s, pkts avg %d max %d limits [%d/%d], wreq avg %d limits [%d/%d], bytes avg %d limits [%d/%d]\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: error setting polling mode to %s (%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "dlil_rxpoll_input_thread_cont"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ifnet_poller_%s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!(ifp->if_poll_flags & (IF_POLLF_EMBRYONIC | IF_POLLF_RUNNING))"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ifnet_poll_thread_func"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: polling up to %d pkts, pkts avg %d max %d, wreq avg %d, bytes avg %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "m_tail != NULL && m_cnt > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: polled %d pkts, pkts avg %d max %d, wreq avg %d, bytes avg %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: no packets, pkts avg %d max %d, wreq avg %d, bytes avg %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: poller thread terminated\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "ifnet_poll_thread_cont"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "TAILQ_FIRST(&ifnet_detaching_head) != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifnet_detaching_cnt != 0 || ifp == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: flags mismatch (detaching not set) ifp=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ifp->if_datamov == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifp->if_drainers == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifp->if_suspend == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "LIST_EMPTY(&ifp->if_netns_tokens)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifnet_addrs[ifp->if_index - 1] == ifa"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifp->if_link.tqe_next == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifp->if_link.tqe_prev == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifp->if_ordered_link.tqe_next == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifp->if_ordered_link.tqe_prev == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: waiting for %s starter thread to terminate\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "ifnet_start_thread_exit"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s starter thread termination complete"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: waiting for %s poller thread to terminate\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: %s poller thread termination complete\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "ifp->if_xflags & IFXF_LEGACY"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifp->if_na_ops == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifp->if_na == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!ifp->if_fwd_cacheok"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!thread_call_isactive(ifp->if_dt_tcall)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: detached\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "qhead(&inp->dlth_pkts) == NULL && qempty(&inp->dlth_pkts)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!inp->dlth_affinity"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "inp->dlth_affinity_tag == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ifnet_detacher_thread_cont"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "dlil_detach_netif_nexus"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dlil_detach_netif_nexus"
        prototype = ""
        caller = "dlil_quiesce_and_detach_nexuses"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: dl_if %p has no debug structure @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "dlil_if_trace"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dlil_if_trace"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "OSDecrementAtomic64(&net_api_stats.nas_ifnet_alloc_count) > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "OSDecrementAtomic64(&net_api_stats.nas_ifnet_alloc_os_count) > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_dlil_if_release"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "WARNING: %s can't attach ip to %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "ether_attach_inet"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ether_attach_inet"
        prototype = ""
        caller = "vlan_attach_inet"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: can't handle af%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "ether_inet_pre_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "WARNING: %s can't attach ipv6 to %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "ether_attach_inet6"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ether_attach_inet6"
        prototype = ""
        caller = "vlan_attach_inet6"
    }
    new {
        args = 0
        anchors {
            new {
                string = "lo_txstart"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: couldn\\'t allocate loopback ifnet (%d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: couldn\\'t attach loopback ifnet (%d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "loopattach"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "lo_attach_proto: ifnet_attach_protocol for %u returned=%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "lo_attach_proto"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "lo_input"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "lo_input"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(*m)->m_flags & M_PKTHDR"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "lo_pre_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: mbuf_set_status() failed %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "lo_tx_compl"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ifp == lo_ifp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "lo_set_bpf_tap"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ifvlan_release: bad signature @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ifvlan_release: retain count is 0 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ifvlan_release"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ifvlan_release"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vlan_parent_release: signature is bad @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vlan_parent_release: retain count is 0 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vlan_parent_release"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vlan_parent_release"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vlan_parent_wait"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vlan_parent_wait"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vlan_parent_create"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s: siocgifdevmtu failed, %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "vlan_config"
        prototype = ""
        caller = "vlan_ioctl"
    }
    new {
        args = 0
        anchors {
            new {
                string = "vlan_attach_protocol"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vlan_attach_protocol"
        prototype = ""
        caller = "vlan_config"
    }
    new {
        args = 2
        anchors {
            new {
                string = "(scan->m_pkthdr.csum_flags & CSUM_VLAN_TAG_VALID) != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "tag != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vlan_input"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s tag %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "vlan_input"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "vlan_input_tag"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vlan_input_packet_list"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s VLAN tag %d (dropped)"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s: packets %d bytes %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "vlan_input_tag"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vlan_parent_link_event"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vlan_event"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "feth_fake_tx_exp_policy_sysctl"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: if_fake_tx_exp_policy: %u -> %u (%d)"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "feth_fake_tx_exp_policy_sysctl"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.feth"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "feth_register_nexus_domain_provider"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: failed to register domain provider"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "if_fake_init"
        prototype = ""
        caller = "ether_family_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "fakeif->iff_retain_count == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fakeif->iff_rx_pp == S_pp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fakeif->iff_tx_pp == S_pp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "feth_free"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "feth_release"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "fakeif->iff_doorbell_tcall == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "feth_if_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "feth shared pp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s rx pp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s tx pp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: feth used as ifname prefix but logical link support in feth is disabled."
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: TSO mode requires global packet pool mode"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: multi-buflet not supported for split rx & tx pool"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: rx pp create failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: tx pp create failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: create_non_default_llinks failed, %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s: llink add failed, error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "feth_clone_create"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "feth_nx_connected"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s: connected channel %p"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "feth_nx_connected"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "feth_nx_pre_disconnect"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s: pre-disconnect channel %p"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "feth_nx_pre_disconnect"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "feth_nx_disconnected"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s: disconnected channel %p"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "feth_nx_disconnected"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "fakeif->iff_tx_ring[ring_idx] == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fakeif->iff_tx_ring[0] == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fakeif->iff_rx_ring[0] == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "feth_nx_ring_init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s: %s ring init"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "feth_nx_ring_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "feth threadcall"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s: RX ring fini"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s: TX ring fini"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s: thread_call_cancel %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s: *waiting for threadcall"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s: ^threadcall done"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s: thread_call_free %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "feth_nx_ring_fini"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "clock_timebase.denom != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "feth_packet_has_expired"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "feth_get_effective_expn_action"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s sent expiry notification on nexus port %u notif code %u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Packet has %llu usec until expiration"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Unrecognized value %d for \"net.link.fake.tx_exp_policy\""
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "feth_tx_expired_error"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "feth_tx_complete_error"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "feth_tx_complete_error"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "baddr != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bufcnt == kern_packet_get_buflet_count(dph)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "feth_copy_packet"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "feth_clone_packet"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: packet clone err %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "feth_clone_packet"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "feth_nx_sync_rx"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "feth_nx_sync_rx"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "feth_nx_tx_doorbell"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s: TX refill (sync) %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s: TX refilled (sync)"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s: schedule async refill"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "feth_nx_tx_doorbell"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "feth_nx_tx_dequeue_driver_managed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s: TX refill ring %d (%s) %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: %s: TX refilled ring %d (%s)"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "feth_nx_tx_dequeue_driver_managed"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "feth_nx_capab_config"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "feth_nx_capab_config"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "feth_nx_intf_adv_config"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s enable %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "feth_nx_intf_adv_config"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "feth_notify_steering_info"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s: notify_steering_info: qset_id 0x%llx, %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "feth_notify_steering_info"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "feth_nx_tx_qset_notify"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s qset %p, idx %d, flags 0x%x"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s queue %p dequeue failed: err %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "feth_nx_tx_qset_notify"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "feth_nx_tx_queue_deliver_pkt_chain"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s -> %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "feth_nx_tx_queue_deliver_pkt_chain"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "feth_nx_queue_tx_push"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s queue %p"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "feth_nx_queue_tx_push"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.xnu.net.redirect"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "redirect_register_nexus_domain_provider"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "if_redirect_init"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "rd->rd_retain_count == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "redirect_free"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "redirect_release"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "redirect_max_mtu"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "redirect_max_mtu"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "redirect_clear_delegate_locked"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "redirect_clear_delegate_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "rd->rd_doorbell_tcall == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: ifp is NULL\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "redirect_if_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "redirect_demux"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: data is NULL\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "redirect_demux"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "redirect_attach_netif_nexus"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: create params not specified\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: copyin failed: error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: invalid type(0x%x) or len(0x%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: functional type(0x%x) not supported\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: invalid ifc_name(%s) or unit(%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: attach netif nexus failed: error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s packet pool make failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s register provider failed, error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s alloc net provider instance failed %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "redirect_clone_create"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "redirect_nx_connected"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s: connected channel %p\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "redirect_nx_connected"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "redirect_nx_pre_disconnect"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s: pre-disconnect channel %p\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "redirect_nx_pre_disconnect"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "redirect_nx_disconnected"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s: disconnected channel %p\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "redirect_nx_disconnected"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "rd->rd_tx_ring[0] == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "rd->rd_rx_ring[0] == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "redirect_nx_ring_init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s: %s ring init\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "redirect_nx_ring_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "redirect threadcall"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s: RX ring fini\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s: TX ring fini\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s: thread_call_cancel %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s: *waiting for threadcall\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s: threadcall done\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s: thread_call_free %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "redirect_nx_ring_fini"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "multicast_list_program: ifnet_get_multicast_list(%s%d) failed, %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "multicast_list_program"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "bond_clone_create"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s: failed to add slow_proto multicast, %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bond_clone_create"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ifbond_release"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s: removing multicast"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ifbond_release"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "/AppleInternal/Library/BuildRoots/d3a62b52-2ef5-11ef-9ecd-e2437461156c/Library/Caches/com.apple.xbs/Sources/xnu/bsd/net/if_bond.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bond_output"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s: %s bytes %d, error=%d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bond_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "bond_set_mtu"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "bond_set_mtu"
        prototype = ""
        caller = "bond_ioctl"
    }
    new {
        args = 0
        anchors {
            new {
                string = "ifbond_wait"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ifbond_wait"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "bond_set_mtu_on_ports"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s: SIOCSIFMTU %s failed, %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bond_set_mtu_on_ports"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "bondport_timer_process_func"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s: (timer) generating LINK event"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bondport_timer_process_func"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "bond_attach_protocol"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "bond_attach_protocol"
        prototype = ""
        caller = "bond_add_interface"
    }
    new {
        args = 1
        anchors {
            new {
                string = "bond_input_packet_list"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s: %s packets %d bytes %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bond_input_packet_list"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ifbond_list_find_moved_port"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bond_receive_la_marker_pdu"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: dropping short LACP frame %d < %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: m_pullup LACPDU failed"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: m_pullup LA_MARKER failed"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: %s: (receive) generating LINK event"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: simulating link status changed event"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: System %x:%x:%x:%x:%x:%x Port 0x%x moved from %s to %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "bond_input"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "bondport_receive_machine_current"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bondport_UpdateSelected"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bondport_UpdateNTT"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: [%s] Receive CURRENT"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: [%s] updateSelected UNSELECTED"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: [%s] updateNTT: Need To Transmit"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: [%s] recordPDU: LACP will maintain"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: [%s] recordPDU: LACP partner in sync"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: [%s] recordPDU: LACP partner in sync (ind)"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bondport_receive_machine_current"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "bondport_set_selected"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: [%s] SetSelected: %s (was %s)"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bondport_set_selected"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "bondport_assign_to_LAG"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Key 0x%04x: LAG Created (0x%04x,%x:%x:%x:%x:%x:%x,0x%04x)"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bondport_assign_to_LAG"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "bondport_remove_from_LAG"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: [%s] Removed from LAG (0x%04x,%x:%x:%x:%x:%x:%x,0x%04x)"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Key 0x%04x: LAG Released (%04x,%x:%x:%x:%x:%x:%x,0x%04x)"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bondport_remove_from_LAG"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "bondport_add_to_LAG"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: [%s] Added to LAG (0x%04x,%x:%x:%x:%x:%x:%x0x%04x)"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bondport_add_to_LAG"
        prototype = ""
        caller = "bondport_assign_to_LAG"
    }
    new {
        args = 1
        anchors {
            new {
                string = "bondport_receive_machine_expired"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: [%s] Receive EXPIRED"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bondport_receive_machine_expired"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "bondport_receive_machine_defaulted"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: [%s] Receive DEFAULTED"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bondport_receive_machine_defaulted"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "bondport_receive_machine_lacp_disabled"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: [%s] Receive LACP_DISABLED"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bondport_receive_machine_lacp_disabled"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "bondport_receive_machine_initialize"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: [%s] Receive INITIALIZE"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bondport_receive_machine_initialize"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "bondport_mux_machine_detached"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bondport_DetachMuxFromAggregator"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: [%s] Mux DETACHED"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: [%s] Detached Mux From Aggregator"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bondport_mux_machine_detached"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "bondport_mux_machine_attached"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bondport_AttachMuxToAggregator"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: [%s] Mux ATTACHED"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: [%s] Attached Mux To Aggregator"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bondport_mux_machine_attached"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "bondport_mux_machine_collecting_distributing"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: [%s] Mux COLLECTING_DISTRIBUTING"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bondport_mux_machine_collecting_distributing"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "bond_handle_event"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s: (event) generating LINK event"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: [%s] Link UP %d Mbit/s %s duplex"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: [%s] Link DOWN"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: [%s] Port speed %d differs from LAG %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bond_handle_event"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "bondport_slow_proto_transmit"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: (%s) failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bondport_slow_proto_transmit"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "[%s] Transmit: failed to allocate packet buffer\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: [%s] Transmit Timer Already Set"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: [%s] Transmit Timer Deadline %d secs"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: [%s] Transmit Timer Complete"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: [%s] Transmit Packet %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bondport_transmit_machine"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ifbond_selection"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: LAG PORT SPEED CHANGED from %d to %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ifbond_selection"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "bondport_disable_distributing"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: [%s] Distribution Disabled"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bondport_disable_distributing"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "bond_set_mode"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "bond_set_mode"
        prototype = ""
        caller = "bond_ioctl"
    }
    new {
        args = 1
        anchors {
            new {
                string = "bond_set_promisc"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s: ifnet_set_promiscuous(%s, %d): failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: %s: ifnet_set_promiscuous(%s, %d): succeeded"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: %s: multicast_list_program(%s) failed, %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bond_ioctl"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "bond_if_detach"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s: ifnet_detach failed, %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bond_clone_destroy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "devtimer_set_absolute: uninitialized/freed timer\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "devtimer_set_absolute"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ndrvdomain == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ndrv_dominit"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "rn_addmask: mask impossibly already in tree"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "rn_addmask"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Non-unique normal route, mask not entered"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "rn_addroute"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "rn_delete: couldn\\'t find our annotation\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "rn_delete: couldn\\'t find us\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "rn_delete: Orphaned Mask 0x%llx at 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "rn_delete"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "rn_init: radix functions require max_keylen be set\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "radix_node"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "rn_init"
        prototype = ""
        caller = "route_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "rte_debug"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "rtentry"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "route_init"
        prototype = ""
        caller = "route_dinit"
    }
    new {
        args = 2
        anchors {
            new {
                string = "buf != NULL && buflen >= sizeof(*ss)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "buflen >= sa->sa_len"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sdl->sdl_alen == size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: broken logic (sa_len %d < skip %d ) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "sa_trim"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "rtm_scrub"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "rtunref"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "rtunref: on freed rte=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "rtunref"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(p->rt_flags & RTF_DEAD) == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "rtref"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "rtref_audit: on freed rte=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "rtref"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "rt != ogwrt"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "rt->rt_gwroute == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "rt_set_gwroute"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "gwrt != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "rt->rt_flags & (RTF_CLONING | RTF_PRCLONING)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "rt_revalidate_gwroute"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "rt == gwrt && rt != hint"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "route_to_gwroute"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "p_gw_saddr->sa_len <= sizeof(p_rt_ev->rt_ev_arg.rt_addr)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "route_event_enqueue_nwk_wq_entry"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: eventhandler enqueuing event of type=route_event event_code=%s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "route_event_enqueue_nwk_wq_entry"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "sin6_get_embedded_ifscope"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IN6_IS_SCOPE_EMBED(&(SIN6(sa)->sin6_addr))"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sa_copy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "rt %p invalid refcnt %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "!(rt->rt_flags & RTF_IFREF)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "rt %p freed while in radix tree @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "rt->rt_llinfo_free != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "rtfree_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "rte_free: rte=%p refcnt=%d non-zero @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "rte_free: rte=%p refcnt=%d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "rte_free: double free rte=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "rte_free: corrupted rte=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "rte_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "SIN6(dst)->sin6_scope_id != IFSCOPE_NONE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "rtrequest delete @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "rt->rt_flags & RTF_HOST"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "rtrequest: RTF_GATEWAY but no gateway @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "rtrequest_common_locked"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(*ret_nrt)->rt_expire == 0 || (*ret_nrt)->rt_rmx.rmx_expire != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(*ret_nrt)->rt_expire != 0 || (*ret_nrt)->rt_rmx.rmx_expire == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: route already exists: %s->%s->%s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "rtrequest_common_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "!coarse || ifscope == IFSCOPE_NONE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s unscoped search %p to %s->%s->%s ifa_ifp %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s %u return NULL\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s %u return %p to %s->%s->%s ifa_ifp %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "rt_lookup_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: invalid count argument (%d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: ifp=%p negative route refcnt! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "rte_if_ref"
        prototype = ""
        caller = ""
    }
    new {
        args = 4
        anchors {
            new {
                string = "rt_key(rt)->sa_family == AF_INET"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "link#%u"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "rt_str"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "evtag != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "eventhandler_deregister event_type=route_event"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "eventhandler_invoke(\"route_event\")"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "route_event_callback"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "in->rt_expire == 0 || in->rt_rmx.rmx_expire != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "in->rt_expire != 0 || in->rt_rmx.rmx_expire == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "rt_getmetrics"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "routedomain == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "route_dinit"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "out->rt_expire == 0 || out->rt_rmx.rmx_expire != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "out->rt_expire != 0 || out->rt_rmx.rmx_expire == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "rt_setmetrics"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "so->so_pcb == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "rts_attach"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "rp != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "rts_detach"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.netsrc"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: ctl_register failed %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "netsrc_init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netsrc_init"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: invalid family\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "netsrc_ctlsend"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netsrc_ctlsend"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.xnu.net"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ntstat"
                segment = "__TEXT"
                section = "__cstring"
                caller = "os_log_create"
            }
            new {
                string = "com.apple.network.statistics"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nstat_init"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "ntstat_userland_stats_open"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - incorrect provider is supplied, %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ntstat_userland_stats_open"
        prototype = ""
        caller = "necp_stats_initialize"
    }
    new {
        args = 0
        anchors {
            new {
                string = "nstat_tcp_copy_descriptor"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - NSTAT_DEBUG_SOCKET <pid %d>: NSTAT: TCP - pid %d uid %d euuid %s persona id %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nstat_tcp_copy_descriptor"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nstat_udp_copy_descriptor"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - NSTAT_DEBUG_SOCKET <pid %d>: NSTAT: UDP - pid %d uid %d euuid %s persona id %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nstat_udp_copy_descriptor"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nstat_userland_protocol_add_watcher"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nstat_userland_protocol_add_watcher"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nstat_generic_provider_add_watcher"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nstat_generic_provider_add_watcher"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nstat_generic_provider_reporting_allowed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - attempt to filter conn provider by effective pid/uuid, not supported"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nstat_generic_provider_reporting_allowed"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "i == nkeyvals"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "i > 0 && i <= nkeyvals"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nstat_sysinfo_send_data"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "nstat_client_handle_query_request"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nstat_client_send"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nstat_flush_accumulated_msgs"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - ctl_enqueuembuf failed: %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nstat_flush_accumulated_msgs"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nstat_client_cleanup_source"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nstat_client_cleanup_source"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "tcp_progress_probe_enable_for_interface"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - for interface index %u with flags %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - *matched* interface index %d, enable: %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s - (%d) - nstat set tcp probe %d for interface index %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "ntstat_tcp_progress_enable"
        prototype = ""
        caller = "tcp_progress_probe_enable"
    }
    new {
        args = 0
        anchors {
            new {
                string = "gif_init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "gif_init"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "gif_attach_proto_family can't attach interface\t\t\t    fam=%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "gif_attach_proto_family"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "gif_clone_destroy: gif remove failed %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "gif_clone_destroy: ifnet_set_flags failed %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "gif_clone_destroy: ifnet_detach(%p) failed %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "gif_clone_destroy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "gif_clone_create, ifnet_allocate failed - %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: unable to attach encap4\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: unable to attach encap6\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "gif_clone_create - ifnet_attach failed - %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "gif_clone_create"
        prototype = ""
        caller = "gif_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "gif_add_proto: request add_proto for gif%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "gif_add_proto"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "sftattach encap_attach_func failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "stfattach, ifnet_allocate failed - %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "stfattach: ifnet_attach returned error=%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "stfattach"
        prototype = ""
        caller = "ip6_init_delayed"
    }
    new {
        args = 1
        anchors {
            new {
                string = "stf: IFF_DOWN\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "stf_pre_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "stf_attach_proto_family can't attach interface fam=%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "stf_attach_inet6"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "stf_add_proto: stf already has a proto\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "stf_add_proto"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "defer encapsulated ESP matching"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: called PKTF_WAKE_PKT not set from %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: mbuf_copydata(ip) error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: unexpected IPv4 protocol %u from %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: mbuf_copydata(ip6_hdr) error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: mbuf_copydata(ip6_frag) error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: unexpected IPv6 protocol %u from %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: unexpected protocol family %d from %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "if_ports_used_match_mbuf"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "TAILQ_EMPTY(&net_port_entry_hash_table[i])"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/AppleInternal/Library/BuildRoots/d3a62b52-2ef5-11ef-9ecd-e2437461156c/Library/Caches/com.apple.xbs/Sources/xnu/bsd/net/if_ports_used.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: IOPMCopySleepWakeUUIDKey got bad value %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: SleepWakeUUID not set, don't update the port list for %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: current wakeuuid %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "if_ports_used_update_wakeuuid"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: SYSCTL_OUT(xnpigen) error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: SYSCTL_OUT(npi) error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "sysctl_net_port_info_list"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: ifnet_get_local_ports_extended() error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "sysctl_get_ports_used"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sysctl_get_ports_used"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "is_encapsulated_esp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: mbuf_copydata(ESP_HDR_SIZE) error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "is_encapsulated_esp"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "wake packet match"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "wake packet no match"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "net_port_info_find_match"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "already notified wake packet"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "if_notify_wake_packet"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "if_notify_unattributed_wake_mbuf"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: mbuf_copydata() failed with error %d for wake uuid %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "if_notify_unattributed_wake_mbuf"
        prototype = ""
        caller = "if_ports_used_match_mbuf"
    }
    new {
        args = 0
        anchors {
            new {
                string = "if_notify_unattributed_wake_pkt"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: receive interface is NULL"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "if_notify_unattributed_wake_pkt"
        prototype = ""
        caller = "if_ports_used_match_pkt"
    }
    new {
        args = 0
        anchors {
            new {
                string = "if_set_low_power"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: ifp %s low_power mode %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ifnet_set_low_power_mode"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "if_low_power_evhdlr_callback"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: ifp %s event_code %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "if_low_power_evhdlr_callback"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "!(einit.flags & IFNET_INIT_LEGACY) || (ifp->if_pre_enqueue == NULL && ifp->if_start == NULL && ifp->if_output_ctl == NULL && ifp->if_input_poll == NULL && ifp->if_input_ctl == NULL)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!(einit.flags & IFNET_INIT_INPUT_POLL) || (ifp->if_input_poll != NULL && ifp->if_input_ctl != NULL)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!(einit.flags & IFNET_INIT_LEGACY)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(ifp->if_xflags & IFXF_LEGACY) == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ifnet_allocate_extended"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "err == 0 || *addresses == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "return_inuse_addrs == 1"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ifnet_get_address_list_family_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: already a cloner for %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: if_clone_attach failed %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "ifnet_clone_attach"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: no cloner for %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "ifnet_clone_detach"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ifnet_clone_detach"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: delegating to %s would cause a loop\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: is now delegating %s (type 0x%x, family %u, sub-family %u)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: is no longer delegating %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "ifnet_set_delegate"
        prototype = ""
        caller = ""
    }
    new {
        args = 4
        anchors {
            new {
                string = "*used_frames_count <= frames_array_count"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ifnet_get_keepalive_offload_frames"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: set offload flags=0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "ifnet_set_offload_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.net.utun_control"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "utun_register_nexus"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "utun_register_control - ctl_register failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "utun_register_control - proto_register_plumber(PF_INET, IFNET_FAMILY_UTUN) failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "utun_register_control - proto_register_plumber(PF_INET6, IFNET_FAMILY_UTUN) failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "utun_register_control"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 3
        anchors {
            new {
                string = "utun%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "utunid%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "utun_flowswitch_attach - ifnet_detach failed: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "utun_ctl_connect - utun_nexus_ifattach failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "utun_ctl_connect - utun_flowswitch_attach failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "utun_ctl_connect - ifnet_allocate failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "utun_ctl_connect - ifnet_attach failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "utun_flowswitch_attach - flowswitch is NULL\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "utun_flowswitch_attach - unable to find flowswitch nexus\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "utun_ctl_connect"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "utun_start"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "utun_start: ctl_getenqueuepacketcount returned error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "utun_start: ifnet_disable_output returned error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "utun_start"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "utun_data_move_drain"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pcb->utun_pcb_drainers > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "utun_wait_data_move_drain"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pcb->utun_netif_rxring == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pcb->utun_netif_txring == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "utun_netif_ring_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "utun_netif_sync_tx"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "tx_offset >= UTUN_HEADER_SIZE(pcb)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "utun_netif_sync_tx %s: unknown ip version %u vhl %u tx_offset %u len %u header_size %zu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "utun_netif_sync_tx %s - mbuf_copyback(%zu) error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "utun_netif_sync_tx %s - mbuf_gethdr error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "utun_netif_sync_tx %s - 0 length packet\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "utun_netif_sync_tx"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "utun_netif_sync_rx"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "utun_netif_sync_rx %s: legacy packet length too short for header %zu < %zu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "utun_netif_sync_rx %s: legacy packet length %zu > %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "utun_netif_sync_rx %s: packet length too short for header %u < %zu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "utun_netif_sync_rx"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "utun_nexus_detach"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "utun_nexus_detach"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "utun_ctl_disconnect - ifnet_detach failed: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "utun_ctl_disconnect - ifnet_detach failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "utun_ctl_disconnect"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "utun_ctl_send"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - unexpected short mbuf pkt len %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - ifnet_input failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "utun_ctl_send"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "utun_ncd"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "utun_enable_channel"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "uuid_is_null(pcb->utun_kpipe_uuid)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "utun_enable_channel"
        prototype = ""
        caller = "utun_ctl_setopt"
    }
    new {
        args = 0
        anchors {
            new {
                string = "pcb->utun_kpipe_rxring == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pcb->utun_kpipe_txring == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "utun_kpipe_ring_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "utun_kpipe_sync_tx"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "utun_kpipe_sync_tx"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "utun_kpipe_sync_rx"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "tx_baddr != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mb_cnt <= avail"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mb_cnt == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "utun_kpipe_sync_rx %s: invalid length %zu header_size %zu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "utun_kpipe_sync_rx %s: unknown ip version %u vhl %u header_size %zu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "utun_kpipe_sync_rx: ifnet_enable_output returned error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "utun_kpipe_sync_rx"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "uuid_is_null(pcb->utun_kpipe_uuid) == !enabled"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "utun_disable_channel"
        prototype = ""
        caller = "utun_ctl_setopt"
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.net.ipsec_control"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ipsec_register_nexus"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ipsec_register_control - ctl_register failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec_register_control - proto_register_plumber(PF_INET, IFNET_FAMILY_IPSEC) failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec_register_control - proto_register_plumber(PF_INET6, IFNET_FAMILY_IPSEC) failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ipsec_register_control"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 1
        anchors {
            new {
                string = "ipsec_inject_inbound_packet"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ipsec_inject_inbound_packet"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "ipsec%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ipsecid%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s%d use_netif %d kpipe_count %d slot_size %u ring_size %u kpipe_tx_ring_size %u kpipe_rx_ring_size %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!ipsec_flag_isset(pcb, IPSEC_FLAGS_KPIPE_ALLOCATED)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ipsec_ncd"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ipsec_nexus_ifattach"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ipsec_flowswitch_attach - ifnet_detach failed: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ipsec_ctl_connect: creating interface %s (id %s)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec_ctl_connect - kpipe requires netif: failed %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s failed to enable channels\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec_ctl_connect - ipsec_nexus_ifattach failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec_ctl_connect - ipsec_flowswitch_attach failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec_ctl_connect - ifnet_allocate failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec_ctl_connect - ifnet_attach failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s failed to register kernel pipe nexus\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s pbufbool create failed, error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s enabling wmm mode\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec_flowswitch_attach - flowswitch is NULL\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec_flowswitch_attach - unable to find flowswitch nexus\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ipsec_ctl_connect"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pcb->ipsec_kpipe_count != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_ipsec_nexus_pre_disconnect"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipsec_data_move_drain"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pcb->ipsec_pcb_drainers > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ipsec_wait_data_move_drain"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipsec_kpipe_ring_init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pcb->ipsec_kpipe_rxring[ring_idx] == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pcb->ipsec_kpipe_txring[ring_idx] == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s cannot find channel %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ipsec_kpipe_ring_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipsec_kpipe_sync_tx"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ipsec_kpipe_sync_tx"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ring_idx <= pcb->ipsec_kpipe_count"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "interface != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dph != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s ring %s index %d no room in rx_ring\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s ring %s index %d bad netif_txring 1\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s ring %s index %d bad netif_txring 2\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec_kpipe_sync_rx %s: failed to allocate packet\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec_kpipe_sync_rx %s: packet length %zu"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "ipsec_kpipe_sync_rx %s: failed to encrypt packet"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "ipsec_kpipe_sync_rx: ifnet_enable_output returned error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec encrypt kpipe pkt: source buffer shorter than ip header, %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "ipsec4 interface kpipe output error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "ipsec6 interface kpipe output error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "received unknown packet version: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "ipsec_kpipe_sync_rx"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pcb->ipsec_netif_rxring[0] == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pcb->ipsec_netif_txring[ring_idx] == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ipsec_netif_ring_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "!found"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ipsec_netif_ring_fini"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipsec_netif_sync_tx"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ring_idx < IPSEC_IF_MAX_RING_COUNT"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ipsec_netif_sync_tx %s - failed policy check\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec_netif_sync_tx %s - ipsec_output error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "ipsec_netif_sync_tx %s - mbuf_copyback(%zu) error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec_netif_sync_tx %s - mbuf_gethdr error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec_netif_sync_tx %s - 0 length packet\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec_netif_sync_tx %s: no encrypted packet to send\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ipsec_netif_sync_tx"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipsec_netif_sync_rx"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fragment_chain != fragment_chain->m_nextpkt"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "netif_ph != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kpipe_buf != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "netif_buf != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ipsec_netif_sync_rx %s: legacy decrypted packet length cannot hold IP %zu < %zu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "ipsec_netif_sync_rx %s: legacy unknown ip version %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "ipsec_netif_sync_rx %s: failed to fragment IPv4 packet of length %zu (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "ipsec_netif_sync_rx %s: failed to fragment IPv6 packet of length %zu < %zu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "ipsec_netif_sync_rx %s: failed to fragment IPv6 packet of length %zu (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "ipsec_netif_sync_rx %s: uknown legacy decrypted packet length %zu > %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "ipsec_transform_kpipe_pkt_to_netif_pkt %s: kpipe buffer length %u > pcb ipsec slot size %u"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "ipsec_transform_kpipe_pkt_to_netif_pkt %s - bad ip version %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "ipsec_transform_kpipe_pkt_to_netif_pkt %s - netif buffer length %u too short\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "ipsec_transform_kpipe_pkt_to_netif_pkt %s: wake packet flag is set\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "ipsec_netif_sync_rx"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "ipsec_netif_tx_doorbell"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ipsec_netif_tx_doorbell"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "(flags & KERN_NEXUS_TXDOORBELLF_ASYNC_REFILL) == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s ring %s tx refill failed %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s ring %s index %d bad netif_txring 3\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec_netif_tx_doorbell: ifnet_disable_output returned error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ipsec_netif_tx_doorbell_one"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipsec_nexus_detach"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ipsec_nexus_detach"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ipsec_ctl_disconnect: detaching interface %s (id %s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "ipsec_ctl_disconnect - ifnet_detach failed: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "dc->count >= 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dc->count <= IPSEC_IF_MAX_RING_COUNT"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!uuid_is_null(pcb->ipsec_kpipe_uuid[i])"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pcb->ipsec_kpipe_pp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!pcb->ipsec_kpipe_pp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ipsec_ctl_disconnect - ifnet_detach failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ipsec_ctl_disconnect"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "!result"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dc->pp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ipsec_free_channels"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: IPSEC_OPT_SLOT_SIZE %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: IPSEC_OPT_NETIF_RING_SIZE %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: IPSEC_OPT_TX_FSW_RING_SIZE %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: IPSEC_OPT_KPIPE_TX_RING_SIZE %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: IPSEC_OPT_KPIPE_RX_RING_SIZE %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s IPSEC_OPT_SET_DELEGATE_INTERFACE %s to %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s IPSEC_OPT_OUTPUT_TRAFFIC_CLASS %s svc %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s IPSEC_OPT_OUTPUT_DSCP_MAPPING %s DSCP %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ipsec_ctl_setopt"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Only platform-signed binaries can open NECP sessions"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Process does not hold necessary entitlement to open NECP session"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "necp_create_session"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Created NECP session, control unit %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_session_open"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.xnu.net.necp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "necp-data-trace"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "necp_init"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 1
        anchors {
            new {
                string = "euuid"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "RESULT - Loopback PASS <NO MATCH>"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "RESULT - DROP <NO CLIENT / MULTICAST>"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "necp_application_find_policy_match_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "RESULT - Loopback PASS"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "RESULT - Inactive Agent DROP"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "socket unscoped for PASS result"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "FLOW DIVERT <ROUTE RULE>"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "socket unscoped for <NO MATCH>"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "RESULT - DROP <MISSING CLIENT>"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: DATA-TRACE: Socket Policy - INP UPDATE - RESULT - CACHED <MATCHED>: %p (BoundInterface %d Proto %d) Policy %d Result %d Parameter %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Marking socket in state %d as defunct\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: DATA-TRACE: Socket Policy: <so %llx> (BoundInterface %d Proto %d) Policy %d Skip %d Result %d Parameter %d Filter %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_socket_find_policy_match"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "necp_mark_packet_from_socket"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "START - MARK PACKET"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "RESULT - MARK PACKET"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "necp_mark_packet_from_socket"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "necp_policy_apply_all"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Applied NECP policies"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "necp_policy_delete"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Removed NECP policy"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NECP Application Policies:\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NECP Socket Policies:\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "necp_kernel_ip_output_policies_dump_all"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NECP IP Output Policies:\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: \tApp Bucket: %d\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s:  ID Bucket: %d\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: \t%3d. Policy ID: %5d\tProcess: %10.10s\tOrder: %04d.%04d.%d\tMask: %llx\tResult: %s\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "necp_policy_apply_all"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Error applying socket kernel policy"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "necp_get_new_string_id"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to find a free route rule id.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Allocate route rule ID failed.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "necp_kernel_socket_policy_add"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to find a free socket kernel policy ID.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Added kernel policy: socket, id=%d, mask=%llx\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_policy_apply"
        prototype = ""
        caller = "necp_policy_apply_all"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Failed to find a free service UUID.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Allocate uuid ID failed.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "necp_get_new_uuid_id"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Failed to find a free aggregate route rule id.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "necp_create_aggregate_route_rule"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Failed to find a free IP kernel policy ID.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "necp_kernel_ip_output_policy_add"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Added kernel policy: ip output, id=%d, mask=%llx\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_kernel_ip_output_policy_add"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Pass (%X)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Skip (%u)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Drop (%X)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SocketDivert (%d)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SocketFilter (%d)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IPTunnel (%s%d)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IPFilter"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SocketScoped (%s%d)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ScopedDirect"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "AllowUnentitled"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "RouteRules (Only %s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "RouteRules (%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!Cell "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!WiFi "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!Wired "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!Exp "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!Constrained "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!Companion "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!VPN "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "RouteRules (QoSMarking %s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "RouteRules (Unknown)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "UseNetAgent (%s)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NetAgentScoped (%s)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "RemoveNetAgent (%s)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Unknown %d (%d)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "necp_get_result_description"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "necp_delete_session"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Deleted NECP session"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "necp_session_op_close"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Failed to validate policy result"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Route rules size overflowed, too large"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to get policy route rules"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to validate policy route rule"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to validate route rule; contained multiple default route rules"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Conditions size overflowed, too large"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to get policy conditions"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to validate policy condition"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to validate conditions; contained default and non-default conditions"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to validate conditions; did not contain application condition"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to validate conditions; kernel pid (0) condition allows only Pass/Skip result"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: necp_session_add_policy invalid input (%zu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_session_add_policy invalid output buffer (%zu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_session_add_policy tlv copyin error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_session_add_policy failed to add policy (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_session_add_policy policy_id copyout error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Failed to get policy order: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Failed to find policy result TLV: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Failed to get policy result length: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Policy result length too large: %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Failed to allocate a policy result buffer (size %d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Failed to get policy result: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Route rules length too large: %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Failed to allocate a policy route rules array (size %d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Conditions length too large: %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Failed to allocate a policy conditions array (size %d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_session_add_policy"
        prototype = ""
        caller = "necp_session_action"
    }
    new {
        args = 1
        anchors {
            new {
                string = "necp_get_tlv_at_offset buffer is NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "necp_get_tlv_at_offset tlv_value is NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: necp_get_tlv_at_offset buffer_length is too small for TLV (%u < %lu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_get_tlv_at_offset buffer_length is too small for TLV of length %u (%u < %lu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_get_tlv_at_offset out_buffer_length is too small for TLV value (%u < %u)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_get_tlv_at_offset"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "necp_policy_result_is_valid"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Policy result type %d, valid %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_policy_result_is_valid"
        prototype = ""
        caller = "necp_session_add_policy"
    }
    new {
        args = 0
        anchors {
            new {
                string = "necp_policy_route_rule_is_valid"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Policy route rule type %d, valid %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_policy_route_rule_is_valid"
        prototype = ""
        caller = "necp_session_add_policy"
    }
    new {
        args = 0
        anchors {
            new {
                string = "necp_policy_condition_is_valid"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Policy condition type %d, valid %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_policy_condition_is_valid"
        prototype = ""
        caller = "necp_session_add_policy"
    }
    new {
        args = 0
        anchors {
            new {
                string = "necp_policy_create"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Created NECP policy, order %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_policy_create"
        prototype = ""
        caller = "necp_session_add_policy"
    }
    new {
        args = 0
        anchors {
            new {
                string = "necp_session_dump_all"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Session does not hold the necessary entitlement to get Network Extension Policy information"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Gathering policies"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: necp_session_dump_all invalid output buffer (%zu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Failed to allocate tlv_buffer_pointers (%lu bytes)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Failed to allocate tlv_buffer_lengths (%lu bytes)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Policy: process: %s, result: %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: Failed to allocate tlv_buffer (%u bytes)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: Failed to allocate cond_buffer (%u bytes)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: out_buffer_length too small (%lu < %lu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Failed to allocate result_buffer (%lu bytes)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Failed to copy out result_buffer (%lu bytes)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_session_dump_all"
        prototype = ""
        caller = "necp_session_action"
    }
    new {
        args = 0
        anchors {
            new {
                string = "necp_get_new_domain_filter_id"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to find a free filter ID.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "necp_create_domain_filter"
        prototype = ""
        caller = "necp_session_add_domain_filter"
    }
    new {
        args = 1
        anchors {
            new {
                string = "com.apple.configd"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.private.necp.drop_all_bypass"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "necp_check_drop_all_bypass_result"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "com.apple.developer.networking.multicast"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "necp_check_restricted_multicast_drop"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Dropping unentitled multicast (SDK 0x%x, min 0x%x)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_check_restricted_multicast_drop"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "RESULT - DROP - (session order > drop-all order)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SKIP (cleared saved skip)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Scope"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NECP_KERNEL_CONDITION_APP_ID"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NECP_KERNEL_CONDITION_SIGNING_IDENTIFIER"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "<n/a>"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NECP_KERNEL_CONDITION_REAL_APP_ID"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NECP_KERNEL_CONDITION_PLATFORM_BINARY"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NECP_KERNEL_CONDITION_EXACT_DOMAIN"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NECP_KERNEL_CONDITION_DOMAIN"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NECP_KERNEL_CONDITION_URL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NECP_KERNEL_CONDITION_ACCOUNT_ID"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NECP_KERNEL_CONDITION_PID"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NECP_KERNEL_CONDITION_UID"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NECP_KERNEL_CONDITION_REAL_UID"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NECP_KERNEL_CONDITION_TRAFFIC_CLASS"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NECP_KERNEL_CONDITION_AGENT_TYPE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NECP_KERNEL_CONDITION_CLIENT_FLAGS"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NECP_KERNEL_CONDITION_LOCAL_EMPTY"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NECP_KERNEL_CONDITION_REMOTE_EMPTY"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NECP_KERNEL_CONDITION_IS_LOOPBACK"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NECP_KERNEL_CONDITION_DELEGATE_IS_PLATFORM_BINARY"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: DATA-TRACE: Socket Policy <so %llx>: (Application %d Real Application %d BoundInterface %d Proto %d) Filter %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: DATA-TRACE: Socket Policy <so %llx>: (Application %d Real Application %d BoundInterface %d Proto %d) Route Rule %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: DATA-TRACE: Socket Policy <so %llx>: (Application %d Real Application %d BoundInterface %d Proto %d) %s Netagent %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: DATA-TRACE: Socket Policy <so %llx>: (Application %d Real Application %d BoundInterface %d Proto %d) Remove Netagent %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: DATA-TRACE: Socket Policy <so %llx>: (Application %d Real Application %d BoundInterface %d Proto %d) flow divert %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: DATA-TRACE: Socket Policy <so %llx>: MATCHED SKIP POLICY (Application %d Real Application %d BoundInterface %d Proto %d) set skip_policy_id %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "necp_socket_find_policy_match_with_info_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "necp_socket_verify_netagents"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: DATA-TRACE: Socket Policy: <so %llx> Triggering inactive agent (%d), error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_socket_verify_netagents"
        prototype = ""
        caller = ""
    }
    new {
        args = 6
        anchors {
            new {
                string = "necp_route_is_allowed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Route Allowed: no route or interface, Rule %d Allowed %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_route_is_allowed"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "START - RESULT - CACHED DROP"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "START - RESULT - CACHED"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "RESULT - CACHED <DROP>"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "RESULT - loopback"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "RESULT - AGENT INACTIVE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "RESULT - DROP - NO MATCH"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "RESULT - DROP - MULTICAST"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: DATA-TRACE: Socket Policy - Send/Recv - RESULT - CACHED <MATCHED>: %p (BoundInterface %d Proto %d) Policy %d Skip %d Result %d Parameter %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: DATA-TRACE: Socket Policy - Send/Recv: %p (BoundInterface %d Proto %d) Policy %d Result %d Parameter %d Allowed %d <filter_control_unit %d flow_divert_aggregate_unit %d>\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_socket_is_allowed_to_send_recv_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "necp_client_assert_bb_radio_manager"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Couldn\\'t find client"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "BB radio manager agent not found"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "netagent_client_message failed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "necp_client_assert_bb_radio_manager"
        prototype = ""
        caller = "mptcp_check_subflows_and_add"
    }
    new {
        args = 0
        anchors {
            new {
                string = "necp_update_all_clients_immediately_if_needed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: necp_update_all_clients immediate %s update %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_update_all_clients_immediately_if_needed"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "NULL proc"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NULL fp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Could not find client structure for backgrounded client"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Not a client fd, ignore"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "necp_set_client_as_background"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Client does not hold necessary entitlement to observe other NECP clients"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "necp_open"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "necp_set_socket_attributes"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: NECP_SOCKET_ATTRIBUTE_LOG: NECP ATTRIBUTES SOCKET - domain <%s> owner <%s> context <%s> tracker domain <%s> account <%s>\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Set on socket: Domain %s, Domain owner %s, Domain context %s, Tracker domain %s, Account %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_set_socket_attributes"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "necp_client_remove_assertion"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Netagent uuid not previously asserted"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "necp_client_remove_assertion"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Multiple resolver tags are not supported"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Resolver tag invalid client ID"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Resolver tag hostname does not match"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Resolver tag address type does not match"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Resolver tag port does not match"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Resolver tag address does not match"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to validate resolve answer"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "necp_client_trace_parsed_parameters"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Resolver tag length too short: %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Resolver tag unknown sign type: %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: NECP_CLIENT_PARAMS_LOG <pid %d %s>: Parsing param - type %d length %d value <%llu (%llX)> %s\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: NECP_CLIENT_PARAMS_LOG <pid %d %s>: Parsing param - type %d length %d\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: NECP_CLIENT_PARAMS_LOG <pid %d %s>: Parsed params - valid_fields %X flags %X delegated_upid %llu local_addr %s remote_addr %s required_interface_index %u required_interface_type %d local_address_preference %d ip_protocol %d transport_protocol %d ethertype %d effective_pid %d effective_uuid %s uid %d persona_id %d traffic_class %d\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: NECP_CLIENT_PARAMS_LOG <pid %d %s>: Parsed params - tracker flags <known-tracker %X> <non-app-initiated %X> <silent %X> <app-approved %X>\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: NECP_CLIENT_PARAMS_LOG <pid %d %s>: Parsed prohibited_interfaces[%d] <%s>\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_client_parse_parameters"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "need_defunct == TRUE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "necp_fd_defunct"
        prototype = ""
        caller = "networking_defunct_callout"
    }
    new {
        args = 0
        anchors {
            new {
                string = "nai->nai_use_count == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "necp_arena_info_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "necp_process_defunct_list"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "necp_process_defunct_list"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nai->nai_use_count >= 1"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nai->nai_flags & NAIF_ATTACHED"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "necp_stats_arenas_destroy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "necp_destroy_client"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "necp_destroy_client"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "necp_destroy_client_flow_registration"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: necp_client_remove close nexus error (%d) MESSAGE TYPE %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "necp_destroy_client_flow_registration"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "No channel for kqfilter"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: bad filter request %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necpop_kqfilter"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "NECP client observers with push enabled may not add their own clients"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "necp_client_add, no necp_client_inherit_from_parent as can't find parent on fd_data"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "necp_client_add, child does not have a demux pattern"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "necp_client_add, parent ID is null"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "necp_client_add, multiple parent flows not supported"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "necp_client_add, parent/child ip protocol mismatch"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "necp_client_add, local/remote address family mismatch"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "necp_client_add, parent/child address family mismatch"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "necp_client_add, parent/child local address mismatch"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "necp_client_add, parent/child remote address mismatch"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "necp_client_add, parent/child local port mismatch"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "necp_client_add, parent/child remote port mismatch"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: necp_client_add parameters copyin error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: NECP_CLIENT_LOG <pid %d %s>: Adding client\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_add client_id copyout error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s(%d) does not hold the necessary entitlement to delegate network traffic for other processes by upid\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s(%d) does not hold the necessary entitlement to set attributed bundle identifier\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s(%d) does not hold the necessary entitlement to open a custom nexus client\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s(%d) does not hold the necessary entitlement for custom protocol APIs\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_add listener invalid address family (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_add netns_reserve_ephemeral error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_add netns_reserve error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_add, flow demux pattern not supported for %d protocol\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_add, flow demux pattern not supported for %d family\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_client_add"
        prototype = ""
        caller = "necp_client_action"
    }
    new {
        args = 0
        anchors {
            new {
                string = "necp_client_update_local_port_parameters"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "necp_client_update_local_port_parameters"
        prototype = ""
        caller = "necp_client_add"
    }
    new {
        args = 0
        anchors {
            new {
                string = "parameters != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "necp_client_copy_parameters_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "necp_find_conn_netstat_data"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "necp_find_conn_netstat_data"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "necp_client_claim cannot claim from flow UUID"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: necp_client_claim copyin client_id error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: NECP_CLIENT_LOG <pid %d %s>: Claiming client\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_client_claim"
        prototype = ""
        caller = "necp_client_action"
    }
    new {
        args = 0
        anchors {
            new {
                string = "necp_client_remove ntstat shutdown finds nstat_context NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: necp_client_remove copyin client_id error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: NECP_CLIENT_LOG <pid %d %s>: Removing client\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_remove invalid client_id (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_client_remove"
        prototype = ""
        caller = "necp_client_action"
    }
    new {
        args = 0
        anchors {
            new {
                string = "necp_client_check_tcp_heuristics"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: necp_client_parse_parameters error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_client_check_tcp_heuristics"
        prototype = ""
        caller = "necp_client_fillout_flow_tlvs"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Client does not hold necessary entitlement to list other NECP clients"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: necp_client_list buffer copyout error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_list client count copyout error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_client_list"
        prototype = ""
        caller = "necp_client_action"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Requested nexus not found"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: necp_client_add_flow invalid client_id (length %zu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_add_flow invalid buffer (length %zu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_add_flow copyin client_id error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_add_flow process not found for pid %d error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: NECP CLIENT FLOW TRACE <pid %d %s> <flow %s>: adding flow\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: NECP CLIENT FLOW TRACE <pid %d %s> <flow %s>: Initializing stats\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_add_flow copyout add_request error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Add flow error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_client_add_flow"
        prototype = ""
        caller = "necp_client_action"
    }
    new {
        args = 0
        anchors {
            new {
                string = "stats-%u.%s.%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!(nai->nai_flags & NAIF_ATTACHED)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: failed to create stats arena for pid %d\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: failed to map stats arena for pid %d\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_arena_initialize"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "fd_data->stats_arena_active != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fd_data->stats_arena_active->nai_arena != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!(fd_data->stats_arena_active->nai_flags & (NAIF_REDIRECT | NAIF_DEFUNCT))"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "necp_stats_initialize"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "necp_find_netstat_initial_properties"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: NECP CLIENT FLOW TRACE <pid %d %s> <flow %s>: Initialized stats <error %d>\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_stats_initialize"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "necp_find_netstat_data"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "necp_find_netstat_data"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "necp_client_remove_flow"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: necp_client_remove_flow invalid client_id (length %zu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_remove_flow copyin client_id error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: NECP CLIENT FLOW TRACE <pid %d %s> <flow %s>: removing flow\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Remove flow error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_client_remove_flow"
        prototype = ""
        caller = "necp_client_action"
    }
    new {
        args = 0
        anchors {
            new {
                string = "necp_client_agent_action invalid parameters"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Invalid TLV value"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: necp_client_agent_action copyin client_id error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_agent_action invalid buffer size (>%u)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_agent_action parameters copyin error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_client_agent_action"
        prototype = ""
        caller = "necp_client_action"
    }
    new {
        args = 0
        anchors {
            new {
                string = "necp_client_copy_interface bad input"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: necp_client_copy_interface copyin interface_index error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_copy_interface bad interface_index (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_copy_interface copyout error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_client_copy_interface"
        prototype = ""
        caller = "necp_client_action"
    }
    new {
        args = 0
        anchors {
            new {
                string = "necp_client_get_interface_address bad input"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "necp_client_get_interface_address no matching interface found"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "necp_client_get_interface_address route lookup failed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: necp_client_get_interface_address copyin interface_index error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_get_interface_address bad interface_index (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_get_interface_address copyin address error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_get_interface_address invalid address family (%u)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_get_interface_address invalid address length (%u)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_get_interface_address local address selection failed (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_get_interface_address local address too long for buffer (%u)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_get_interface_address copyout error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_client_get_interface_address"
        prototype = ""
        caller = "necp_client_action"
    }
    new {
        args = 0
        anchors {
            new {
                string = "sysctl.%s.%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: failed to create arena for pid %d\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: failed to map sysctl arena for pid %d\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_client_map_sysctls"
        prototype = ""
        caller = "necp_client_action"
    }
    new {
        args = 0
        anchors {
            new {
                string = "necp_client_copy_route_statistics bad input"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: necp_client_copy_route_statistics copyin client_id error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_copy_route_statistics copyout error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_client_copy_route_statistics"
        prototype = ""
        caller = "necp_client_action"
    }
    new {
        args = 0
        anchors {
            new {
                string = "NECP fd is not observer, cannot copy client update"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Client id invalid, cannot copy client update"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Buffer invalid, cannot copy client update"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fd_data->update_count > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Copy client update copyout client id error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Buffer size cannot hold update (%zu < %zu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Copy client update copyout error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_client_copy_client_update"
        prototype = ""
        caller = "necp_client_action"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Process does not hold the necessary entitlement to sign resolver answers"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: necp_client_sign allocate signable %zu failed\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_sign copyin signable error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_sign unknown signable type (%u)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_sign unexpected tag size %zu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_sign copyout error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_client_sign"
        prototype = ""
        caller = "necp_client_action"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Process does not hold the necessary entitlement to directly validate resolver answers"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: necp_client_validate allocate struct %zu failed\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_validate copyin error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_client_validate"
        prototype = ""
        caller = "necp_client_action"
    }
    new {
        args = 0
        anchors {
            new {
                string = "necp_client_get_signed_client_id bad input"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: necp_client_get_signed_client_id copyin request_type error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_get_signed_client_id bad request_type (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_get_signed_client_id unexpected tag size %zu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_get_signed_client_id copyout error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_client_get_signed_client_id"
        prototype = ""
        caller = "necp_client_action"
    }
    new {
        args = 0
        anchors {
            new {
                string = "necp_client_set_signed_client_id client lacks the necessary entitlement"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "necp_client_set_signed_client_id bad input"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: necp_client_set_signed_client_id copyin request_type error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_set_signed_client_id bad request_type (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_set_signed_client_id copyin request error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_set_signed_client_id signature validation failed (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_client_set_signed_client_id"
        prototype = ""
        caller = "necp_client_action"
    }
    new {
        args = 3
        anchors {
            new {
                string = "Failed to get socket attribute"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Failed to allocate a socket attribute buffer (size %zu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_set_socket_attribute"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "necp_update_all_clients_callout"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: necp_update_all_clients_callout running for coalesced %u updates\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_update_all_clients_callout"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Cannot register agent on NULL session"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Cannot register NULL agent"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netagent_register"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "netagent_unregister"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Cannot unregister NULL session"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "FlowSwitch"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fsw_netagent_register"
        prototype = ""
        caller = "fsw_host_setup"
    }
    new {
        args = 0
        anchors {
            new {
                string = "netagent_post_updated_interfaces"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Interface event with no associated agent"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netagent_post_updated_interfaces"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "netagent_ioctl"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Client does not hold the necessary entitlement to get netagent information"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netagent_ioctl"
        prototype = ""
        caller = "ifioctl"
    }
    new {
        args = 0
        anchors {
            new {
                string = "netagent_get_flags"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Flags requested for invalid netagent"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netagent_get_flags"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "netagent_set_flags"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Attempt to set flags for invalid netagent"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netagent_set_flags"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "netagent_get_generation"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Generation requested for invalid netagent"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netagent_get_generation"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Type requested for invalid netagent"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Invalid arguments for netagent_get_agent_domain_and_type %p %p\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "netagent_get_agent_domain_and_type"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Requested netagent for kernel trigger could not be found"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Requested netagent for kernel trigger is not kernel activated"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Requested netagent for kernel trigger is already active"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netagent_kernel_trigger"
        prototype = ""
        caller = "necp_socket_verify_netagents"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Requested netagent for nexus instance is not a nexus provider"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Requested netagent for nexus instance is not active"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Requested netagent for group operation is not a group provider"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Requested netagent for group operation is not active"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "assigned_results == NULL || *assigned_results == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "assigned_results_length == NULL || *assigned_results_length == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to allocate client for trigger"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "netagent_send_error_message"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "netagent_send_group_message"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "netagent_send_client_message"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Client netagent message type (%d) is invalid\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Triggered network agent %s, error = %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Failed to send client group message %d on control unit %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "netagent_client_message_with_params"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "netagent_use"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "netagent_assert: Requested netagent UUID is not registered"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netagent_use"
        prototype = ""
        caller = "necp_client_agent_use"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Network agent for request UUID could not be found"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Network agent does not have any tokens"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netagent_acquire_token"
        prototype = ""
        caller = "necp_client_acquire_agent_token"
    }
    new {
        args = 0
        anchors {
            new {
                string = "uap == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Requested netagent UUID is empty"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Requested netagent UUID is not registered"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Requested netagent UUID is not eligible for triggering"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Requested netagent UUID is already active"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Incorrect length (got %zu, expected %lu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: copyin error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "netagent_trigger"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Got a NULL session"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NETAGENT_MESSAGE_TYPE_GET no longer supported"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NETAGENT_MESSAGE_TYPE_ASSERT no longer supported"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NETAGENT_MESSAGE_TYPE_UNASSERT no longer supported"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Got a bad packet, length (%lu) < sizeof header (%lu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: mbuf_copydata failed for the header: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Received unknown message type %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "netagent_ctl_send"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "netagent_send_success_response"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netagent_send_success_response"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "netagent_send_error_response"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netagent_send_error_response"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Request for registration"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Request for update"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Request for unregistration"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Request for assigning nexus"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Request for assigning group members"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Request to set use count"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Request to add a token"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Request to flush tokens"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Request to set token low water mark"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Request to reset client error"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Group assign message is too short"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Agent assigned group members to client"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "No token received"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Session cannot add more tokens"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "netagent_handle_flush_tokens_setopt"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "netagent_handle_reset_client_error_setopt"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Update message size (%zu > %u) too large\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Failed to allocate group assign message (%lu bytes)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Client group assignment failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Payload length is invalid (%lu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Token length is invalid (%lu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "netagent_ctl_setopt"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Request to get use count"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Request to get token count"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Request to get token low water mark"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netagent_ctl_getopt"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "netagent_unregister_session_wrapper"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Unregistered agent"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netagent_unregister_session_wrapper"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Invalid argument: agent_changed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Basic agent parameters do not match, cannot update"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Updated agent (no changes)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Updated agent"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netagent_handle_update_inner"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "netagent_send_trigger"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Failed to send trigger message on control unit %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "netagent_send_trigger"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "netagent_send_tokens_needed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Failed to send client tokens needed message on control unit %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "netagent_send_tokens_needed"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: unit (%d) exceeds max (%d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "if_pflog.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: ifnet_allocate failed - %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: ifnet_attach failed - %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pflog_clone_create"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pflogoutput"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pflogoutput"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pflogdemux"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pflogdemux"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s synthesized  %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "nat464_synthesize_ipv6"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nat464_synthesize_ipv6"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "prefix_len < sizeof(prefix)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s desynthesized to %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "nat464_synthesize_ipv4"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nat464_synthesize_ipv4"
        prototype = ""
        caller = "dlil_input_packet_list_common"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s translated to IPv4 (inner) ip_len: %#x ip_p: %d ip_sum: %#x ip_src: %s ip_dst: %s \n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s translated to IPv6 (inner) ip6_plen: %#x ip6_nxt: %d ip6_src: %s ip6_dst: %s \n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nat464_translate_icmp_ip"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s translated to IPv4 ip_len: %#x ip_p: %d ip_sum: %#x ip_src: %s ip_dst: %s \n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "nat464_translate_64"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nat464_translate_64"
        prototype = ""
        caller = "dlil_input_packet_list_common"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s translated to IPv6 ip6_plen: %#x  ip6_nxt: %d ip6_src: %s ip6_dst: %s \n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "nat464_translate_46"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nat464_translate_46"
        prototype = ""
        caller = "dlil_clat46"
    }
    new {
        args = 1
        anchors {
            new {
                string = "af == PF_INET || af == PF_INET6"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IN_ARE_ADDR_EQUAL(&odst->natv4addr, &iph2->ip_src)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s translated to ICMPV6 type: %d code: %d checksum: %#x \n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s translated to ICMP type: %d code: %d checksum: %#x \n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "FALSE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nat464_translate_proto"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "in6_clat46_event_enqueue_nwk_wq_entry"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IN6_CLAT46_EVENT_V4_FLOW"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IN6_CLAT46_EVENT_V6_ADDR_CONFFAIL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "UNKNOWN_IN6_CLAT46_EVHDLR_CODE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: eventhandler enqueuing event of type=in6_clat46_event event_code=%s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "in6_clat46_event_enqueue_nwk_wq_entry"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "pf_find_state_all @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pf_find_state_all"
        prototype = ""
        caller = "pfioctl_ioc_natlook"
    }
    new {
        args = 0
        anchors {
            new {
                string = "pf: src_tree insert failed: "
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pf_insert_src_node"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "s->state_key != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "tree_lan_ext"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "tree_ext_gwy"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pf: state insert failed: id: %016llx creatorid: %08x"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "pf_status.states != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pf_insert_state"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pf_purge"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pf_purge_thread_fn"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "state->timeout != PFTM_UNLINKED"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "state->timeout < PFTM_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pf_state_expires"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "s->src_node->conn > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "s->src_node->states > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "s->nat_src_node->states > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pf_src_tree_remove_state"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "cur->timeout == PFTM_UNLINKED"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "cur->rule.ptr->states > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "cur->nat_rule.ptr->states > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "cur->anchor.ptr->states > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pf_status.states > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pf_free_state"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "GRE%u "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ICMP "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ICMPV6 "
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = " %u:%u"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pf_print_state"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pf_step_into_anchor: stack overflow\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pf_step_into_anchor"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "psk->app_state == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pf_alloc_state_key"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pf: pool %s hard limit reached (%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pool_get"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(tag == NULL) || (pftag->pftag_flags & PF_TAG_REASSEMBLED)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pf_find_fragment_tag"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pf: state insert failed: %s %s "
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "ICMP4"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PROTO=%u"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = " lan: "
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = " gwy: "
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = " ext_lan: "
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pf_stateins_err"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pf_purge_cont"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pf_purge_thread_cont"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "[%08x]"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pf_print_sk_host"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "invalid address type: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pf_addr_wrap_neq"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pf_send_tcp: not AF_INET or AF_INET6! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pf_send_tcp"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "pf_test: pf_get_mtag_pbuf returned NULL\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pf_test: kif == NULL, if_name %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "pf: dropping packet with ip options [hlen=%u]\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pf_test"
        prototype = ""
        caller = "pf_test_mbuf"
    }
    new {
        args = 2
        anchors {
            new {
                string = "pf: state reuse "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pf: loose state match: "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = " seq=%u (%u) ack=%u len=%u ackskew=%d pkts=%llu:%llu dir=%s,%s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pf: BAD state: "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "\n   seq=%u (%u) ack=%u len=%u ackskew=%d sws=%u dws=%u pkts=%llu:%llu dir=%s,%s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pf: State failure on: %c %c %c %c | %c %c\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pf_test_state_tcp"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "pf_find_state @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pf_find_state"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(*state)->src_node->conn != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pf_src_connlimit: blocking address "
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = ", %u states killed"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pf_src_connlimit"
        prototype = ""
        caller = ""
    }
    new {
        args = 5
        anchors {
            new {
                string = "!NETNS_TOKEN_VALID(&nstoken)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "s->rule.ptr->states != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "s->anchor.ptr->states != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "s->nat_rule.ptr->states != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "s->src_node->states != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "s->nat_src_node->states != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pf_normalize_tcp_stateful failed on first pkt"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "pf_tag_packet failed"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pf_test_rule"
        prototype = ""
        caller = ""
    }
    new {
        args = 7
        anchors {
            new {
                string = "pf: NAT proxy port allocation (%u-%u) failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pf_get_translation_aux"
        prototype = ""
        caller = "pf_test_rule"
    }
    new {
        args = 2
        anchors {
            new {
                string = "pf_map_addr: src tracking maps "
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "pf_map_addr: selected address "
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pf_map_addr"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "gs->rule.ptr->states != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "gs->anchor.ptr->states != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "gs->nat_rule.ptr->states != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pf_pptp_handler: bad directional!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pf_pptp_handler: failed to spoof call id\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "gs->src_node->states != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "gs->nat_src_node->states != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pf_pptp_handler: error inserting GREv1 state.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pf_pptp_handler"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pf_calc_mss: not AF_INET or AF_INET6! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pf_calc_mss"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "pf: IKE message too small.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "pf: IKE initiator cookie = 0.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pf_test_state_udp"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "pf: ICMP error message too short (ip)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "pf: ICMP error message too short (ip6)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pf: ICMPv6 short opt\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "pf: ICMP error message too short (tcp)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pf: BAD ICMP %d:%d "
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = " state: "
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = " seq=%u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "pf: ICMP error message too short (udp)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pf: ICMP error, embedded IKE message too small.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "pf: ICMP error message too short i(icmp)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pf: ICMP error message too short (icmp6)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pf_test_state_icmp"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pf_route: invalid parameters @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "pf_route: packet length < sizeof (struct ip)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "pf_route: TAILQ_EMPTY(&r->rpool.list)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pf_route"
        prototype = ""
        caller = "pf_test"
    }
    new {
        args = 0
        anchors {
            new {
                string = "pf_test6: pf_get_mtag_pbuf returned NULL\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pf_test6: kif == NULL, if_name %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "pf: IPv6 short fragment header\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pf: IPv6 short opt\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "pf: dropping packet with dangerous v6addr headers\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pf_test6"
        prototype = ""
        caller = "pf_test_mbuf_0"
    }
    new {
        args = 0
        anchors {
            new {
                string = "pf_route6: m0->m_len < sizeof (struct ip6_hdr)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "pf_route6: TAILQ_EMPTY(&r->rpool.list)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "pf_route6:dropped refragmented packet\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pf_route6"
        prototype = ""
        caller = "pf_test6"
    }
    new {
        args = 0
        anchors {
            new {
                string = "pfiaddrpl"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pfi_kif_get for pfi_all failed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pfi_initialize"
        prototype = ""
        caller = "pfinit"
    }
    new {
        args = 0
        anchors {
            new {
                string = "pfi_kif_unref: rules refcount <= 0\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pfi_kif_unref: state refcount <= 0\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pfi_kif_unref with unknown type @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pfi_kif_unref"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pfi_kif_get failed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pfi_attach_ifnet"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = ":network"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = ":broadcast"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = ":peer"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pfi_dynaddr_setup"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "pfi_dynaddr_update @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "pfi_table_update: cannot set %d new addresses into table %s: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pfi_kif_update"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "pfi_address_add: address buffer full (%d/%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pfi_address_add: no memory to grow buffer (%d/%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pfi_address_add"
        prototype = ""
        caller = "pfi_kif_update"
    }
    new {
        args = 0
        anchors {
            new {
                string = "pfrulepl"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pfsrctrpl"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pfstatepl"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pfstatekeypl"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pfappstatepl"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pfpooladdrpl"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: unable to start purge thread!"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: failed to allocate major number!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pfosfpen"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pfosfp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pfinit"
        prototype = ""
        caller = "dlil_init"
    }
    new {
        args = 4
        anchors {
            new {
                string = "*mppn == *mp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pf_af_hook"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pfdevcnt > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pfclose"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pf: unable to generate token\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "pf: enabled refcount decremented\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "pf: token mismatch\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "cmd == DIOCOSFPGET"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: rule not found! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "pf_delete_rule_by_ticket"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: parent rule of anchor not found! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "pf_deleterule_anchor_step_out"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pfioctl"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pf_is_enabled == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pf: started\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pf_start"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "generate_token"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: NR_TOKENS_LIMIT reached"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "generate_token"
        prototype = ""
        caller = "pfioctl"
    }
    new {
        args = 0
        anchors {
            new {
                string = "pf_is_enabled"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pf: stopped\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pf_stop"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pf : remove failure\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "remove_token"
        prototype = ""
        caller = "pfioctl"
    }
    new {
        args = 0
        anchors {
            new {
                string = "pfioctl_ioc_tokens"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: size overflows"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "pfioctl_ioc_tokens"
        prototype = ""
        caller = "pfioctl"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: rcount value broken! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "pf_delete_rule_from_ruleset"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pf_delete_rule_from_ruleset"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "pf_default_rule.states != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pfioctl_ioc_state"
        prototype = ""
        caller = "pfioctl"
    }
    new {
        args = 0
        anchors {
            new {
                string = "pffrent"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pffrag"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pffrcache"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pffrcent"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pfstscr"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pf_normalize_init"
        prototype = ""
        caller = "pfinit"
    }
    new {
        args = 0
        anchors {
            new {
                string = "BUFFER_FRAGMENTS(frag)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pf_purge_expired_fragments"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "expiring IPv4 %d(0x%llx) from queue.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "expiring IPv6 %d(0x%llx) from queue.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!BUFFER_FRAGMENTS(frag)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "expiring IPv4 %d(0x%llx) from cache.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "expiring IPv6 %d(0x%llx) from cache.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "TAILQ_EMPTY(&pf_cachequeue) || TAILQ_LAST(&pf_cachequeue, pf_cachequeue) != frag"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pf_purge_expired_fragments"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pf_norm.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pkt too short"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "refragment error %d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pf_refragment6"
        prototype = ""
        caller = "pf_test6"
    }
    new {
        args = 1
        anchors {
            new {
                string = "IP_DF\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "mff and %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "max packet %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "reass IPv4 frag %d @ %d-%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "dropping bad IPv4 fragment\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pf_normalize_ip"
        prototype = ""
        caller = "pf_test"
    }
    new {
        args = 1
        anchors {
            new {
                string = "reass IPv6 frag %d @ %d-%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "dropping bad IPv6 fragment\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pf_normalize_ip6"
        prototype = ""
        caller = "pf_test6"
    }
    new {
        args = 0
        anchors {
            new {
                string = "src->scrub == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pf_normalize_tcp_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "src->scrub || dst->scrub"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "multiple TS??"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "src idled out of PAWS\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "dst idled out of PAWS\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Timestamp failed %c%c%c%c\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = " tsval: %u  tsecr: %u  +ticks: %u  idle: %lus %ums\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = " src->tsval: %u  tsecr: %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = " dst->tsval: %u  tsecr: %u  tsval0: %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Did not receive expected RFC1323 timestamp\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Broken RFC1323 stack did not timestamp data packet. Disabled PAWS security.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pf_normalize_tcp_stateful"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "LIST_EMPTY(&frag->fr_cache) || LIST_FIRST(&frag->fr_cache)->fr_off > frcache->fr_end"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pf_free_fragment"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "complete: 0x%llx(%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pf_reassemble"
        prototype = ""
        caller = "pf_normalize_ip"
    }
    new {
        args = 0
        anchors {
            new {
                string = "pf_flush_fragments"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "trying to free > %d frents\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "trying to free > %d cache entries\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pf_flush_fragments"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "fragcache[%d]: new %d-%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "fragcache[%d]: dead (%d-%d) %d-%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "fragcache[%d]: adjacent (%d-%d) %d-%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "fragcache[%d]: chop %d (%d-%d) %d-%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "(int)m->m_len == ntohs(h->ip_len) - precut"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fragcache[%d]: gap %d (%d-%d) %d-%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "fragcache[%d]: adjacent %d-%d (%d-%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "fragcache[%d]: chop %d %d-%d (%d-%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "(int)m->m_len == ntohs(h->ip_len) - aftercut"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fragcache[%d]: gap %d %d-%d (%d-%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "fragcache[%d]: done 0-%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "fragcache[%d]: dropping overall fragment\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pf_fragcache"
        prototype = ""
        caller = "pf_normalize_ip"
    }
    new {
        args = 0
        anchors {
            new {
                string = "0x%llx IPv6 frag plen %u off %u fr_ip6f_hlen %u fr_max %u m_len %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "frep at %d, next %d, max %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "drop: atomic fragment\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "complete: 0x%llx ip6_plen %d m_pkthdr.len %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pf_reassemble6"
        prototype = ""
        caller = "pf_normalize_ip6"
    }
    new {
        args = 1
        anchors {
            new {
                string = "0x%llx plen %u off %u fr_max %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "frag6cache[%d]: new %d-%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "frag6cache[%u]: dead (%d-%d) %d-%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "frag6cache[%u]: adjacent (%d-%d) %d-%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "frag6cache[%u]: chop %d (%d-%d) %d-%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "(int)m->m_len == ntohs(h->ip6_plen) - precut"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "frag6cache[%u]: gap %d (%d-%d) %d-%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "frag6cache[%u]: adjacent %d-%d (%d-%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "frag6cache[%u]: chop %d %d-%d (%d-%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "(int)m->m_len == ntohs(h->ip6_plen) - aftercut"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "frag6cache[%u]: gap %d %d-%d (%d-%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "frag6cache[%u]: done 0-%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "frag6cache[%u]: dropping overall fragment\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pf_frag6cache"
        prototype = ""
        caller = "pf_normalize_ip6"
    }
    new {
        args = 0
        anchors {
            new {
                string = "fingerprinted %s:%d  %d:%d:%d:%d:%llx (%d) (TS=%s,M=%s%d,W=%s%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pf_osfp_fingerprint_hdr"
        prototype = ""
        caller = "pf_osfp_fingerprint"
    }
    new {
        args = 0
        anchors {
            new {
                string = "osfp no match against %x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "osfp matched %s %s %s  %x==%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "fingerprint 0x%x didn't match\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pf_osfp_match"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "adding osfp %s %s %s = %s%d:%d:%d:%s%d:0x%llx %d (TS=%s,M=%s%d,W=%s%d) %x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pf_osfp_add"
        prototype = ""
        caller = "pfioctl"
    }
    new {
        args = 0
        anchors {
            new {
                string = "nm->pm_buffer != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nm->pm_buffer_len != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nm->pm_len != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nm->pm_len <= nm->pm_buffer_len"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nm->pm_offset < nm->pm_len"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pbuf_sync"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pbuf_sync"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: packet too big for cluster (%u)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "pbuf_to_mbuf"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pbuf_to_mbuf"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pbuf_clone_to_mbuf"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pbuf_clone_to_mbuf"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "pbuf_ensure_writable"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pbuf_ensure_writable"
        prototype = ""
        caller = "pf_lazy_makewritable"
    }
    new {
        args = 2
        anchors {
            new {
                string = "(u_int)off <= pbuf->pb_packet_len"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pbuf->pb_mbuf != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nm->pm_offset + (nm->pm_len + delta_len) <= nm->pm_buffer_len"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(nm->pm_len + nm->pm_offset) <= nm->pm_buffer_len"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pbuf_csum_flags_get: bad pb_type: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pbuf_resize_segment"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pbuf_contig_segment"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pbuf_contig_segment"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "(size_t)len <= src_buflen"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pbuf_copy_back"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pbuf_copy_back"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "(size_t)len <= dst_buflen"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pbuf_copy_data"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pbuf_copy_data"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pbuf_inet_cksum"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pbuf_inet_cksum"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pbuf_inet6_cksum"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pbuf_inet6_cksum"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pf_find_or_create_ruleset: RB_INSERT1 '%s' '%s' collides with '%s' '%s'\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "pf_find_or_create_ruleset: RB_INSERT2 '%s' '%s' collides with '%s' '%s'\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pf_find_or_create_ruleset"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pf_anchor_setup: .. beyond root\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "pf_anchor_setup: ruleset\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pf_anchor_setup"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pf_anchor_copyout: '%s' '%s'\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pf_anchor_copyout"
        prototype = ""
        caller = "pfioctl"
    }
    new {
        args = 1
        anchors {
            new {
                string = "pf_anchor_remove: broken refcount\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pf_rm_rule"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pfrktable"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pfrkentry"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pfrkentry2"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pfr_initialize"
        prototype = ""
        caller = "pfinit"
    }
    new {
        args = 0
        anchors {
            new {
                string = "pfr_clr_addrs: corruption detected (%d).\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pfr_clr_addrs"
        prototype = ""
        caller = "pfioctl"
    }
    new {
        args = 0
        anchors {
            new {
                string = "pfr_get_addrs: corruption detected (%d).\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pfr_get_addrs"
        prototype = ""
        caller = "pfioctl"
    }
    new {
        args = 0
        anchors {
            new {
                string = "pfr_get_astats: corruption detected (%d).\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pfr_get_astats"
        prototype = ""
        caller = "pfioctl"
    }
    new {
        args = 0
        anchors {
            new {
                string = "pfr_get_tables: corruption detected (%d).\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pfr_get_tables"
        prototype = ""
        caller = "pfioctl"
    }
    new {
        args = 0
        anchors {
            new {
                string = "pfr_get_tstats: corruption detected (%d).\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pfr_get_tstats"
        prototype = ""
        caller = "pfioctl"
    }
    new {
        args = 0
        anchors {
            new {
                string = "pfr_update_stats: assertion failed.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pfr_update_stats"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pfr_unroute_kentry: delete failed.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pfr_unroute_kentry"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ke != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/AppleInternal/Library/BuildRoots/d3a62b52-2ef5-11ef-9ecd-e2437461156c/Library/Caches/com.apple.xbs/Sources/xnu/bsd/net/pf_table.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pfr_walktree"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "iptap_init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "iptap.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.network.advisory"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pthread kernel extension not loaded (function table is NULL). @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Copyright (c) 1982, 1986, 1989, 1991, 1993\n\tThe Regents of the University of California. All rights reserved.\n\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "bsd_init: We have a problem, current task is not kernel task\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "bsd_init: failed to mount network root, error %d, %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "We are hanging here...\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "cannot mount root, errno = %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bsd_init: cannot find root vnode: %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "rootvp not authenticated after mounting @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "trying to find and mount BaseSystem dmg as root volume\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "bsdmgpath"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "System/Volumes/macOS"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bsd_autoconf: calling kminit\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "/usr/standalone/firmware/"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "arm64eBaseSystem.rooted.dmg"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "arm64eBaseSystem.dmg"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/BaseSystem.rooted.dmg"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/BaseSystem.dmg"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "-bsdmgroot"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "-nobsdmgroot"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.kauth.process"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.kauth.generic"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.kauth.fileop"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "bsd_init"
        prototype = ""
        caller = "kernel_bootstrap_thread"
    }
    new {
        args = 0
        anchors {
            new {
                string = "iptap_tap_callback"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "iptap_total_tap_count >= 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/AppleInternal/Library/BuildRoots/d3a62b52-2ef5-11ef-9ecd-e2437461156c/Library/Caches/com.apple.xbs/Sources/xnu/bsd/net/iptap.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "iptap_tap_callback"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "iptap_ipf_register"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: ipf_addv4 for %s0 failed - %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: ipf_addv6 for %s0 failed - %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "iptap_clone_create"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "iptap_ipf_input"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "iptap_ipf_input"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "iptap_ipf_output"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "iptap_ipf_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "iptap_ipf_unregister"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: ipf_remove (ipv4) for %s0 failed - %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: ipf_remove (ipv6) for %s0 failed - %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "iptap_detach"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pktap_inited == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pktap_init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pktap.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pktap_init"
        prototype = ""
        caller = "dlil_init"
    }
    new {
        args = 1
        anchors {
            new {
                string = "pktap_clone_destroy"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pktap_clone_destroy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pktap_tap_callback"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pktap_tap_callback"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "pktap_if_output"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pktap_if_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pktap_demux"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pktap_demux"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pktap_add_proto"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pktap_add_proto"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pktap_del_proto"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pktap_del_proto"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: PKTP_CMD_FILTER_GET ifd_len %llu too small - error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: PKTP_CMD_FILTER_GET copyout - error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pktap_getdrvspec"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: PKTP_CMD_FILTER_SET bad ifd_len %llu - error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: copyin - error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "pktap_setdrvspec"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pktap_detach"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pktap_detach"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pktap_bpf_tap"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d unknown if_type %u for %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "pktap_bpf_tap"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pktap_output"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pktap_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 6
        anchors {
            new {
                string = "pktap_input_packet"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d IN %s proto %u pid %d epid %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "pktap_input_packet"
        prototype = ""
        caller = ""
    }
    new {
        args = 6
        anchors {
            new {
                string = "pktap_output_packet"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d OUT %s proto %u pid %d epid %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "pktap_output_packet"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "bpf_pkt->bpfp_header_length >= sizeof(struct pktap_header)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "extra_src_size <= sizeof(union pktap_header_extra)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pktap_v2_hdr->pth_length + extra_src_size <= sizeof(struct pktap_buffer_v2_hdr_extra)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pktap_v2_hdr->pth_length + extra_src_size <= bpf_pkt->bpfp_header_length"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "convert_to_pktap_header_to_v2"
        prototype = ""
        caller = "bpf_tap_imp"
    }
    new {
        args = 0
        anchors {
            new {
                string = "droptap_inited == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/AppleInternal/Library/BuildRoots/d3a62b52-2ef5-11ef-9ecd-e2437461156c/Library/Caches/com.apple.xbs/Sources/xnu/bsd/net/droptap.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "droptap_init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "droptap.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "droptap_init"
        prototype = ""
        caller = "dlil_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: ifnet_allocate_extended failed, error: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: ifnet_attach failed, error: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "droptap_clone_create"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "lr->lr_reqcnt >= 1"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "lr->lr_reqcnt != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "lr->lr_reqcnt == 1"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: lr=%p wraparound refcnt @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "iflr_addref"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ifnet_llreach_alloc"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: lr=%p negative reqcnt @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: Attempt to detach an unattached llreach lr=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ifnet_llreach_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ifp != NULL && iflri != NULL && (af == AF_INET || af == AF_INET6)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ifnet_llreach_get_defrouter"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: lr=%p negative refcnt @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "iflr_remref"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: attached lr=%p is being freed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: lr %p cannot be freed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: non-zero refcount lr=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: non-zero reqcnt lr=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "iflr_remref"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: couldn\\'t create flow event advisory thread @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "flowadv_init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "flowadv.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "flowadv_init"
        prototype = ""
        caller = "dlil_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "!fadv_active"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "flowadv_cont"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "flowadv_thread_cont"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.content-filter"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d ctl_register failed: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: Can't create statistics report thread"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "cfil_stats_report_thread != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_init"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 2
        anchors {
            new {
                string = "%s:%d CFIL: TCP (dir %d) - debug flow with port %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d already attached\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d cfil_info_attach_unit(%u) failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d so %llx filter_control_unit %u sockID %llu <%llx>\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "cfil_sock_attach"
        prototype = ""
        caller = ""
    }
    new {
        args = 4
        anchors {
            new {
                string = "%s:%d CFIL: TCP(OUT) <so %llx> - filter state changed - dropped pre-existing flow\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d CFIL: TCP(OUT) <so %llx> - filter state changed - dropped pre-existing flow (old state 0x%x new state 0x%x)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "so %p SB_LOCK not set @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s sb_cfil_thread %p not NULL @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "cfil_sock_data_out"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d CFIL: TCP(IN) <so %llx> - filter state changed - dropped pre-existing flow\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d CFIL: TCP(IN) <so %llx> - filter state changed - dropped pre-existing flow (old state 0x%x new state 0x%x)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_sock_data_in"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "cfil_sock_is_closed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_sock_is_closed"
        prototype = ""
        caller = "soclose_locked"
    }
    new {
        args = 1
        anchors {
            new {
                string = "cfil_sock_notify_shutdown"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_sock_notify_shutdown"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "CFIL: SKIP CLOSE WAIT"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "cfil_sock_close_wait"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d so %llx waiting\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d so %llx timed out %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "cfil_sock_close_wait"
        prototype = ""
        caller = "soclose_locked"
    }
    new {
        args = 1
        anchors {
            new {
                string = "cfil_sock_buf_update"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_sock_buf_update"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d CFIL: FILTER SHOW: Filter <unit %d, entry count %d> flags <%lx>:\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d CFIL: FILTER SHOW:-DETACHING\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d CFIL: FILTER SHOW:-ACTIVE\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d CFIL: FILTER SHOW:-FLOW CONTROLLED\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "CFIL: FILTER SHOW:-DETACHED"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "CFIL: FILTER SHOW:-ATTACHED"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d CFIL: FILTER SHOW:Filter - total entries shown: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "cfil_filter_show"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d CFIL: INFO SHOW:count %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "cfil_info_show"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "CFIL: INFO SHOW"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d CFIL: INFO FLAG - DROP\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d CFIL: INFO FLAG - CLOSE_WAIT\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d CFIL: INFO FLAG - SOCK_CLOSED\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d CFIL: INFO FLAG - RETRY_INJECT_IN\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d CFIL: INFO FLAG - RETRY_INJECT_OUT\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d CFIL: INFO FLAG - SHUT_WR\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d CFIL: INFO FLAG - SHUT_RD\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d CFIL: INFO SHOW:total cfil_info shown: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "cfil_info_show"
        prototype = ""
        caller = "sysctl_cfil_sock_list"
    }
    new {
        args = 1
        anchors {
            new {
                string = "CFIL: flow ACTION timeout expired"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_info_action_timed_out"
        prototype = ""
        caller = "cfil_dgram_gc_needed"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d CFIL: queue threshold exceeded:mbuf max < count: %d bytes: %d > tail drop count < OUT: %d IN: %d > \n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "cfil_info_buffer_threshold_exceeded"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "CFIL: queue threshold exceeded"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "CFIL: UDP PER-FLOW GC NEEDED"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_dgram_gc_needed"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d bad sc_unit %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d sc_unit %u in use\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "cfil_ctl_connect"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "CFIL: UDP PER-FLOW GC PERFORM"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_dgram_gc_perform"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d CFIL <%s>: <so %llx> - use count %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "cfil_sock_udp_unlink_flow"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_sock_udp_unlink_flow"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "CFIL: DGRAM DETACH ENTRY"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_dgram_detach_entry"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d CFIL: DGRAM DETACH DB <so %llx>\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "cfil_dgram_detach_db"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_dgram_detach_db"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "CFIL: FILTER DISCONNECTED"
                segment = "__TEXT"
                section = "__cstring"
                caller = "cfil_info_log"
            }
            new {
                string = "cfc->cf_sock_count == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_ctl_disconnect"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d no socket for sock_id %llx gencnt %llx flowhash %x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "cfil_socket_from_sock_id"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_socket_from_sock_id"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "%s:%d so %llx %s dropped\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d pass %llu peek %llu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d pass_offset %llu <= cfe_pass_offset %llu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "CFIL: OUT - PASSED ALL - DETACH"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "CFIL: IN - PASSED ALL - DETACH"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "CFIL: WAKING"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d CFIL: <so %llx, sockID %llu <%llx>> outgoing %d cfi_pending_first %llu cfi_pending_last %llu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d CFIL: <so %llx, sockID %llu <%llx>>, cfi_pass_offset %llu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "cfil_action_data_pass"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d CFIL: SERVICE CTL-Q: pass_offset %llu peeked %llu peek_offset %llu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "copylen <= datalen"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d CFIL: SERVICE CTL-Q PASSING: %llx first %llu peeked %llu pass %llu peek %lludatalen %u copylen %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d %llx first %llu peeked %llu pass %llu peek %lludatalen %u copylen %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "copyoffset < datalen"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d CFIL: SERVICE CTL-Q PEEKING: %llx current %llu peeked %llu pass %llu peek %llu datalen %u copylen %u copyoffset %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d %llx first %llu peeked %llu pass %llu peek %lludatalen %u copylen %u copyoffset %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d cfil_service_pending_queue() error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d first %llu peeked %llu pass %llu peek %llu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d m_copym_mode() failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d mbuf_allocpacket() failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d CFIL: Failed to get audit token for <sockID %llu <%llx>> \n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "CFIL: SENDING DATA UP"
                segment = "__TEXT"
                section = "__cstring"
                caller = "cfil_info_log"
            }
            new {
                string = "%s:%d CFIL: VERDICT ACTION: so %llx sockID %llu <%llx> outgoing %d: mbuf %llx copyoffset %u copylen %u (%s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "IP HDR"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NO IP HDR"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d CFIL: Failed to sign data msg <sockID %llu <%llx>>\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "cfil_dispatch_data_event_sign"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d CFIL: SERVICE PENDING-Q: data %llx datalen %u passlen %llu curlen %llu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "cfil_data_service_ctl_q"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "cfil_data_length(m, NULL, NULL) == len"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_queue_remove"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "cfq->q_start <= cfq->q_end"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(MBUFQ_EMPTY(&cfq->q_mq) && cfq->q_start == cfq->q_end) || (!MBUFQ_EMPTY(&cfq->q_mq) && cfq->q_start != cfq->q_end)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - mq %p is free at %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s - %p unsupported type %u @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s - %p m_length() %u != chainsize %lu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s - %p queuesize %llu != offsetdiffs %llu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "cfil_queue_verify"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d CFIL Preserve Connections - %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "cfil_update_behavior_flags"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_update_behavior_flags"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "%s:%d null mbuf\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d too short %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d bad version %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d bad type %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d bad length %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d bad len: %u for op %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d bad op %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d bad sock_id %llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d so %llx <id %llu> not attached\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "CFIL: RECEIVED MSG FROM FILTER"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d so %llx no filter\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d so %llx attached not sent for %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "CFIL: RECEIVED CFM_OP_DATA_UPDATE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d CFIL: VERDICT RECEIVED: <so %llx sockID %llu <%llx>> <IN peek:%llu pass:%llu, OUT peek:%llu pass:%llu>\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "CFIL: RECEIVED CFM_OP_DROP"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d CFIL: VERDICT DROP RECEIVED: <so %llx sockID %llu <%llx>> <IN peek:%llu pass:%llu, OUT peek:%llu pass:%llu>\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_ctl_send"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "CFIL: VERDICT RECEIVED: BLESS"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_action_bless_client"
        prototype = ""
        caller = "cfil_ctl_send"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d CFIL: VERDICT RECEIVED - STATS FLOW INSERTED: <so %llx sockID %llu <%llx>> stats frequency %d msecs\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d CFIL: VERDICT RECEIVED - STATS FLOW DELETED: <so %llx sockID %llu <%llx>> stats frequency reset\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "cfil_info_stats_toggle"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "CFIL: DROP - DETACH"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_action_drop"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d len too small %lu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d len does not match %lu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d data not passed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d CFIL: GET_SOCKET_INFO failed: bad sock_id %llu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d CFIL: GET_SOCKET_INFO failed: so %llx not attached, cannot fetch info\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d CFIL: GET_SOCKET_INFO failed: so %llx NULL so_proto / pr_domain\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "cfil_ctl_getopt"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d CFIL_OPT_NECP_CONTROL_UNIT len too small %lu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d CFIL_OPT_NECP_CONTROL_UNIT already set %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d CFIL_OPT_PRESERVE_CONNECTIONS got %d (kcunit %d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "cfil_ctl_setopt"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "cfil_info_alloc"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_info_alloc"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "cfil_info_attach_unit"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_info_attach_unit"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "cfe_buf->cfe_ctl_q.q_start >= cfe_buf->cfe_pending_q.q_end"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "cfe_buf->cfe_peek_offset >= cfe_buf->cfe_pass_offset"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "cfe_buf->cfe_ctl_q.q_start <= cfe_buf->cfe_peeked"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_entry_buf_verify"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "cfil_info_free"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "CFIL: FREEING CFIL_INFO"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_info_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d so %llx filter_control_unit %u kcunit %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d CFIL: Failed to get effective audit token for <sockID %llu <%llx>> \n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d CFIL: Failed to get real audit token for <sockID %llu <%llx>> \n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "CFIL: SENDING ATTACH UP"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d CFIL: Failed to sign attached msg <sockID %llu <%llx>>\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "cfil_dispatch_attach_event_sign"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_dispatch_attach_event"
        prototype = ""
        caller = ""
    }
    new {
        args = 4
        anchors {
            new {
                string = "%s:%d CFIL: QUEUEING DATA: <so %llx> %s: data %llx len %u flags 0x%x nextpkt %llx - cfi_pending_last %llu cfi_pending_mbcnt %u   cfi_pass_offset %llu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d CFIL: QUEUEING DATA: <so %llx> %s: FAST PATH\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d so %llx outgoing %d datalen %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "cfil_update_entry_offsets"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_data_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d CFIL: IPHDR STRIPPING: <so %llx>: <hlen %d m_len %d>\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "cfil_strip_ip_header"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "hlen <= data_start->m_len"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_strip_ip_header"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d so %llx kcunit %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "CFIL: SENDING CLOSED UP"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d CFIL: Failed to sign closed msg <sockID %llu <%llx>>\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "cfil_dispatch_closed_event_sign"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_dispatch_closed_event"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "cfil_acquire_sockbuf"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sb->sb_cfil_thread == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(sb->sb_flags & SB_LOCK) == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_acquire_sockbuf"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d CFIL: SERVICE INJECT-Q: <so %llx> outgoing %d queue len %llu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d CFIL: SERVICE INJECT-Q: <so %llx> data %llx datalen %u (mbcnt %u)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "CFIL: Error: sosend_reinject() failed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d CFIL: sosend() failed %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d CFIL: SERVICE INJECT-Q: <so %llx> injected %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "CFIL: Marked previoulsy delayed socket as DEAD"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "CFIL: Handled previously delayed socket for TCP time wait"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_service_inject_queue"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s sb_cfil_thread %p not current %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s SB_LOCK not set on %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "cfil_release_sockbuf"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d so %llx disconnect already sent\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d so %llx control queue not empty\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "CFIL: OUT - SENDING DISCONNECT UP"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "CFIL: IN - SENDING DISCONNECT UP"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_dispatch_disconnect_event"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "CFIL: UDP PER-FLOW WAIT FOR FLOW TO FINISH"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "cfil_filters_udp_attached_per_flow"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "CFIL: UDP PER-FLOW WAIT FOR FLOW DONE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "CFIL: UDP PER-FLOW WAIT FOR FLOW TIMED OUT, FORCE DETACH"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_filters_udp_attached_per_flow"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d <%s>: <%s(%d) so %llx cfil %p, entry %p, sockID %llu <%llx> feat_ctxt_id <%llu> lport %d fport %d laddr %s faddr %s hash %X\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "cfil_hash_entry_log"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d <%s>: <%s so %llx cfil %p - flags 0x%x 0x%x, sockID %llu <%llx>> lport %d fport %d laddr %s faddr %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d <%s>: <%s so %llx - flags 0x%x 0x%x> lport %d fport %d laddr %s faddr %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_info_log"
        prototype = ""
        caller = ""
    }
    new {
        args = 6
        anchors {
            new {
                string = "%s:%d CFIL: UDP no active filter\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d CFIL: UDP failed to get control unit\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d CFIL: UDP user space only\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d CFIL: <so %llx> NULL soflow_hash_entry\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d CFIL: <so %llx> NULL soflow_hash_entry db\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "CFIL: Got flow"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "CFIL: UDP DROP"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d CFIL: UDP(%s) <so %llx> - filter state changed - dropped pre-existing flow (old state 0x%x new state 0x%x)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d CFIL: <so %llx> UDP (outgoing %d) - debug flow with port %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d CFIL: <so %llx> UDP so_gencnt %llx entry flowhash %x cfil %p sockID %llu <%llx>\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d CFIL: <so %llx> UDP cfil_info_attach_unit(%u) failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d CFIL: UDP <so %llx> filter_control_unit %u sockID %llu <%llx> attached\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d CFIL: UDP <so %llx> cfil_dispatch_attach_event failed <error %d>\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "cfil_sock_udp_handle_data"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "CFIL: UDP PER-FLOW NOTIFY_SHUTDOWN"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_sock_udp_notify_shutdown_per_flow"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "cfil_sock_udp_shutdown"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_sock_shutdown"
        prototype = ""
        caller = "soshutdownlock"
    }
    new {
        args = 0
        anchors {
            new {
                string = "CFIL: UDP PER-FLOW IS_CLOSED"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_sock_udp_is_closed_per_flow"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "cfil_sock_udp_buf_update_per_flow"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_sock_udp_buf_update_per_flow"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "CFIL_STATS_REPORT"
                segment = "__TEXT"
                section = "__cstring"
                caller = "bsd_setthreadname"
            }
        }
        symbol = "cfil_stats_report_thread_func"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d CFIL: STATS COLLECTION RUNNING\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d CFIL: STATS: no flow\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d CFIL: STATS REPORT - so %llx no filter\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d CFIL: STATS reporting for %d flows\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d CFIL: STATS: no buffer\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d CFIL: STATS REPORT - elapsed time - ts %llu %llu cur ts %llu %llu diff %llu %llu(usecs %llu) @freq %llu usecs sockID %llu <%llx>\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d CFIL: STATS REPORT - in %llu reported %llu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d CFIL: STATS REPORT - out %llu reported %llu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "CFIL: STATS COLLECTED"
                segment = "__TEXT"
                section = "__cstring"
                caller = "cfil_info_log"
            }
            new {
                string = "%s:%d STATS (kcunit %d): msg size %lu - %lu %lu %lu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d ctl_enqueuedata() failed:%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d CFIL: STATS REPORT:send msg to %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "cfil_stats_report"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d Inited client key\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "cfil_crypto_init_client"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_action_set_crypto_key"
        prototype = ""
        caller = "cfil_ctl_send"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d Signed data: datalen %lu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s:%d %s \t%s: %hhX %hhX %hhX %hhX %hhX %hhX %hhX %hhX %hhX %hhX %hhX %hhX %hhX %hhX %hhX %hhX %hhX %hhX %hhX %hhX %hhX %hhX %hhX %hhX %hhX %hhX %hhX %hhX %hhX %hhX %hhX %hhX\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Signature"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d %s NE Filter crypto data:\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "cfil_crypto_print_data"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "flow_id"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sock_id"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "direction"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "remote"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "socketProtocol"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "effective_pid"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "effective_uuid"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "byte_count_in"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "byte_count_out"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cfil_crypto_sign_data"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: couldn\\'t create network work queue thread"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "nwk_wq_init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nwk_wq_init"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "nwk_wq_thread_func"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nwk_wq_thread_func"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nwk_wq_thread_cont"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "TAILQ_EMPTY(&nwk_wq_head)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "TAILQ_FIRST(&temp_nwk_wq_head) != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nwk_wq_thread_cont"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "restricted_port_init: bitmap allocation failed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "restricted_in_port.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "restricted_in_port_init"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.network.restricted.port.control"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%u sysctl net.restricted_port.verbose: %d -> %d)"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "sysctl_restricted_port_verbose"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.network.restricted.port.lights_out_management"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "entitlement restricted port %u for protocol %u via %s cannot be used by kernel"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "entitlement restricted port %u for protocol %u via %s cannot be used by process %s:%u -- IOTaskHasEntitlement(%s) failed"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "entitlement restricted port %u for protocol %u via %s can be used by process %s:%u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "current_task_can_use_restricted_in_port"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.net.rvi_control"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "rvi_start failed: rvi_register_control failure"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "rvi_init"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "rvi_ctl_connect"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: failure to create virtual interface %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: ifnet_allocate for %s%d failed - %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: ifnet_attach for %s%d failed - %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "rvi_ctl_connect"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "rvi_set_bpf_tap"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: ifnet_softc is NULL for ifp %p"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "rvi_set_bpf_tap"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "rvi_ctl_disconnect: received a disconnect notification without a cache entry @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "remote_vif.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "rvi_destroy_if"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: ifnet_detach for %s%d failed - %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "rvi_ctl_disconnect"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "rvi_ctl_send"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "rvi_bpf_tap"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: mbuf_copydata failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s mbuf_pullup failed"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "rvi_ctl_send"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "qlen(q) != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_addq"
        prototype = ""
        caller = "arp_llinfo_addq"
    }
    new {
        args = 0
        anchors {
            new {
                string = "qlen(q) == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_getq"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "n != NULL || (qlen(q) == 1 && m == MBUFQ_FIRST(head))"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "m == MBUFQ_FIRST(head)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "n != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_getq_tail"
        prototype = ""
        caller = "arp_lookup_ip"
    }
    new {
        args = 0
        anchors {
            new {
                string = "c == 0 || !MBUFQ_EMPTY(&freeq)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "c == 0 || !KPKTQ_EMPTY(&freeq)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_flushq_flow"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "ifq->ifcq_sflags == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ifclassq_setup"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "packets != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "MBUF_VALID_SC(sc) || sc == MBUF_SC_UNSPEC"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ifclassq_get_len"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "IFCQ_TBR_IS_ENABLED(ifq)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ifclassq_tbr_dequeue_common"
        prototype = ""
        caller = "ifclassq_dequeue_common_default"
    }
    new {
        args = 0
        anchors {
            new {
                string = "ptype == QP_PACKET"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fq_alloc"
        prototype = ""
        caller = "fq_if_hash_pkt"
    }
    new {
        args = 0
        anchors {
            new {
                string = "!fq->fq_in_dqlist"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fq_empty(fq, ptype)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!(fq->fq_flags & (FQF_NEW_FLOW | FQF_OLD_FLOW | FQF_EMPTY_FLOW))"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fq_destroy"
        prototype = ""
        caller = "fq_if_destroy_flow"
    }
    new {
        args = 0
        anchors {
            new {
                string = "!(*pkt_flags & PKTF_PRIV_GUARDED)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fq->fq_group == fq_grp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fqs->fqs_ptype == pkt->pktsched_ptype"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "STAILQ_NEXT(fq, fq_actlink) == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fq_detect_dequeue_stall"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:num: %d, scidx: %d, flow: 0x%x, iface: %s grp: %hhu"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "fq_addq"
        prototype = ""
        caller = "fq_if_enqueue_classq"
    }
    new {
        args = 0
        anchors {
            new {
                string = "fq->fq_bytes >= plen"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fq_getq_flow_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "pkt->pktsched_pkt_mbuf == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: dequeue num overflow, flow: 0x%x, iface: %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: scidx: %d, %llu, flow: 0x%x, iface: %s, grp: %hhu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "fq_getq_flow"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kern_packet_finalize(ph2) == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pktsched_clone_pkt"
        prototype = ""
        caller = "nlc_enqueue"
    }
    new {
        args = 0
        anchors {
            new {
                string = "cnt == (uint32_t)pcnt"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pktsched_free_pkt"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ifclassq_enable_pacing"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifcq_drr_max"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "buf[i] >= '0' && buf[i] <= '9'"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pktsched_fq_init"
        prototype = ""
        caller = "dlil_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "fq_if_enqueue_classq"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fq_if_enqueue_classq"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "fq_if_setup_ifclassq"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: error from fq_if_create_grp, failed to create a fq group: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "fq_if_setup_ifclassq"
        prototype = ""
        caller = "pktsched_setup"
    }
    new {
        args = 1
        anchors {
            new {
                string = "!fq_empty(fq, fqs->fqs_ptype)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fq->fq_flags & FQF_NEW_FLOW"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fq_if_drop_packet"
        prototype = ""
        caller = "fq_addq"
    }
    new {
        args = 0
        anchors {
            new {
                string = "fq_if_add_fcentry"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: num: %d, scidx: %d, flowsrc: %d, flow: 0x%x, iface: %s, B:%u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "fq_if_add_fcentry"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "fq_if_flow_feedback"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: num: %d, scidx: %d, flowsrc: %d, flow: 0x%x, iface: %s grp: %hhu, B:%u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "fq_if_flow_feedback"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "fqs != NULL && ifq->ifcq_type == PKTSCHEDT_FQ_CODEL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fq_if_teardown_ifclassq"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "i <= flowstat_cnt"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fq_if_getqstats_ifclassq"
        prototype = ""
        caller = "ifclassq_getqstats"
    }
    new {
        args = 0
        anchors {
            new {
                string = "svc == MBUF_SC_UNSPEC"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!TAILQ_EMPTY(grp_list)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pri > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "TAILQ_EMPTY(grp_list)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fq_if_dequeue_classq_multi_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "pktlimit > 0 && bytelimit > 0 && top != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(fq->fq_flags & (FQF_NEW_FLOW | FQF_OLD_FLOW)) == FQF_OLD_FLOW"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "top->cp_mbuf != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fq_if_dequeue"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "fqs->fqs_empty_list_cnt == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "STAILQ_EMPTY(&fqs->fqs_fclist)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "LIST_EMPTY(&fqs->fqs_flows[i])"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fq_if_purge"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "STAILQ_EMPTY(&fq_cl->fcl_new_flows)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "STAILQ_EMPTY(&fq_cl->fcl_old_flows)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fq_if_purge_classq"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "pkt.pktsched_ptype == QP_INVALID"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(fq->fq_flags & (FQF_NEW_FLOW | FQF_OLD_FLOW | FQF_EMPTY_FLOW))"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fq_if_purge_flow"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "req->flow != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "FQ_IF_CLASSQ_IDLE(fq_cl)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fq_if_request_classq"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ifp->if_mtu <= IF_MAXMTU"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifp->if_mtu <= UINT16_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifp->if_tso_v4_mtu <= UINT16_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifp->if_tso_v6_mtu <= UINT16_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fq_if_calc_quantum"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "fq_cl->fcl_quantum == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fq_if_classq_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "NETEM: %-30s ┌ begin %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "NETEM: %-30s | netem no traffic shapping %s on %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "NETEM: %-30s | netem create %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "NETEM: %-30s | netem disable %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "NETEM: %-30s | netem destroy %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "NETEM: %-30s └ ret %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "NETEM: %-30s | error: invalid scheduler model %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "NETEM: %-30s | error: corruption_p %d > %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NETEM: %-30s | error: duplication_p %d > %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NETEM: %-30s | error: duplication needs latency param\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NETEM: %-30s | error: latency %d too big (> 1 sec)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NETEM: %-30s | error: jitter %dms too big (latency %dms)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NETEM: %-30s | error: loss params not all zero when p_gr_gl is zero\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NETEM: %-30s | error: loss recovery %dms too big\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "NETEM: %-30s | error: loss params too big\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NETEM: %-30s | error: reordering %d > %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NETEM: %-30s | error: output interval %dms too big\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s can't create thread"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "NETEM: %-30s | %s set_params success\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "NETEM: %-30s | model %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "NETEM: %-30s | bandwidth %llu bps %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "no limit"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NETEM: %-30s | corruption  %d%%\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "NETEM: %-30s | duplication  %d%%\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "NETEM: %-30s | latency_ms  %d jitter_ms %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "NETEM: %-30s | loss p_gr_gl  %d%%\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "NETEM: %-30s |      p_gr_bl  %d%%\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "NETEM: %-30s |      p_bl_gr  %d%%\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "NETEM: %-30s |      p_bl_br  %d%%\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "NETEM: %-30s |      p_br_bl  %d%%\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "NETEM: %-30s |      recovery_ms  %dms\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "NETEM: %-30s | reordering  %d%% %d ms behind\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "NETEM: %-30s | output ival  %d ms\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "Network link conditioner"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netem_config"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "!(ne->netem_flags & NETEMF_RUNNING)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netem_output_thread_func"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "NETEM: %-30s %s output thread terminated\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "netem_output_thread_cont"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NETEM: %-30s ┌ begin\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "netem_dequeue_internal_locked"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NETEM: %-30s | heap empty\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "NETEM: %-30s | TTS not yet reached: %llu now %llu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "NETEM: %-30s └ end\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "netem_output_thread_cont"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "NETEM: %-30s ┌ begin p %p len %u, now %llu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "NETEM: %-30s | zero-bw blocked\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "NETEM: %-30s | lost\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NETEM: %-30s | dup'ed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "NETEM: %-30s | heap_insert p %p err(%d), freeing pkt\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "NETEM: %-30s | %p enqueued TTS %llu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "NETEM: %-30s └ %p end\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "NETEM: %-30s | corrupted\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "corruption_event"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NETEM: %-30s | reorder %dms behind\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "NETEM: %-30s | total delay %dms\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "nlc_enqueue"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "%s: mbuf %p too short (%d) for IPv4 header @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "inet_cksum"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "inet_cksum"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: off (%d) >= len (%d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "inet_cksum_buffer"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "inet_cksum_buffer"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "igmp_domifattach"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "igmp_domifattach"
        prototype = ""
        caller = "ifnet_attach"
    }
    new {
        args = 1
        anchors {
            new {
                string = "!(igi->igi_debug & IFD_ATTACHED)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "igmp_domifreattach"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: reattached igmp_ifinfo for ifp %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "igmp_domifreattach"
        prototype = ""
        caller = "ifnet_attach"
    }
    new {
        args = 0
        anchors {
            new {
                string = "igmp_domifdetach"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: igmp_ifinfo not found for ifp %p(%s) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "igi_delete"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "igmp_domifdetach"
        prototype = ""
        caller = "ifnet_detach"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: igi=%p negative refcnt @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: attached igi=%p is being freed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: ifp not NULL for igi=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: igi %p cannot be freed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: non-zero refcnt igi=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: freeing igmp_ifinfo for ifp %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "igi_remref"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: called w/mbuf(0x%llx,%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "igmp_input"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "igmp_input"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "igmp_init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "igmp_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "sysctl_igmp_default_version"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: changed igmp_default_version from %d to %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "sysctl_igmp_default_version"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: cancel v3 timers on ifp 0x%llx(%s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "igmp_v3_cancel_link_timers"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "igmp_v3_cancel_link_timers"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "process v2 query %s on ifp 0x%llx(%s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: ignore v2 query on IGIF_LOOPBACK ifp %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "igmp_input_v2_query"
        prototype = ""
        caller = "igmp_input"
    }
    new {
        args = 0
        anchors {
            new {
                string = "igmp_v2_update_group"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "igmp_v2_update_group"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "process v3 %s query on ifp 0x%llx(%s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "igmp_input_v3_group_query"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: ignore v3 query on IGIF_LOOPBACK ifp %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: ignore v3 query in v%d mode on ifp %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: process v3 general query on ifp %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: GS query throttled.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: v3 general query response scheduled in T+%d seconds on ifp %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: schedule response to SG query\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "igmp_input_v3_query"
        prototype = ""
        caller = "igmp_input"
    }
    new {
        args = 0
        anchors {
            new {
                string = "report suppressed for %s on ifp 0x%llx(%s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "process v2 report %s on ifp 0x%llx(%s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "igmp_input_v2_report"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: process v2 report on ifp %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "igmp_input_v2_report"
        prototype = ""
        caller = "igmp_input"
    }
    new {
        args = 1
        anchors {
            new {
                string = "inm->inm_igi->igi_version == IGMP_VERSION_3"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "igmp_v3_suppress_group_record"
        prototype = ""
        caller = "igmp_input_v2_report"
    }
    new {
        args = 0
        anchors {
            new {
                string = "igmp_v1v2_process_querier_timers"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: cancel v2 timer on 0x%llx(%s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "igmp_v3_dispatch_general_query"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "igi == inm->inm_igi"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "igmp_timeout"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "inm->inm_st[1].iss_asm == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: m_adj(m, -ig)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: m_append() failed"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: m_get*() failed"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "igmp_v3_enqueue_group_record"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "igmp_v1v2_queue_report"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: v1 / v2 outbound queue full on %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "igmp_v1v2_queue_report"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "igmp_dispatch_queue"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(m->m_flags & M_PKTHDR)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: igmpreclen is %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: ip_output(0x%llx) = %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: invalid length %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "igmp_dispatch_queue"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "igmp_flush_relq"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "inm->inm_in_nrele == true"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: flushing %llx on relq ifp %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "igmp_flush_relq"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "igmp_initial_join"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "igi->igi_rv > 1"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: T1->T0 for %s / %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: nothing to do \n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "inm->inm_debug & IFD_ATTACHED"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: T1 now MCAST_UNDEFINED for %s/%s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "igmp_change_state"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "cmd == SIOCDIFADDR"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "in_control"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "cmd == SIOCDIFADDR || cmd == SIOCSIFADDR || cmd == SIOCSIFNETMASK || cmd == SIOCSIFDSTADDR"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Another thread is already attempting to delete IPv4 address: %s on interface %s. Go to sleep and check again after the operation is done"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "in_control"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: SIOCDIFADDR ifp=%s ifa_addr=%s ifa_dstaddr=%s (err=%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: error retrieving list of AF_INET addresses for ifp=%s (err=%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "in_purgeaddrs"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "in_domifattach"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in_domifattach"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: failed to add membership to all-hosts multicast address on %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "in_ifinit"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pinm != NULL || error != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in_ifinit"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "attempt to remove wrong ia %p from hash table @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "in_iahash_remove"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "in_ifaddr_free"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in_ifaddr_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: draining ARP entries\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "in_arpdrain"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in_arpdrain"
        prototype = ""
        caller = "ip_drain"
    }
    new {
        args = 5
        anchors {
            new {
                string = "%s: can't allocate llinfo for %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "arp_lookup_ip"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pkt.cp_mbuf == packet"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "arp_lookup_ip"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s duplicate IP address %s sent from address %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "arp: %s on %s sent probe for %s, already on %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "arp: sending conflicting probe to %s on %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "arp: %s is on %s but got reply from %s on %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "arp: %s moved from %s to %s on %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "arp: %s attempts to modify permanent entry for %s on %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s: sending %u held packets\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "arp_ip_handle_input"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "qempty(&llinfo->la_holdq)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ARP reply"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ARP announcement"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s%s for %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "arp_ip_handle_input"
        prototype = ""
        caller = "ether_inet_arp_input"
    }
    new {
        args = 0
        anchors {
            new {
                string = "host is not on local network"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "could not allocate llinfo"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "gateway route is not ours"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: link#%d %s failed: %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "arp_lookup_route"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "arp_lookup_route"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "la->la_llreach != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "has alias(es) and hasn't been used in a while"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "haven't heard from it in a while"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: ARP probe(s) needed for %s; %s [lastused %lld, lastrcvd %lld] secs ago\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "arp_llreach_reachable"
        prototype = ""
        caller = "arp_lookup_ip"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: dropping packet due to maxhold_total\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "_m != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: dropping packet (scidx %u)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s: enqueued packet (scidx %u), qlen now %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "arp_llinfo_addq"
        prototype = ""
        caller = "arp_lookup_ip"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: probe scheduled in T+%llus.%lluu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "arp_sched_probe"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "arp_sched_probe"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: not rescheduling probe\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "arp_probe"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "arp_rtrequest"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "arp_rtrequest"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "rt->rt_llinfo_purge == arp_llinfo_purge && la != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "arp_llinfo_purge"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "arp_llinfo_free"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "in_arp.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "la->la_rt->rt_llinfo == la"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "arp_llinfo_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: timer scheduled in T+%llus.%lluu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "arp_sched_timeout"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "arp_sched_timeout"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: not rescheduling timer\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "arp_timeout"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "inm->inm_st[1].iss_rec == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "inm_clear_recorded"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "imf_purge"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "imf_purge"
        prototype = ""
        caller = "imo_remref"
    }
    new {
        args = 1
        anchors {
            new {
                string = "inm_commit"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "inm_commit"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "inm_purge"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "inm_purge"
        prototype = ""
        caller = "inm_remref"
    }
    new {
        args = 0
        anchors {
            new {
                string = "in_leavegroup"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "inm->inm_ifp == inm->inm_ifma->ifma_ifp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in_leavegroup"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: error copyin IP_ADD_MEMBERSHIP/IP_ADD_SOURCE_MEMBERSHIP %d err=%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "imo->imo_mfilters != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: new join w/o source\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "inp_join_group"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: opt=%d is_final=0\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "inm == imo->imo_membership[idx]"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "inp_leave_group"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: inm=%p negative reqcnt @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: Attempt to detach an unattached record inm=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: inm %p is already in trash list @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "in_multi_detach"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: inm=%p negative/missing refcnt @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "inm_remref"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: attached inm=%p is being freed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: ifma not NULL for inm=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: inm %p cannot be freed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: non-zero refcount inm=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: non-zero reqcnt inm=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "inm_remref"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: --- begin inm 0x%llx ---\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "inm_print"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "igi 0x%llx nsrc %lu sctimer %u scrv %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: --- end inm 0x%llx ---\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "inm_print"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "inm_get_source"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "inm_reap"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "inm_merge"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: in_getmulti() failure\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "ifma->ifma_addr->sa_family == AF_INET"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "inm->inm_ifma == ifma"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "in_hosteq(inm->inm_addr, *group)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in_joingroup"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: Attempt to attach an already attached inm=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: Attempt to reattach a detached inm=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "inm->inm_reqcnt == 1"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in_multi_attach"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: inm %p has no debug structure @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "inm_trace"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "inm_trace"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "imf_rollback"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "imf_rollback"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "imf_reap"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "imf_reap"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: can't find ifp for addr=%s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "inp_set_multicast_if"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "inp_set_multicast_if"
        prototype = ""
        caller = "inp_setmoptions"
    }
    new {
        args = 0
        anchors {
            new {
                string = "!inpcb_initialized"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "unable to alloc the inpcb thread call @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "in_pcbinit"
        prototype = ""
        caller = "socketinit"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: ipi %p already in the list @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "in_pcbinfo_attach"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in_pcbinfo_attach"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "[%u %s:%u %s:%u]"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "inp_snprintf_tuple"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: insufficient space to align inp_stat @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: insufficient space to align inp_cstat @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: insufficient space to align inp_wstat @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: insufficient space to align inp_Wstat @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: insufficient space to align inp_btstat @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "in_pcballoc"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: so %p [%d,%d] usecount %d lockhistory %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: inp %p invalid wantcnt %d, so %p [%d,%d] usecount %d retaincnt %d state 0x%x flags 0x%x lockhistory %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: inp %p invalid wantcnt %d no socket @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: so=%p head still exist @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "in_pcbdispose"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "phd != NULL && inp->inp_lport > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "inp->inp_pcbinfo->ipi_twcount != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!(inp->inp_flags2 & INP2_IN_FCTREE)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in_pcbremlists"
        prototype = ""
        caller = "in_pcbdispose"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: pcb=%p so=%p usecount is negative @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: pcb=%p release with zero count @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: RELEASE pcb=%p so=%p usecount is negative @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: so=%p not a valid state =%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "in_pcb_checkstate"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "inp_route_copyin"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "inp_route_copyin"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "RB_INSERT(inp_fc_tree, &inp_fc_tree, inp) == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "inp_calc_flowhash"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "tmp_inp == inp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "inp_set_fc_state"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pid %d (%s) is unable to receive packets on %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "_inp_restricted_recv %s:%d not allowed on management interface %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "inp_restricted_recv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pid %d (%s) is unable to transmit packets on %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "_inp_restricted_send %s:%d not allowed on management interface %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "inp_restricted_send"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "inpcb_timeout_run >= 0 && inpcb_timeout_run < 2"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "inpcb_timeout"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "proc != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in_pcbladdr"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "NOACCESS"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "inp_update_cellular_policy"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "inp_update_cellular_policy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "WANTED"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "UNWANTED"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "inp_update_necp_want_app_policy"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "inp_update_necp_want_app_policy"
        prototype = ""
        caller = ""
    }
    new {
        args = 4
        anchors {
            new {
                string = "inpcb_get_ports_used"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "inpcb_get_ports_used"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "throttle[%d]: so 0x%llx [%d,%d] %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "SUSPENDED"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "RESUMED"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "inpcb_count_opportunistic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: sosetdefunct() error %d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "shutdown_sockets_on_interface_proc_callout"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "shutdown_sockets_on_interface_proc_callout"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "inetdomain == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: failed to register PF_INET protocol: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "in_dinit"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "in_proto.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in_dinit"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "in_validate"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in_validate"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "in_rtqdrain"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in_rtqdrain"
        prototype = ""
        caller = "ip_drain"
    }
    new {
        args = 0
        anchors {
            new {
                string = "head != inet_rt_table || *head == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in_inithead"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "in_rmx.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in_rtqkill"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "in_deleteroute"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in_deleteroute"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "in_ifadownkill"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in_ifadownkill"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "SO_VALID_TC(optval)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "throttle[%d]: so 0x%llx [%d,%d] opportunistic %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "so_set_traffic_class"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(SOCK_CHECK_DOM(so, PF_INET) || SOCK_CHECK_DOM(so, PF_INET6)) && SOCK_CHECK_TYPE(so, SOCK_STREAM) && SOCK_CHECK_PROTO(so, IPPROTO_TCP)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "throttle[%d]: so 0x%llx [%d,%d] TCP %s send; %s recv\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "set_tcp_stream_priority"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "SO_VALID_TC(sotc)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "MBUF_VALID_SC(msc)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "set_packet_service_class"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "invalid QoS marking type @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "in_tclass.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s qos_allowed %d sotc %u netsvctype %u dscp %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s set msc %u for dscp %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "set_packet_qos"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "netsvctype_dscp_map != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "set_netsvctype_dscp_map"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "UNKNOWN_DUMMYNET_EVENT"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dummynet_event_enqueue_nwk_wq_entry"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "dummynet: -- unknown option %d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "dummynet: no memory for new pipe\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dummynet: ++ ref to pipe %d from fs %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ip_dn_ctl"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "\ndummynet: net.inet.ip.dummynet.red_lookup_depth must be > 0\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "dummynet: sorry, cannot allocate red lookup table\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "set_fs_parms"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "dummynet: heap_init, resize %d failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "heap_insert_0"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "dummynet_io m: 0x%llx pipe: %d dir: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "dummynet: no pipe %d for queue %d, drop pkt\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dummynet: ++ ouch! not eligible but empty scheduler!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "dummynet: OUCH! pipe should have been idle!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "dummynet: waking up pipe %d at %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "dummynet: sorry, cannot allocate queue for new flow\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "\ndummynet: %d q: %2u "
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "dummynet: avg: %u "
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "dummynet: - drop"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "dummynet: - red drop"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "dummynet_io"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "dummynet: ready_event pipe is gone\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ready_event"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "dummynet: warning, extract from empty heap 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "dummynet: heap_extract from middle not supported on this heap!!! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "dummynet: heap_extract, father %d out of bound 0..%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "dummynet: heap_extract @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "heap_extract_0"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "dummynet: pipe %d ready from %s --\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "ready_event_wfq"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "dummynet: bad ready_event_wfq for pipe %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dummynet"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "dummynet_send m: 0x%llx dn_dir: %d dn_flags: 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dummynet: bad switch %d!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dummynet_send"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "dummynet_event"
                segment = "__TEXT"
                section = "__cstring"
                caller = "eventhandler_find_list"
            }
            new {
                string = "eventhandler_invoke(\"dummynet_event\")"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "dummynet_event_callback"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "(u_int)type <= ICMP_MAXTYPE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "code <= UINT8_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "icmp_error"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: redirect dst %s to %s from %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "icmp_input"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "icmp_input"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "icmp_dgram_attach @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ip_icmp.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "icmp_dgram_attach"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: Unable to find [PF_INET,IPPROTO_RAW,SOCK_RAW] @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ip_init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dp == inetdomain && dp->dom_family == PF_INET"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ip_checkinterface"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "inaddr_nhash"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ip_moptions"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ip_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ip_input"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ip_input"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: failed to initialise lo0's address, error=%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "ip_init_delayed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ip_init_delayed"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ip_input_first_pass"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ip_input_process_list"
        prototype = ""
        caller = "ip_proto_input"
    }
    new {
        args = 0
        anchors {
            new {
                string = "attempted source route from %s to %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "ip_dooptions"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ip_fwd_route_copyout"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ip_fwd_route_copyin"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ip_forward"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "sysctl_ip_checkinterface"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: ip_checkinterface is now %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "sysctl_ip_checkinterface"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ip_output: Invalid policy found. %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "ip4_output (ipsec): error code %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: can't update route after IPsec processing\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "interface_mtu != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "src.s_addr != INADDR_ANY"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s->%s ifscope %d->%d ifa_if %s ro_if %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s->%s ifscope %d->%d ifa_if %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s->%s ifscope %d ifa_if %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s->%s ifscope %d ro_if %s != ifa_if %s (cached route cleared)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s->%s ifscope %d ro_if %s (no ifa_if found)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s->%s ifscope %d (neither ro_if/ifa_if found)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "ip_output_list"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "%s: mbuf %p pkt len (%u) < hoff+ip_hdr (%u+%u)\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: mbuf %p pkt too short (%d) for IP header (%u), hoff %u @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: mbuf 0x%llx proto %d IP len %d (%x) [swapped %d (%x)] doesn't match actual packet length; %d is used instead\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: mlen %u - hoff %u > 65535 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "_hlen == sizeof(*ip)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in_finalize_cksum"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: imo %p negative refcnt @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: imo %p cannot be freed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "imo_remref"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: imo %p has no debug structure @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "imo_trace"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "imo_trace"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "/AppleInternal/Library/BuildRoots/d3a62b52-2ef5-11ef-9ecd-e2437461156c/Library/Caches/com.apple.xbs/Sources/xnu/bsd/netinet/raw_ip.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ripcb"
                segment = "__TEXT"
                section = "__cstring"
                caller = "lck_grp_init_flags"
            }
        }
        symbol = "rip_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "%s in_pcbladdr(%p) error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "rip_output"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "rip_output"
        prototype = ""
        caller = "rip_send"
    }
    new {
        args = 1
        anchors {
            new {
                string = "rip_unlock: bad refoucnt so=%p val=%x lrh= %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "rip_unlock"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "rip_attach @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "rip_attach"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "oldest_cache != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "tcp_getcache_with_lock"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s could not allocate cache"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_getcache_with_lock"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "__tcp_heuristic_tfo_middlebox_common"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s disable TFO until %u now %u on %lx\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__tcp_heuristic_tfo_middlebox_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "tcp_heuristic_ecn_aggressive_common"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s disable ECN until %u now %u on %lx\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_heuristic_ecn_aggressive_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "oldest_heur != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "tcp_getheuristic_with_lock"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s could not allocate heuristic"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_getheuristic_with_lock"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "sysctl_cleartfo"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s could not parse int: %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "sysctl_cleartfo"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IPv6 bad tcp checksum"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "src IPv6 address unspecified"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IPv4 bad tcp checksum"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bad tcp offset"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "drop SYN FIN"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Connection attempt to TCP %s:%d from %s:%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Connection attempt to TCP %s:%d from %s:%d flags:0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "Stealth Mode connection attempt to TCP %s:%d from %s:%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "blackhole 1 syn for closed port"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "blackhole 2 closed port"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "blackhole closed port"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "closed port"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "inp_socket NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "inp state WNT_STOPUSING"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "tp is NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "tp state TCPS_CLOSED"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "rfc5961 TH_ACCEPT == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "closing a listening socket"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ignore SYN with RST"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ignore RST"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bad SYN with ACK"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bad SYN"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bad tuple same port"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bad tuple same IPv4 address"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mbuf M_BCAST | M_MCAST"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IN6_IS_ADDR_MULTICAST"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "multicast or broadcast address"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = " listen drop"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = " in_pcbinshash failed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "tcp_input: could not copy policy\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = " cfil_sock_attach failed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "recwin_conn < INT32_MAX && recwin_conn > INT32_MIN"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = " LISTEN in6_pcbconnect failed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = " LISTEN in_pcbconnect failed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "connect incoming"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SYN_RECEIVED bad ACK"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SYN_SENT bad ACK"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SYN_SENT got RST"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SYN_SENT no SYN"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ESTABLISHED rfc5961 challenge ACK"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SYN_RECEIVED bad SEQ"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SS_NOFDREF"
                segment = "__TEXT"
                section = "__cstring"
                caller = "tcp_log_drop_pcb"
            }
            new {
                string = "SOF_MP_SUBFLOW SS_NOFDREF"
                segment = "__TEXT"
                section = "__cstring"
                caller = "tcp_log_drop_pcb"
            }
            new {
                string = "SOF_DEFUNCT"
                segment = "__TEXT"
                section = "__cstring"
                caller = "tcp_log_drop_pcb"
            }
            new {
                string = "SS_CANTRCVMORE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "rfc5961 bad SYN rate limited"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "rfc5961 bad SYN challenge ack"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "LIST_EMPTY(&tp->t_segq)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "rfc5961 rcvacktoomuch"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "rfc5961 bad ACK"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "INPCB_STATE_DEAD"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "17 {curProtocol: 100, prevProtocol: 80, localPort: %hu, remotePort: %hu, tcpSeq: %u, tcpAck: %u, tcpLen: %hu, tcpFlags: 0x%02x, pid: %hu, logSeqn: %hhu}"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "TE_SENDIPECT flag is set but TCP_L4S_ENABLED is not"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_input"
        prototype = ""
        caller = "tcp6_input"
    }
    new {
        args = 1
        anchors {
            new {
                string = "len <= TFO_COOKIE_LEN_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "tcp_tfo_synack"
        prototype = ""
        caller = "tcp_input"
    }
    new {
        args = 0
        anchors {
            new {
                string = "tcp_pulloutofband @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "tcp_input.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "tcp_pulloutofband"
        prototype = ""
        caller = "tcp_input"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: rtt is %d - maxing it at 4 x MSL\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "tcp_xmit_timer"
        prototype = ""
        caller = "tcp_compute_rtt"
    }
    new {
        args = 0
        anchors {
            new {
                string = "tp->sackhint.sack_bytes_acked >= 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "tp->sackhint.sack_bytes_rexmit >= 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "flight_size (%d) can't be negative (snd_nxt:%u snd_max:%u, snd_una:%u, sacked:%u lost:%u retransmitted:%u)"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_flight_size"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "no source address silently ignored"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "recwin_announced < INT32_MAX && recwin_announced > INT32_MIN"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sackoptlen < UINT8_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nsack == 0 || tp->rcv_numsacks >= nsack"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(u_char *)lp - opt <= MAX_TCPOPTLEN"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ECN flags (0x%x) not set correctly @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "tcphdr too big @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "error ENOBUFS silently handled"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "error EMSGSIZE silently handled"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "soft error %d silently handled"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "error %d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "not enough space to add any AccECN option"
                segment = "__TEXT"
                section = "__cstring"
                caller = "tcp_log_message"
            }
            new {
                string = "add empty AccECN option, optlen=%u"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "add single counter for AccECN option, optlen=%u"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "add 2 counters for AccECN option, optlen=%u"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "add all 3 counters for AccECN option, optlen=%u"
                segment = "__TEXT"
                section = "__cstring"
                caller = "tcp_log_message"
            }
            new {
                string = "%s - %lx: snd_nxt is %u and snd_una is %u, cnt %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s - %lx: offset is negative! len %d off %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "tcp_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "flow controlled"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "flow suspended"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "tcp_ip_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "num_sack_blks <= (TCP_MAX_SACK + 1)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "tcp_sack_doack"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: Computed sack hole not the same as cached value\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "tcp_sack_output"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Computed sack_bytes_retransmitted (%d) not the same as cached value (%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "tcp_sack_output"
        prototype = ""
        caller = "tcp_output"
    }
    new {
        args = 1
        anchors {
            new {
                string = "SEQ_GEQ(snd_fack, s->rxmit)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "tcp_sack_detect_reordering"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "tcppcb"
                segment = "__TEXT"
                section = "__cstring"
                caller = "lck_grp_init_flags"
            }
            new {
                string = "WARNING: TCB hash size not a power of 2, scaled from %d to %d.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "tcp_init @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "tcptimerlist"
                segment = "__TEXT"
                section = "__cstring"
                caller = "lck_grp_init_flags"
            }
            new {
                string = "com.apple.xnu.tcp"
                segment = "__TEXT"
                section = "__cstring"
                caller = "os_log_create"
            }
            new {
                string = "MPKL_CREATE_LOGOBJECT failed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "tcp_log"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "tcp_init: set tcp_log_enable_flags to 0x%x"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "(MHLEN - max_linkhdr) >= (sizeof(*ip6) + sizeof(*nth))"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(MHLEN - max_linkhdr) >= (sizeof(*ip) + sizeof(*nth))"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "tcp_respond"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "tcp_lock: so=%p NO PCB! lr=%p lrh= %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "tcp_lock: so=%p so_pcb=%p lr=%p ref=%x lrh= %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "tcp_lock"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "tcp_unlock: so=%p usecount=%x lrh= %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "tcp_unlock: so=%p NO PCB usecount=%x lr=%p lrh= %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "tcp_unlock"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "tcp_getlock: so=%p usecount=%x lrh= %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "tcp_getlock: so=%p NULL so_pcb %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "tcp_getlock"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "tcp_rxtseg_insert"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "removed rxseg list overflow %u:%u "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "tcp_rxtseg_insert"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "tcp_notify_kao_timeout"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: dropped lport %u fport %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_notify_kao_timeout"
        prototype = ""
        caller = "ifnet_notify_tcp_keepalive_offload_timeout"
    }
    new {
        args = 0
        anchors {
            new {
                string = "SLIST_EMPTY(&tp->t_notify_ack)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "tcp_add_notify_ack_marker"
        prototype = ""
        caller = "tcp_ctloutput"
    }
    new {
        args = 2
        anchors {
            new {
                string = "skip ifp no fsw"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "add err %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "tcp_add_fsw_flow"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "err == 0 || err == ENOENT || err == ENXIO"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "tcp_del_fsw_flow"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "del err %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "tcp_del_fsw_flow"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "tp != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "tcp_notify"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "tp->t_pmtud_saved_maxopd > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "tcp_pmtud_revert_segment_size"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "FIN wait timeout drop"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "retransmission timeout drop"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "persist timeout drop"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "keep alive timeout drop"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SACK_ENABLED(tp)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: tcp_output() returned %u with retransmission timer disabled for %u > %u in state %d, reset timer to %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_timers"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "tcp_garbage_collect"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: Still inside %d usecount %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_garbage_collect"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "tp->tentry.index == TCPT_NONE || tp->tentry.mode > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "tcp_run_timerlist"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "kern.skywalk.stats.flow"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kernel_sysctlbyname err %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "kernel_sysctlbyname invalid len %zu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "tcp_fill_info_for_info_tuple"
        prototype = ""
        caller = "tcp_sysctl_info"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: so %p inp %p ifp NULL @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: so %p inp %p ifp %p if_tcp_kao_cnt == 0 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "tcp_clear_keep_alive_offload"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "connect outgoing"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "tcp_usr_connect_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "tcp_connect: inp=0x%llx err=EADDRINUSE\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "tcp_connect"
        prototype = ""
        caller = "tcp_usr_connect_common"
    }
    new {
        args = 2
        anchors {
            new {
                string = "!(so->so_flags & SOF_MP_SUBFLOW) || (so->so_snd.sb_flags & SB_NOCOMPRESS)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "tcp_usr_send"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "tp->t_ccstate->cub_origin_point > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "tcp_cubic_congestion_avd"
        prototype = ""
        caller = "tcp_cubic_ack_rcvd"
    }
    new {
        args = 0
        anchors {
            new {
                string = "is_incr == false"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/AppleInternal/Library/BuildRoots/d3a62b52-2ef5-11ef-9ecd-e2437461156c/Library/Caches/com.apple.xbs/Sources/xnu/bsd/netinet/tcp_ledbat.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "update_cwnd"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "tcp_rack_update_segment_acked"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Spurious inference as either tsecr (%u) doesn't lie between xmit_ts(%u) and now (%u) OR the rtt (%u) is less than base-rtt (%u). end_seq is:%u"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "tcp_rack_update_segment_acked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "outgoing "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "incoming "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "tcp drop %s[%s:%u<->%s:%u] interface: %s (skipped: %lu)\nso_gencnt: %llu t_state: %s process: %s:%u t_state: %s so_error: %d reason: %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_log_drop_pcb"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "outgoing"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "tcp control %s %s%s%s%s[%s:%u<->%s:%u] interface: %s (skipped: %lu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "tcp control %s %s%s%s%s[%s:%u<->%s:%u] interface: %s (skipped: %lu)\nso_gencnt: %llu t_state: %s process: %s:%u SYN in/out: %u/%u "
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_log_th_flags"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.network.tcp_ccdebug"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "failed to register tcp_cc debug control"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "tcp_ccdbg_control_register"
        prototype = ""
        caller = "tcp_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "failed to disconnect tcp_cc debug control"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "tcp_ccdbg_control_disconnect"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "udp_log"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "udppcb"
                segment = "__TEXT"
                section = "__cstring"
                caller = "lck_grp_init_flags"
            }
            new {
                string = "udp_init: set udp_log_enable_flags to 0x%x"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "udp_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: bad so back ptr inp=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "udp_input"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Stealth Mode connection attempt to UDP %s:%d from %s:%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "udp_input"
        prototype = ""
        caller = ""
    }
    new {
        args = 4
        anchors {
            new {
                string = "outif == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "inp->inp_boundifp != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "udp_output"
        prototype = ""
        caller = "udp_send"
    }
    new {
        args = 0
        anchors {
            new {
                string = "udp_abort"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "udp_abort"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s so=%p inp=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "udp_attach"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "udp_attach"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "udp_detach"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "udp_detach"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "udp_unlock"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "udp_unlock"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: so=%p NULL so_pcb lrh= %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "udp_getlock"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "udp_getlock"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s[%d, %s]: defuncting so 0x%llu drop multicast memberships"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "udp_defunct"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "udp_defunct"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ENOBUFS in in_gif_output %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "in_gif_output"
        prototype = ""
        caller = "gif_output"
    }
    new {
        args = 0
        anchors {
            new {
                string = "NULL pointer passed to ip_ecn_egress @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ip_ecn_egress"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "NULL pointer passed to ip6_ecn_ingress @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipsec6_encapsulate"
        prototype = ""
        caller = "ipsec6_output_tunnel_internal"
    }
    new {
        args = 0
        anchors {
            new {
                string = "NULL pointer passed to ip46_ecn_egress @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ip46_ecn_egress"
        prototype = ""
        caller = "esp6_input_extended"
    }
    new {
        args = 1
        anchors {
            new {
                string = "NULL pointer passed to ip64_ecn_ingress @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipsec64_encapsulate"
        prototype = ""
        caller = "ipsec6_output_tunnel_internal"
    }
    new {
        args = 0
        anchors {
            new {
                string = "NULL pointer passed to ip64_ecn_egress @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ip64_ecn_egress"
        prototype = ""
        caller = "esp4_input_extended"
    }
    new {
        args = 0
        anchors {
            new {
                string = "/AppleInternal/Library/BuildRoots/d3a62b52-2ef5-11ef-9ecd-e2437461156c/Library/Caches/com.apple.xbs/Sources/xnu/bsd/netinet/ip_encap.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "m_tag_kalloc_encap"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kipf_ref overflow @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipf_ref"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kipf_ref underflow @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipf_unref"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "g_tcp_protosw != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "g_udp_protosw != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "g_tcp6_protosw != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "g_udp6_protosw != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.flow-divert"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(%u): flow_divert_kctl_init - ctl_register failed: %d\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_init"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "flow divert group %u is disconnecting, but no groups are active (active count = %u) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "flow divert group %u is disconnecting, but groups array is NULL @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "group with unit %d (%p) != unit info (%p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "flow divert group %u is disconnecting, but in-process group list is empty @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "(%u): disconnecting group %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_kctl_disconnect"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "/AppleInternal/Library/BuildRoots/d3a62b52-2ef5-11ef-9ecd-e2437461156c/Library/Caches/com.apple.xbs/Sources/xnu/bsd/netinet/mp_proto.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mp_dinit"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: mppi %p already in the list @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "mp_pcbinfo_attach"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mp_pcb.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mp_pcbinfo_attach"
        prototype = ""
        caller = "mptcp_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "mpsotomppcb(so) == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mp_pcballoc"
        prototype = ""
        caller = "mptcp_usr_attach"
    }
    new {
        args = 1
        anchors {
            new {
                string = "mpp->mpp_state == MPPCB_STATE_DEAD"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mppi->mppi_count != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mptcp_pcbdispose"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mpp->mpp_inside == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mpp->mpp_socket != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mpp->mpp_socket->so_usecount == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: No more MPTCP-flows, but cell icon counter is %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_pcbdispose"
        prototype = ""
        caller = "mptcp_gc"
    }
    new {
        args = 0
        anchors {
            new {
                string = "mbuf invalid: %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "mptcp.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "iter == NULL || iter->m_flags & M_PKTHDR"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mptcp_input"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(mp_tp->mpt_rcvnxt - mb_dsn) <= INT_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mb_datalen >= 0 && mb_datalen <= USHRT_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: dropping dsn %u dlen %u rcvnxt %u rcvwnd %u todrop %lld\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "mptcp_input"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "!(mpte->mpte_mppcb->mpp_flags & MPP_WUPCALL)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mptcp_output"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: Error = %d mpts_flags %#x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mptcp_update_rcv_state_meat"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: Infinite Mapping.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: Bad checksum %x \n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_update_rcv_state_meat"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mpp->mpp_flags & flag"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mptcp_handle_deferred_upcalls"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ifindex != IFSCOPE_NONE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mptcp_session_necp_cb"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "slot_index >= 0 && slot_index < (int)mpte->mpte_itfinfo_size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: action: %u ifindex %u delegated to %u usecount %u mpt_flags %#x state %u v4 %u v6 %u nat64 %u power %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: malloc failed for %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_session_necp_cb"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "real_len >= 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mptcp_validate_csum"
        prototype = ""
        caller = "mptcp_subflow_soreceive"
    }
    new {
        args = 0
        anchors {
            new {
                string = "mpp != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mpp->mpp_pcbe == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mptcp_session_create"
        prototype = ""
        caller = "mp_pcballoc"
    }
    new {
        args = 0
        anchors {
            new {
                string = "handover"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pure-handover"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "j < NAT64_MAX_NUM_PREFIXES"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: %s: cell %u wifi-state %d flags %#x rxt %u first-party %u sb_cc %u ifindex %u this %u rtt %u rttvar %u rto %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s - %lx: target-based: %llu now %llu wifi quality %d cell %u sostat %#x mpts_flags %#x tcp-state %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s - %lx: no NAT64-prefix on itf %s, error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s - %lx: cannot synthesize this addr\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s - %lx: asked irat to bringup cell for uuid %s, err %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: UUID is already null\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_check_subflows_and_add"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mptcp_sched_create_subflows"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mptcp_sched_create_subflows"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "!(mpts->mpts_flags & (MPTSF_CONNECTING | MPTSF_CONNECTED | MPTSF_CONNECT_PENDING))"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: state %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: malloc subflow failed\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_subflow_add"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "mpts->mpts_mpte == mpte"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mpte->mpte_numflows != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mptcp_subflow_del"
        prototype = ""
        caller = "tcp_garbage_collect"
    }
    new {
        args = 2
        anchors {
            new {
                string = "mptcp_subflow_disconnect"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: sosetdefunct failed with %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_subflow_disconnect"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "!(mpte->mpte_mppcb->mpp_flags & MPP_INSIDE_OUTPUT)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!INP_WAIT_FOR_IF_FEEDBACK(sotoinpcb(so))"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(mpts->mpts_flags & MPTSF_MP_CAPABLE) || (mpts->mpts_flags & MPTSF_MP_DEGRADED) || (mpts->mpts_flags & MPTSF_TFO_REQD)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mptcp_subflow_cwnd_space(mpts->mpts_socket) > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sb_mb->m_pkthdr.pkt_flags & PKTF_MPTCP"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(mpt_mbuf == NULL) || (mpt_mbuf->m_pkthdr.pkt_flags & PKTF_MPTCP)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "m->m_next == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "so_m->m_flags & M_PKTHDR"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "so_m->m_pkthdr.pkt_flags & PKTF_MPTCP"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: No data in MPTCP-sendbuffer! smax %u snxt %u suna %u state %u flags %#x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: dropping data, should have been done earlier dsn %u suna %u reinject? %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - $%lx: send-buffer is empty\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: dropping data in degraded mode, should have been done earlier dsn %u sndnxt %u suna %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: send-buffer is still empty\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: this should not happen: sndnxt %u sndmax %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: sb_cc is %d, mp_so->sb_cc %u, sndwnd %u,sndnxt %u sndmax %u cwnd %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: mlen %d mp_rlen %u off %u sb_cc %u tot_sent %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: m_copym_mode failed\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: %u error %d len %d subflags %#x sostate %#x soerror %u hiwat %u lowat %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_subflow_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mptcp_subflow_sosetopt"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: sopt %s val %d set error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_subflow_sosetopt"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "mptcp_subflow_sogetopt"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: sopt %s get error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_subflow_sogetopt"
        prototype = ""
        caller = "mptcp_ctloutput"
    }
    new {
        args = 0
        anchors {
            new {
                string = "mpsofilt_hint_mask & SO_FILT_HINT_LOCKED"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(so->so_state & (SS_NBIO | SS_NOFDREF)) == (SS_NBIO | SS_NOFDREF)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mptcp_subflow_workloop"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: so=%p so_pcb=%p lr=%p ref=%x lrh= %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mptcp_lock"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: so=%p NO PCB usecount=%x lr=%p lrh= %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: mpp=%p inside=%x lrh= %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "mptcp_unlock"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: so=%p NULL so_pcb %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "mptcp_getlock"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "m_pktlen(m) >= 0 && m_pktlen(m) < UINT16_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mptcp_insert_dsn"
        prototype = ""
        caller = "mptcp_usr_send"
    }
    new {
        args = 0
        anchors {
            new {
                string = "!(m->m_pkthdr.pkt_flags & PKTF_MPTCP)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mptcp_insert_rmap"
        prototype = ""
        caller = "tcp_input"
    }
    new {
        args = 0
        anchors {
            new {
                string = "mptcp_get_map_for_dsn"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %llu not found \n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_get_map_for_dsn"
        prototype = ""
        caller = "tcp_do_mptcp_options"
    }
    new {
        args = 1
        anchors {
            new {
                string = "off >= mdss_subflow_off"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mptcp_adj_sendlen"
        prototype = ""
        caller = "tcp_output"
    }
    new {
        args = 0
        anchors {
            new {
                string = "prp != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "prp6 != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mppcb"
                segment = "__TEXT"
                section = "__cstring"
                caller = "lck_grp_init_flags"
            }
            new {
                string = "com.apple.xnu.net.mptcp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mptcp_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mptcpstats_get_index"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: no ifp on subflow, state %u flags %#x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcpstats_get_index"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mptcp_pure_handover_subflows_remove"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mptcp_remove_wifi_subflows"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mptcp_handover_subflows_remove"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: Found Wi-Fi: %u Found Cellular %u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: removing wifi subflow\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "mptcp_check_subflows_and_remove"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mptcp_remove_cell_subflows"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: removing cell subflow\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_remove_cell_subflows"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mptcp_create_subflows"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: bit was already cleared!\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_create_subflows"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mptcp_remove_subflows"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: itf %u close_reqd last itf %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: itf %u killing %#x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "mptcp_remove_subflows"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mptcp_subflow_necp_cb"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: Subflow on itf %u became non-viable, power %u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_subflow_necp_cb"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(mpts->mpts_flags & (MPTSF_CONNECTING | MPTSF_CONNECTED)) == MPTSF_CONNECTING"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: ifindex %u dst %s:%d pended %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: connectx failed with error %d ifscope %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_subflow_soconnectx"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mpts->mpts_refcnt == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mpts->mpts_mpte == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mpts->mpts_socket == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mptcp_subflow_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "!(mpte->mpte_mppcb->mpp_flags & MPP_INSIDE_INPUT)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mptcp_subflow_input"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: cid %d error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_handle_input"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(n->m_flags & M_PKTHDR) && (n->m_pkthdr.pkt_flags & PKTF_MPTCP)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mptcp_copy_mbuf_list"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "n->m_flags & M_PKTHDR"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "n->m_next == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "n->m_pkthdr.mp_dsn == dsn"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "n->m_pkthdr.mp_rlen == dlen"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "n->m_pkthdr.mp_rseq == rseq"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "n->m_len == m->m_len"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx no alternate path\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: switched from %d to %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: m_copym_mode returned NULL\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: dsn %u dlen %u rseq %u fully covered with len %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s - %lx: m (dsn %u len %u) is covering existing mbuf (dsn %u len %u)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s - %lx: prev (dsn %u len %u) covers us (dsn %u len %u)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "mptcp_subflow_failover_ev"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "mp_droplen <= (UINT_MAX)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mp_droplen >= tcp_droplen"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mp_so->so_snd.sb_mb != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mptcp_desynthesize_ipv6_addr"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: desynthesized to %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_subflow_connected_ev"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "mp_tp->mpt_version == MPTCP_VERSION_0 || mp_tp->mpt_version == MPTCP_VERSION_1"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mptcp_init_local_parms"
        prototype = ""
        caller = "mptcp_subflow_add"
    }
    new {
        args = 0
        anchors {
            new {
                string = "mptcp_symptoms_ctl_connect"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: MPTCP kernel-control socket for Symptoms already open!"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_symptoms_ctl_connect"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "mptcp_allow_uuid"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: kcunit %u is different from expected one %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: mbuf is %lu but need %lu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: wifi new,old: %d,%d, cell new, old: %d,%d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: mbuf is %lu but need %lu or %lu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: mbuf_copydata returned %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: Got allowance for useApp with rssi %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_symptoms_ctl_send"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "val < INT32_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: Cell is off, but should be at least %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: Increments is %u but want to dec by %u.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: Inconsistent state! Cell refcount is zero but increments are at %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_unset_cellicon"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "so->so_proto->pr_flags & PR_CONNREQUIRED"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mptcp_subflow_soreceive 2"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "m_pktlen(m) < UINT16_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: No DSS on secondary subflow. Killing %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: Received more than 64KB without DSS mapping. Killing %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: Received incorrect second mapping: DSN: %u - %u , SSN: %u - %u, DLEN: %u - %u, DFIN: %u - %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: m_split failed dlen %u dfin %u off %d pktlen %d, killing subflow %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_subflow_soreceive"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "addr == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "uio == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "flags == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(so->so_flags & SOF_CONTENT_FILTER) == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "top->m_pkthdr.len > 0 && top->m_pkthdr.len <= UINT16_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "top->m_pkthdr.pkt_flags & PKTF_MPTCP"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mptcp_subflow_sosend"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s - %lx: skipped state [u=%d,r=%d,s=%d]\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mptcp_gc"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "TAILQ_EMPTY(&mpte->mpte_subflows) && mpte->mpte_numflows == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mptcp_session_destroy"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "TAILQ_EMPTY(&mpte->mpte_sopts)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: Destroying session\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "mptcp_gc"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mptcpstats_get_bytes"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: cellbytes is %lld\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcpstats_get_bytes"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "SO_LINGER"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_LINGER_SEC"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_DEBUG"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_KEEPALIVE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_USELOOPBACK"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_TYPE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_NREAD"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_NWRITE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_ERROR"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_SNDBUF"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_RCVBUF"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_SNDLOWAT"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_RCVLOWAT"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_SNDTIMEO"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_RCVTIMEO"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_NKE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_NOSIGPIPE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_NOADDRERR"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_RESTRICTIONS"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_LABEL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_PEERLABEL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_RANDOMPORT"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_TRAFFIC_CLASS"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_RECV_TRAFFIC_CLASS"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_TRAFFIC_CLASS_DBG"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_PRIVILEGED_TRAFFIC_CLASS"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_DEFUNCTIT"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_DEFUNCTOK"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_ISDEFUNCT"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_OPPORTUNISTIC"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_FLUSH"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_RECV_ANYIF"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_NOWAKEFROMSLEEP"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_NOAPNFALLBK"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_CELLFALLBACK"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_FALLBACK_MODE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_MARK_KNOWN_TRACKER"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_MARK_KNOWN_TRACKER_NON_APP_INITIATED"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_MARK_APPROVED_APP_DOMAIN"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_DELEGATED"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_DELEGATED_UUID"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_NECP_ATTRIBUTES"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SO_NECP_CLIENTUUID"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IP_TOS"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IPV6_TCLASS"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "TCP_NODELAY"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "TCP_KEEPALIVE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "TCP_KEEPINTVL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "TCP_KEEPCNT"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "TCP_CONNECTIONTIMEOUT"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "TCP_RXT_CONNDROPTIME"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PERSIST_TIMEOUT"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NOTSENT_LOWAT"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ADAPTIVE_READ_TIMEOUT"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ADAPTIVE_WRITE_TIMEOUT"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "TCP_FASTOPEN_FORCE_ENABLE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "MPTCP_SERVICE_TYPE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "MPTCP_ALTERNATE_PORT"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "MPTCP_FORCE_ENABLE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "MPTCP_FORCE_VERSION"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "MPTCP_EXPECTED_PROGRESS_TARGET"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mptcp_sopt2str"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "mpsotomppcb(mp_so) == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mptcp_usr_attach"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mptcp_usr_detach"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: state: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_usr_detach"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mptcp_entitlement_check"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: MPTCP prohibited on svc %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_entitlement_check"
        prototype = ""
        caller = ""
    }
    new {
        args = 5
        anchors {
            new {
                string = "pcid != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: state %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: fell back to TCP\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: IPv4 dst len %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: IPv6 dst len %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: IPv4 src len %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: IPv6 src len %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_usr_connectx"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "mp_so->so_snd.sb_flags & SB_NOCOMPRESS"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mptcp_usr_send"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mp_so->so_type == SOCK_STREAM"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!(mp_so->so_flags & SOF_MP_SUBFLOW)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "top != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "top != NULL && *top == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mb->m_flags & M_PKTHDR"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "progress == tot"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mptcp_usr_sosend"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "sopt->sopt_level == SOL_SOCKET"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mptcp_usr_socheckopt"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "mpo != &smpo"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "TAILQ_EMPTY(&mpte->mpte_subflows)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mpts->mpts_oldintval == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: Can't set urgent activity when svctype is %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: Not ok to create subflows, state %u flags %#x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: Not rescheduling timer %llu now %llu target %llu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: sopt %s (%d, %d) val %d can't be issued error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_ctloutput"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mptcp_usr_preconnect"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: invalid preconnect "
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_usr_preconnect"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: no space left %d \n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "mptcp_setup_join_ack_opts"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mptcp_setup_join_ack_opts"
        prototype = ""
        caller = "mptcp_setup_opts"
    }
    new {
        args = 3
        anchors {
            new {
                string = "optlen too large @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s - %lx: no space left %d flags %x tp->t_mpflags %x len %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: not enough space in TCP option, optlen: %u, mmco_len: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_setup_opts"
        prototype = ""
        caller = "tcp_output"
    }
    new {
        args = 1
        anchors {
            new {
                string = "acked <= INT_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mptcp_data_ack_rcvd"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: acked %u, sb_cc %u full %u suna %u state %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_data_ack_rcvd"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mptcp_setup_first_subflow_syn_opts"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: Not doing MPTCP due to heuristics"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_setup_syn_opts"
        prototype = ""
        caller = "tcp_output"
    }
    new {
        args = 1
        anchors {
            new {
                string = "mptcp_sanitize_option"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mptcp_do_mpcapable_opt"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: remote key %llx local key %llx remote rand %x local rand %x \n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "mptcp_validate_join_hmac"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: type = %d \n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: SYN_ACK optlen = %u, sizeof mp opt = %lu \n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "local version: %d > peer version %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: SYN_ACK: unexpected optlen = %u mp option = %lu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: SYN_ACK error = %d \n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_do_mptcp_options"
        prototype = ""
        caller = "tcp_dooptions"
    }
    new {
        args = 0
        anchors {
            new {
                string = "mptcp_set_urgency_timer"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: timer at %llu now %llu usecount %u ret %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_set_urgency_timer"
        prototype = ""
        caller = "mptcp_ctloutput"
    }
    new {
        args = 0
        anchors {
            new {
                string = "mptcp_timer_demux"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: REXMT %d sndnxt %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "mptcp_timer"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mp_so->so_usecount >= 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mptcp_urgency_timer"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: timer at %llu now %llu usecount %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_urgency_timer"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mptcp_urgency_stop"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: usecount %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_urgency_stop"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mptcp_cancel_urgency_timer"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s - %lx: Canceled timer thread usecount %u ret %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_cancel_all_timers"
        prototype = ""
        caller = "mptcp_disconnect"
    }
    new {
        args = 0
        anchors {
            new {
                string = "/AppleInternal/Library/BuildRoots/d3a62b52-2ef5-11ef-9ecd-e2437461156c/Library/Caches/com.apple.xbs/Sources/xnu/bsd/netinet6/ah_core.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ah_hmac_loop: what? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "len <= UINT_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ah_hmac_loop"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ah_hmac_state_init: what? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ah_hmac_state_init: unsupported algorithm.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ah_hmac_state_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ah_hmac_result: what? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ah_hmac_result"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ah_update_mbuf: wrong offset specified @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ah_update_mbuf"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "(off + sizeof(struct ah) + sizoff + siz1) <= INT_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/AppleInternal/Library/BuildRoots/d3a62b52-2ef5-11ef-9ecd-e2437461156c/Library/Caches/com.apple.xbs/Sources/xnu/bsd/netinet6/ah_input.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IPv4 AH input: can't pullup;dropping the packet for simplicity\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "IPv4 AH input: no key association found for spi %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "IPv4 AH input: non-mature/dying SA found for spi %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "IPv4 AH input: unsupported authentication algorithm for spi %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "sum length too short in IPv4 AH input (%u, should be at least %u): %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "sum length mismatch in IPv4 AH input (%d should be %u): %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "IPv4 AH input: can't pullup\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "replay packet in IPv4 AH input: %s %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "IPv4 AH input: couldn\\'t alloc temporary region for cksum\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "IPv4 AH input: bad length ip header len %u, total len %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "checksum mismatch in IPv4 AH input: %s %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec tunnel protocol mismatch in IPv4 AH input: %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ah4_input"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ah_output.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ah4_output: assumption failed (first mbuf length) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ah4_output: internal error: sav->replay is null: %x->%x, SPI=%u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ah4_output: unsupported algorithm: SPI=%u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ENOBUFS in ah4_output %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "IPv4 AH output: size exceeds limit\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "error after ah4_calccksum, called from ah4_output"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ah4_finaldst: parameter mbuf wrong (not pulled up)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ah4_finaldst: wrong optlen %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ah4_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mbuf chain? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "esp_auth: mbuf length < skip\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "esp_auth: mbuf length < skip + length\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "esp_auth: length is not multiple of 4\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "esp_auth: NULL SA passed\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "esp_auth: bad ESP auth algorithm passed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "esp_auth: AH_MAXSUMSIZE is too small: siz=%u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "esp_auth"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d out_auth is NULL @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "algo != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d esp auth: auth size=%zu is lesser than siz=%zu SPI 0x%08x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s:%d esp auth: algo init failed with error %d, SPI 0x%08x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s:%d esp auth: input data length %zu is not a multiple 4, SPI 0x%08x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "esp_auth_data"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.xnu.esp"
                segment = "__TEXT"
                section = "__cstring"
                caller = "os_log_create"
            }
            new {
                string = "MPKL_CREATE_LOGOBJECT for ESP failed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "key_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d payload length %zu must be a multiple of ESP_CBC_DES_BLOCKLEN, SPI 0x%08x"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "esp_cbc_des_encrypt_data"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "esp_common_ivlen: unknown algorithm @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "esp_common_ivlen"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d payload length %zu must be a multiple of ESP_CBC_3DES_BLOCKLEN, SPI 0x%08x"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "esp_cbc_3des_encrypt_data"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "siz <= USHRT_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IPv4 ESP input: packet alignment problem (off=%d, pktlen=%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "IPv4 ESP input: invalid protocol type\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "IPv4 ESP input: no key association found for spi %u (0x%08x)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "IPv4 ESP input: non-mature/dying SA found for spi %u (0x%08x)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "IPv4 ESP input: unsupported encryption algorithm for spi %u (0x%08x)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "inproper ivlen in IPv4 ESP input: %s %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "replay packet in IPv4 ESP input: seq(%u) idx(%u) %s %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "auth fail in IPv4 ESP input: %s %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "cc_cmp fail in IPv4 ESP input: %s %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "IPv4 ESP input: packet too short\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "decrypt fail in IPv4 ESP input: %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "esp4 packet decryption ICV failure: %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "bad pad length in IPv4 ESP input: %s %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "IPv4 ESP input: invalid udp encapsulated ESP packet length \n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec tunnel unsupported address family in ESP input\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "IPv4 ESP input: can't pullup UDP header in esp4_input\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "IPv4 ESP input: decrypted packet too short %d < %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "esp4_input_extended"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "siz <= UINT16_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "esplen + ivlen <= UINT16_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "esp6_input: mbuf allocation failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "IPv6 ESP input: packet alignment problem (off=%d, pktlen=%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "IPv6 ESP input: ESP with IPv6 jumbogram is not supported.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "IPv6 ESP input: invalid protocol type\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "IPv6 ESP input: no key association found for spi %u (0x%08x) seq %u src %s dst %s if %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "IPv6 ESP input: non-mature/dying SA found for spi %u (0x%08x)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "IPv6 ESP input: unsupported encryption algorithm for spi %u (0x%08x)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "improper ivlen in IPv6 ESP input: %s %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "replay packet in IPv6 ESP input: seq(%u) idx(%u) %s %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "IPv6 ESP input: packet too short\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "decrypt fail in IPv6 ESP input: %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "esp6 packet decryption ICV failure: %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "bad pad length in IPv6 ESP input: %s %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "IPv6 ESP input: invalid udp encapsulated ESP packet length\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "esp6_input_extended"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s:%d esp kpipe input, ipversion %u, SPI=%x"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s:%d esp kpipe input, sah is NULL\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s:%d ipsec tunnel mode not supported in kpipe mode, SPI=%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s:%d sadb flag %x not supported in kpipe mode, SPI=%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s:%d esp kpipe input, invalid SA state %u, SPI=%x"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s:%d esp kpipe input, missing replay window, SPI=%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s:%d esp kpipe input, unsupported algorithm(%d) for, SPI=%x"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "esp kpipe input: invalid ivlen(%d) SPI=%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "auth_size < AH_MAXSUMSIZE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "e_algo->decrypt_pkt"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d esp kpipe input, jumbogram not supported"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d esp kpipe input, output buffer is short(%u), compared to input buffer(%u) SPI=%x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d esp kpipe input, invalid nxt proto %u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d esp kpipe input, slen too short %u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d esp kpipe input, no SA found for SPI=%x, packet %s<->%s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d esp kpipe input, replay packet, seq(%u), idx(%u), SPI=%x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d esp kpipe input, input buffer does not contain auth, SPI=%x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d esp kpipe input, esp auth data failed, SPI=%x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d esp kpipe input, auth compare failed, SPI=%x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d esp kpipe input, input buffer is short(%u), to contain ivlen and esptail SPI=%x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d esp kpipe input: decryption failed, SPI=%x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d esp kpipe input: ICV failed, SPI=%x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d esp kpipe input: update replay failed, SPI=%x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d esp kpipe input: encrypted payload len %u, is invalid, taillen %zu, SPI=%x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "esp_kpipe_input"
        prototype = ""
        caller = "ipsec_netif_sync_rx"
    }
    new {
        args = 1
        anchors {
            new {
                string = "sav->sah->saidx.mode == IPSEC_MODE_TRANSPORT"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(sav->flags & (SADB_X_EXT_OLD | SADB_X_EXT_DERIV | SADB_X_EXT_NATT | SADB_X_EXT_NATT_MULTIPLEUSERS | SADB_X_EXT_CYCSEQ | SADB_X_EXT_PMASK)) == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "esp kpipe output, ipversion %u, SPI=%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s:%d esp kpipe output, slen(%u) <= iphlen(%zu) SPI=%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s:%d esp kpipe output, missing replay window, SPI=%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s:%d esp kpipe output: unsupported algorithm, SPI=%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "invalid ivlen(%d) SPI=%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "extendsiz <= UINT8_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "auth size %zu greater than AH_MAXSUMSIZE @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s:%d esp kpipe output: destination buffer too short"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s:%d esp kpipe output: source buffer too short"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d esp kpipe output: ipv4 packet size exceeded, ip payload len %u, SPI=%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s:%d esp kpipe output: ipv6 packet size exceeded, ip payload len %u, SPI=%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s:%d replay counter overflowed, SPI=%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "esp kpipe output: missing algo encrypt pkt @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s:%d esp encrypt failed %d, SPI=%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s:%d esp finalize encrypt failed %d, SPI=%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s:%d esp auth data failed %d, SPI=%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "esp_kpipe_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "esp_output: should not reach here @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "invalid ivlen @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "esphlen <= INT32_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "extendsiz <= INT_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(extendsiz - 2) <= UINT8_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "internal error: no encrypt function @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "assertion failed for AH_MAXSUMSIZE @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "(plen + siz + extendsiz + esphlen) <= UINT16_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "esp_output: unsupported af %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "esp4_output: internal error: sav->replay is null: %x->%x, SPI=%u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "esp6_output: internal error: sav->replay is null: SPI=%u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "esp_output: unsupported algorithm: SPI=%u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "esp%d_output: md is not in chain\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "esp%d_output: can't alloc mbuf"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "packet encryption failure\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "packet encryption ICV failure\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ESP checksum generation failure\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "can't alloc mbuf in esp%d_output"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "18 {curProtocol: 80, spi: 0x%X, espSeq: %u, PayloadProtocol: 100, localPort: %hu, remotePort: %hu, tcpSeq: %u, tcpAck: %u, tcpLen: %hu, tcpFlags: 0x%02x}"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "esp_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "out_ivlen == AES_BLOCKLEN"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d payload length %zu must be multiple of AES_BLOCKLEN, SPI 0x%08x"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "esp_aes_cbc_encrypt_data"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "%s:%d ivlen(%zu) != AES_BLOCKLEN, SPI 0x%08x"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s:%d input data length(%zu) must be a multiple of AES_BLOCKLEN"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "esp_aes_cbc_decrypt_data"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "esp_gcm_ivlen: unknown algorithm @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "esp_gcm_ivlen"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d Context reset failure %d, SPI 0x%08x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s:%d Set IV failure %d, SPI 0x%08x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d IV generation failure %d, SPI 0x%08x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d Set AAD failure %d, SPI 0x%08x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d Packet encryption IV AAD failure %d, SPI 0x%08x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s:%d set aad failure %d, SPI 0x%08x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s:%d encrypt failure %d, SPI 0x%08x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "esp_aes_gcm_encrypt_data"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d iv is NULL @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s:%d set iv failure %d, SPI 0x%08x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s:%d decrypt failure %d, SPI 0x%08x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "esp_aes_gcm_decrypt_data"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d ChaChaPoly is incompatible with SADB_X_EXT_OLD, SPI 0x%08x"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d ChaChaPoly is incompatible with SADB_X_EXT_DERIV, SPI 0x%08x"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d ChaChaPoly unsupported algorithm %d, SPI 0x%08x"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d ChaChaPoly key is missing, SPI 0x%08x"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d ChaChaPoly invalid key length %d bits, SPI 0x%08x"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s:%d ChaChaPoly Mature SPI 0x%08x%s %s dir %u state %u mode %u"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "esp_chachapoly_mature"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d ChaChaPoly Invalid key len %u, SPI 0x%08x"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d ChaChaPoly chacha20poly1305_init failed %d, SPI 0x%08x"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s:%d ChaChaPoly Schedule SPI 0x%08x%s %s dir %u state %u mode %u"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "esp_chachapoly_schedule"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d algo is NULL @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "esp_chachapoly_ivlen"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "esp_chachapoly_ivlen"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d ChaChaPoly chacha20poly1305_finalize failed %d, SPI 0x%08x"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "esp_chachapoly_encrypt_finalize"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d ChaChaPoly Packet too short %d < %zu, SPI 0x%08x"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s:%d ChaChaPoly not enough mbufs %d %d, SPI 0x%08x"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "esp_chachapoly_encrypt"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "input_data_len != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d esp_ccp_ctx is NULL @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "esp_chachapoly_encrypt_data"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d chacha20poly1305_decrypt failed %d, SPI 0x%08x"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "esp_chachapoly_decrypt_data"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "ipsec4_getpolicybysock: NULL pointer was passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ipsec4_getpolicybysock: so->so_pcb == NULL\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "ipsec4_getpolicybysock: unsupported address family @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ipsec4_getpolicybysock: illegal direction. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ipsec4_getpolicybysock: currsp is NULL. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ipsec4_setspidx_inpcb: no sp_in/out found. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ipsec4_getpolicybysock: Illegal policy for non-priviliged defined %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ipsec4_getpolicybysock"
        prototype = ""
        caller = "ip_output_list"
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipsec4_getpolicybyaddr: NULL pointer was passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "fixed system default policy:%d->%d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ipsec4_getpolicybyaddr"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipsec4_getpolicybyinterface: NULL pointer was passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipsec4_getpolicybyinterface"
        prototype = ""
        caller = "ip_output_list"
    }
    new {
        args = 2
        anchors {
            new {
                string = "ipsec6_getpolicybysock: NULL pointer was passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ipsec6_getpolicybysock: illegal direction. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ipsec6_getpolicybysock: currsp is NULL. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ipsec6_getpolicybysock: Invalid policy for PCB %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec6_getpolicybysock: Illegal policy for non-priviliged defined %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec6_policybysock: Invalid policy for PCB %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ipsec6_getpolicybysock"
        prototype = ""
        caller = "ip6_output_list"
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipsec6_getpolicybyaddr: NULL pointer was passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipsec6_getpolicybyaddr"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipsec6_getpolicybyinterface: NULL pointer was passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipsec6_getpolicybyinterface"
        prototype = ""
        caller = "ip6_output_list"
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipsec_init_policy: NULL pointer was passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ipsec_init_policy: No more memory.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ipsec_init_policy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipsec4_delete_pcbpolicy: NULL pointer was passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipsec4_delete_pcbpolicy"
        prototype = ""
        caller = "in_pcbdetach"
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipsec6_delete_pcbpolicy: NULL pointer was passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipsec6_delete_pcbpolicy"
        prototype = ""
        caller = "in6_pcbdetach"
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipsec_get_reqlevel: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ipsec_get_reqlevel: family mismatched. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "fixed system default level ip4_esp_trans_deflev:%d->%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "fixed system default level ip4_esp_net_deflev:%d->%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "fixed system default level ip4_ah_trans_deflev:%d->%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "fixed system default level ip4_ah_net_deflev:%d->%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "fixed system default level ip6_esp_trans_deflev:%d->%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "fixed system default level ip6_esp_net_deflev:%d->%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "fixed system default level ip6_ah_trans_deflev:%d->%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "fixed system default level ip6_ah_net_deflev:%d->%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "key_get_reqlevel: Unknown family. %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ipsec_get_reqlevel: Illegal protocol defined %u\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ipsec_get_reqlevel: Illegal IPsec level %u @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ipsec_get_reqlevel: still got IPCOMP - exiting\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ipsec_get_reqlevel"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ipsec4_in_reject: invalid inpcb/socket @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipsec4_in_reject"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ipsec6_in_reject: invalid in6p/socket @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipsec6_in_reject"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipsec4_hdrsize: why is socket NULL but there is PCB. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipsec4_hdrsiz"
        prototype = ""
        caller = "ipsec_hdrsiz_tcp"
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipsec6_hdrsize: why is socket NULL but there is PCB. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipsec6_hdrsiz"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ipsec4_encapsulate: assumption failed (first mbuf length) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipsec4_encapsulate"
        prototype = ""
        caller = "ipsec4_output_internal"
    }
    new {
        args = 0
        anchors {
            new {
                string = "src=%u.%u.%u.%u"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = " dst=%u.%u.%u.%u"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ipsec4_logpacketstr"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipsec_logsastr: family mismatched. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "SA(SPI=%u "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "src=%d.%d.%d.%d dst=%d.%d.%d.%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ipsec_logsastr"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipsec4_output: no SA found, but required. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "IPv4 output: can't pullup UDP header\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ipsec4_output"
        prototype = ""
        caller = "ip_output_list"
    }
    new {
        args = 0
        anchors {
            new {
                string = "state == NULL in ipsec6_output_trans @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "state->m == NULL in ipsec6_output_trans @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "nexthdrp == NULL in ipsec6_output_trans @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "mprev == NULL in ipsec6_output_trans @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "sp == NULL in ipsec6_output_trans @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "tun == NULL in ipsec6_output_trans @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ipsec6_output_trans: no SA found, but required. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipsec6_output_trans"
        prototype = ""
        caller = "ip6_output_list"
    }
    new {
        args = 0
        anchors {
            new {
                string = "state == NULL in ipsec6_output_tunnel @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "state->m == NULL in ipsec6_output_tunnel @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "sp == NULL in ipsec6_output_tunnel @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ipsec6_output_tunnel: no SA found, but required. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ipsec6_output_tunnel: IPv4 must be outer layer, spi=%u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ipsec6_output_tunnel"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "state == NULL in ipsec6_output @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "state->m == NULL in ipsec6_output @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "nexthdrp == NULL in ipsec6_output @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "mprev == NULL in ipsec6_output @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipsec6_interface_output"
        prototype = ""
        caller = "ipsec_output"
    }
    new {
        args = 1
        anchors {
            new {
                string = "ipsec4_splithdr: first mbuf too short, m_len %d, pkt_len %d, m_flag %x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipsec4_splithdr"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ipsec6_splithdr: first mbuf too short @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipsec6_splithdr"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ipsec4_get_ulp: too short @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "nxt <= UINT8_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ipsec_setspidx"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipsec6_setspidx_in6pcb: no PCB found. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ipsec6_setspidx_in6pcb: no in6p_sp found. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ipsec6_setspidx_in6pcb: no sp_in/out found. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ipsec6_setspidx_in6pcb"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipsec4_output_internal"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ipsec46_encapsulate: assumption failed (first mbuf length) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: family mismatched between inner and outer spi=%u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ipsec4_output_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "af6->ip6af_off != ip6af->ip6af_off"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "frag6_input"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pp == NULL || (pp->pr_flags & (PR_INITIALIZED | PR_ATTACHED)) == PR_ATTACHED"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/AppleInternal/Library/BuildRoots/d3a62b52-2ef5-11ef-9ecd-e2437461156c/Library/Caches/com.apple.xbs/Sources/xnu/bsd/netinet6/icmp6.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mld_init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "icmp6_init"
        prototype = ""
        caller = "ip6_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "nicmp6 is NULL in %s, which isn't good! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "icmp6_input"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ICMP6 checksum error(%d|%x) %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "icmp6_input: unknown type %d(src=%s, dst=%s, ifid=%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "icmp6_input"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "icmp6_reflect"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sanity fail: off=%x, sizeof(ip6)=%x in %s:%d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "icmp6_reflect: source can't be determined: dst=%s, error=%d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "icmp6_reflect"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "assumption failed in %s:%d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "icmp6_redirect_output"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "icmp6_redirect_output"
        prototype = ""
        caller = "ip6_forward"
    }
    new {
        args = 0
        anchors {
            new {
                string = "icmp6_dgram_attach @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "icmp6_dgram_attach"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ni6_input"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ni6_input: ignore node info to a temporary address in %s:%d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ni6_input"
        prototype = ""
        caller = "icmp6_input"
    }
    new {
        args = 0
        anchors {
            new {
                string = "(src=%s dst=%s tgt=%s)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "icmp6_redirect_diag"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "in6_control"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SIOCPROTODETACH_IN6: %s error=%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "prefix ioctls are now invalidated. please use ifconfig.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "sa6 != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6_control"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ifp != NULL && ifra != NULL && iar != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: pltime 0x%x > vltime 0x%x for %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s: valid lifetime is 0 for %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s: prefix length < 128 with explicit dstaddr.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: dstaddr valid only on p2p and loopback interfaces.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "address %s already exists in automatic form"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "address %s already exists in manual form"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "in6_update_ifa"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "in6_purgeaddr: failed to remove a route to the p2p destination: %s on %s, errno=%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "in6_purgeaddr"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "in6_are_prefix_equal"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6_are_prefix_equal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "in6_prefixlen2mask"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6_prefixlen2mask"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: unknown link type (%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "in6_if2idlen"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6_if2idlen"
        prototype = ""
        caller = "in6_pfx_newpersistaddr"
    }
    new {
        args = 3
        anchors {
            new {
                string = "maclen <= sizeof(in6_event_data.ia_mac)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6_post_msg"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "in6_eventhdlr_callback"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "p_addr6 != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s Event %s received for %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "in6_eventhdlr_callback"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "in6_event_enqueue_nwk_wq_entry"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "UNKNOWN_IN6_EVHDLR_CODE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: eventhandler enqueuing event of type=in6_evhdlr_code event_code=%s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "in6_event_enqueue_nwk_wq_entry"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ifp != NULL && ifra != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: nd6_prelist_add okay, but no prefix.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s: failed to create a temporary address, error=%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "in6ctl_aifaddr"
        prototype = ""
        caller = "in6_control"
    }
    new {
        args = 1
        anchors {
            new {
                string = "ifp != NULL && ia != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6ctl_difaddr"
        prototype = ""
        caller = "in6_control"
    }
    new {
        args = 1
        anchors {
            new {
                string = "sin6 != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6_to_kamescope"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "%s: in6_setscope failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s - %s ifp %s ia6_flags 0x%x ifaupflags 0x%x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "in6_ifaupdate_aux"
        prototype = ""
        caller = "in6_update_ifa"
    }
    new {
        args = 1
        anchors {
            new {
                string = "in6_ifloop_request: %s operation failed for %s (errno=%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "DELETE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6_ifloop_request"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "in6_unlink_ifa: IPv6 address 0x%llx has no prefix\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "in6_unlink_ifa"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: attempt to remove wrong ia %p from ipv6 hash table @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "in6_iahash_remove"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6_iahash_remove"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: attempt to insert wrong ia %p into hash table @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: attempt to double-insert ia %p into hash table @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "in6_ifinit"
        prototype = ""
        caller = "in6_update_ifa"
    }
    new {
        args = 1
        anchors {
            new {
                string = "in6_ifaddr_free"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6_ifaddr_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "cfg != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "n < SHA1_RESULTLEN"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6_cga_start"
        prototype = ""
        caller = "sysctl_cga_parameters"
    }
    new {
        args = 0
        anchors {
            new {
                string = "in6 != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "prepare->cga_security_level < 8"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6_cga_generate"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "%s: mbuf %p pkt too short (%d) for IPv6 header @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "inet6_cksum"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "inet6_cksum"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: off (%u) >=  buffer_len (%u) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: len == 0 OR len (%u) >=  buffer_len (%u) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: off(%u), len(%u) add overflow @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: off(%u) + len(%u) >=  buffer_len (%u) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "inet6_cksum_buffer"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ENOBUFS in in6_gif_output %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "in6_gif_output"
        prototype = ""
        caller = "gif_output"
    }
    new {
        args = 0
        anchors {
            new {
                string = "cannot forward from %s to %s nxt %d received on %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "!IN6_IS_ADDR_MULTICAST(&ip6->ip6_dst)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ip6_forward: No IPsec request specified.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "ip6_forward: Invalid policy found. %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "rt == NULL || rt == ip6forward_rt->ro_rt"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "cannot forward src %s, dst %s, nxt %d, rcvif %s, outif %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "ip6_forward"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ip6_forward.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ip6_forward"
        prototype = ""
        caller = "ip6_input"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: in6_ifattach_prelim returned %d if=%s%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s: proto_unplumb returned %d if=%s%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "in6_domifattach"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ND_IFINFO(ifp)->initialized"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: in6_ifattach_loopback returned %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "in6_ifattach_prelim"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "in6_ifattach_loopback"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ia == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "in6_ifattach: %s is not multicast capable, IPv6 not enabled\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: failed to configure loopback address %s (error=%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "in6_ifattach_prelim"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "in6_ifattach_aliasreq"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6_ifattach_aliasreq"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "llcgasr != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "in6_ifattach_llcgareq"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6_ifattach_llcgareq"
        prototype = ""
        caller = "in6ctl_cgastart"
    }
    new {
        args = 1
        anchors {
            new {
                string = "ifra != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "in6_ifattach_linklocal"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: failed to configure a link-local address on %s (errno=%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "in6_ifattach_linklocal"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "in6_generate_tmp_iid"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: computed SHA256 value is zero.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "in6_generate_tmp_iid"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "in6_event2kev_array[i].in6_event_code == i"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Unable to find [PF_INET6,IPPROTO_RAW,SOCK_RAW] @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "dp == inet6domain && dp->dom_family == PF_INET6"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ip6_checkinterface"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: failed to register PF_INET6 protocol: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ina6ddr_nhash"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ip6_moptions"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ip6_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ip6_input"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!ours || (m->m_pkthdr.pkt_flags & PKTF_PROXY_DST)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "rin6.ro_rt != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ip6_input"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "sysctl_ip6_checkinterface"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: ip6_checkinterface is now %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "sysctl_ip_checkinterface_0"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "0 == packetchain"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Invalid policy found: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "assumption failed: hdr not split @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ip6obf.route_selected"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Double free of ip6e_hbh @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Double free of ip6e_dest1 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Double free of ip6e_rthdr @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Double free of ip6e_dest2 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ip6_output_list"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "NULL != mptr"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ip6_do_fragmentation"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "%s: mbuf %p pkt len (%u) < hoff+ip6_hdr (%u+%u)\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: mbuf 0x%llx proto %d IPv6 plen %d (%x) [swapped %d (%x)] doesn't match actual packet length; %d is used instead\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: mbuf %p pkt len (%u) < hoff+ip6_hdr+ext_hdr (%u+%u+%u)\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6_finalize_cksum"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "sopt != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ip6_getpcbopt: unexpected option @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ip6_ctloutput"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: im6o %p negative refcnt @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: im6o %p cannot be freed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "im6o_remref"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "copypktopts: invalid argument\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "copypktopts"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: im6o %p has no debug structure @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "im6o_trace"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "im6o_trace"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ip6_setpktopt: impossible case\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "IS_P2ALIGNED(buf, sizeof(u_int32_t))"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ip6_setpktopt"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "in6_selectsrc_core_ifa"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d Returned with error: %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "in6_selectsrc_core_ifa"
        prototype = ""
        caller = "ifaddr_findbestforaddr"
    }
    new {
        args = 0
        anchors {
            new {
                string = "dstsock != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "src_storage != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "in6_selectsrc_core"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IP6S_SRCRULE_1"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s out src %s dst %s ifp %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d NEXT ia %s address on ifp1 %s skipped as it is reserved for CLAT46\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s:%d CLAT46: NEXT ia %s address on ifp1 %s skipped as it is not reserved for CLAT46\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s:%d NEXT ia %s ifp1 %s address is not on outgoing interface \n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s:%d NEXT ia %s ifp1 %s odstzone %d != dstzone %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s:%d NEXT ia %s ifp1 %s osrczone %d != srczone %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s:%d NEXT ia %s ifp1 %s ia6_flags 0x%x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s:%d NEXT ia %s ifp1 %s IFA6_IS_DEPRECATED\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s:%d NEXT ia %s ifp1 %s IN6_IFF_OPTIMISTIC\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s:%d BREAK r %s ia %s ifp1 %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d Address list seems to have changed. Restarting source address selection.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s:%d NEXT ia %s ifp1 %s last resort\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s:%d NEXT ia %s ifp1 %s best_scope %d new_scope %d dst_scope %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s out src %s dst %s dst_scope %d best_scope %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "in6_selectsrc_core"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "sifp != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6_selectsrc"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "inp->inp_flags2 & INP2_INHASHLIST"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6_pcbsetport"
        prototype = ""
        caller = ""
    }
    new {
        args = 5
        anchors {
            new {
                string = "rt == NULL || rt == ro->ro_rt"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6_selectif"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "inm->in6m_st[1].iss_rec == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6m_clear_recorded"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "im6f_purge"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "im6f_purge"
        prototype = ""
        caller = "im6o_remref"
    }
    new {
        args = 1
        anchors {
            new {
                string = "in6m_commit"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6m_commit"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "in6m_purge"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6m_purge"
        prototype = ""
        caller = "in6m_remref"
    }
    new {
        args = 1
        anchors {
            new {
                string = "IN6_IS_ADDR_MULTICAST(mcaddr)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mcaddr->s6_addr16[1] != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: in6_mc_get() failure\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "ifma->ifma_addr->sa_family == AF_INET6"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "inm->in6m_ifma == ifma"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "in6_are_addr_equal_scoped(&inm->in6m_addr, group, inm->ifscope, ifp->if_index)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6_mc_join"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: in6m=%p negative reqcnt @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: Attempt to detach an unattached record in6m=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: in6m %p is already in trash list @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "in6_multi_detach"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: in6m=%p negative refcnt @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "in6m_remref"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: attached in6m=%p is being freed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: ifma not NULL for in6m=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: in6m %p cannot be freed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: non-zero refcount in6m=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: non-zero reqcnt in6m=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "in6m_remref"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: --- begin in6m 0x%llx ---\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "in6m_print"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mli 0x%llx nsrc %lu sctimer %u scrv %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: --- end in6m 0x%llx ---\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "in6m_print"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "src->sin6_family == AF_INET6"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "gidx != (size_t)-1 && gidx < imo->im6o_num_memberships"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "im6o_match_source"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: Attempt to attach an already attached in6m=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "in6_multi_attach"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "in6m->in6m_reqcnt == 1"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6_multi_attach"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: in6m %p has no debug structure @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "in6m_trace"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6m_trace"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "in6m_get_source"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "in6m_reap"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6m_merge"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "im6f_rollback"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "im6f_rollback"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "inm->in6m_ifp == inm->in6m_ifma->ifma_ifp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6_mc_leave"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "%s: ipv6mr_interface = %d, ifp = 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "imo->im6o_mfilters != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: new join w/o source"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: warning: no ifindex, looking up ifp for group %s.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: ifp = 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "inm == imo->im6o_membership[idx]"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ip6_setmoptions"
        prototype = ""
        caller = "ip6_ctloutput"
    }
    new {
        args = 0
        anchors {
            new {
                string = "in6p == NULL || (in6p->inp_vflag & INP_IPV6)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "gsin6->sin6_family == AF_INET6"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6p_lookup_mcast_ifp"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "im6f_reap"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "im6f_reap"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: visit node 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "sysctl_ip6_mcast_filters"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: i6mm_maddr not NULL for imm=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "in6_multi_mship_free"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6_joingroup"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "!NETNS_TOKEN_VALID( &inp->inp_wildcard_netns_token)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/AppleInternal/Library/BuildRoots/d3a62b52-2ef5-11ef-9ecd-e2437461156c/Library/Caches/com.apple.xbs/Sources/xnu/bsd/netinet6/in6_pcb.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6_pcbbind"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "in6p_route_copyout"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6p_route_copyout"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "in6p_route_copyin"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6p_route_copyin"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "inet6domain == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6_dinit"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "rip6_pr_output"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "in6_proto.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "rip6_pr_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "sysctl_ip6_forwarding"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%s entry: ip6_forwarding is %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%s return: ip6_forwarding is %d and error is %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "sysctl_ip6_forwarding"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "in6_validate"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6_validate"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "in6_rtqdrain"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6_rtqdrain"
        prototype = ""
        caller = "ip6_drain"
    }
    new {
        args = 0
        anchors {
            new {
                string = "head != (void **)&rt_tables[AF_INET6] || *head == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6_inithead"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "in6_rmx.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6_rtqkill"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "in6_deleteroute"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6_deleteroute"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mld_domifattach"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mld_domifattach"
        prototype = ""
        caller = "ifnet_attach"
    }
    new {
        args = 1
        anchors {
            new {
                string = "!(mli->mli_debug & IFD_ATTACHED)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mld_domifreattach"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: reattached mld_ifinfo for ifp %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mld_domifreattach"
        prototype = ""
        caller = "ifnet_attach"
    }
    new {
        args = 0
        anchors {
            new {
                string = "mld_domifdetach"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: mld_ifinfo not found for ifp %p(%s) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "mli_delete"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mld_domifdetach"
        prototype = ""
        caller = "ifnet_detach"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: mli=%p negative refcnt @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: attached mli=%p is being freed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: ifp not NULL for mli=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: mli %p cannot be freed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: non-zero refcnt mli=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: freeing mld_ifinfo for ifp %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mli_remref"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "%s: called w/mbuf (0x%llx,%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "mld_input"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: report suppressed for %s on ifp 0x%llx(%s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: ignore v1 query on ifp %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: process v1 general query on ifp %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: process v1 query %s on ifp %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: ignore v1 report on ifp %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: ignore v1 query dst %s on ifp %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: process v1 report %s on ifp %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mld_input"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mld_set_version"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: cancel v2 timers on ifp 0x%llx(%s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "mld_v2_cancel_link_timers"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mld_set_version"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mld_v1_update_group"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mld_v1_update_group"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "%s: schedule response to SG query\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "mld_v2_process_group_query"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mld_v2_process_group_query"
        prototype = ""
        caller = "mld_v2_input_query"
    }
    new {
        args = 0
        anchors {
            new {
                string = "mld_v1_process_querier_timers"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mld_v2_dispatch_general_query"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mli == inm->in6m_mli"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: transition from v%d -> v%d on %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: outbound queue full"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "mld_timeout"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "inm->in6m_st[1].iss_asm == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: m_adj(m, -mr)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: m_get*() failed\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mld_v2_enqueue_group_record"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mld_v1_transmit_report"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: v1 outbound queue full\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mld_v1_transmit_report"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "mld_dispatch_queue_locked"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mld_dispatch_queue_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: warning: ia is NULL\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: mldreclen is %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: ip6_output(0x%llx) = %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mld_dispatch_packet"
        prototype = ""
        caller = "mld_dispatch_queue_locked"
    }
    new {
        args = 1
        anchors {
            new {
                string = "mld_flush_relq"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "inm->in6m_in_nrele == true"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: flushing inm %llx on relq ifp %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mld_flush_relq"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "mli->mli_rv > 1"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IN6_IS_ADDR_MULTICAST(addr)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: nothing to do\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: MLDv2 state reached, not MLDv2 mode\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "inm->in6m_debug & IFD_ATTACHED"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: T1 now MCAST_UNDEFINED for 0x%llx/%s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mld_change_state"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "!nd6_init_done"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nd6_init"
        prototype = ""
        caller = "ip6_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "ndopts == NULL in nd6_option @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "uninitialized ndopts in nd6_option @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ndopts->nd_opts_last >= ndopts->nd_opts_search"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nd6_option"
        prototype = ""
        caller = "nd6_options"
    }
    new {
        args = 1
        anchors {
            new {
                string = "ndopts == NULL in nd6_options @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "uninitialized ndopts in nd6_options @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "duplicated ND6 option found (type=%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_options: unsupported option %d - option ignored\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "too many loop in nd opt\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nd6_options"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nd6_drain"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: draining ND6 entries\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nd6_drain"
        prototype = ""
        caller = "ip6_drain"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: failed to add route for a neighbor(%s), errno=%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s: failed to lookup %s (if = %s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "unspec"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nd6_lookup"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "nd6_free"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nd6_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "nd6_init_done"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: failed to join %s (errno=%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nd6_rtrequest"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ifp == NULL in nd6_cache_lladdr @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "from == NULL in nd6_cache_lladdr @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "nd6_cache_lladdr"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(newstate) != ND6_LLINFO_STALE && (newstate) != ND6_LLINFO_DELAY && (newstate) != ND6_LLINFO_PROBE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nd6_cache_lladdr"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nd6_output: can't allocate llinfo for %s (ln=0x%llx, rt=0x%llx)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "nd6_output_list"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "in6_ifaddr_set_dadprogress"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6_ifaddr_set_dadprogress"
        prototype = ""
        caller = "in6_ifaupdate_aux"
    }
    new {
        args = 0
        anchors {
            new {
                string = "nd6_timeout_run >= 0 && nd6_timeout_run < 2"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nd6_service"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "drainer"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: ln(%p) rt(%p) rt_ifp == NULL @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: rt_llinfo(%p) is not equal to ln(%p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: rt(%p) key is NULL ln(%p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "((short)2) != ND6_LLINFO_STALE && ((short)2) != ND6_LLINFO_DELAY && ((short)2) != ND6_LLINFO_PROBE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nd6_service_expired_default_router"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s duplicated (collision count %d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s: %s new (collision count %d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s: in6_pfx_newpersistaddr failed %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "nd6_handle_duplicated_ip6_addr"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: found %u, aging_lazy %u, aging %u, sticky %u, killed %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s is blocked by %d waiters\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nd6_timeout"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "regen_tmpaddr: failed to create a new tmp addr,errno=%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "regen_tmpaddr"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nd6_purge_interface_rti_entries"
                segment = "__TEXT"
                section = "__cstring"
                caller = "nd6_rti_list_wait"
            }
        }
        symbol = "nd6_purge_interface_rti_entries"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "rt->rt_llinfo_purge == nd6_llinfo_purge && ln != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nd6_llinfo_purge"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nd6_llinfo_free"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ln->ln_rt->rt_llinfo == ln"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nd6_llinfo_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nd6_llinfo_refresh"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nd6_llinfo_refresh"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ND6 advertisement"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ND6 unsolicited announcement"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nd6_llreach_alloc"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s%s for %s iface=%s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nd6_llreach_alloc"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "nd6_dad_start: ifa->ifa_ifp == NULL @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "nd6_dad_start"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "optimistic "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "immediately "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!dp->dad_attached"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nd6_dad_start: not a tentative or optimistic address %s(%s)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: starting %sDAD %sfor %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nd6_dad_start"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nd6_need_cache(ifp)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sdl && (void *)sa != (void *)sdl"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sin6 && (void *)sa != (void *)sin6"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sa->sa_len == sizeof *sin6"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sa->sa_len <= sizeof(*sdl)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sdla->sdl_alen == ETHER_ADDR_LEN"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nd6_alt_node_addr_decompose"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "rt->rt_flags & RTF_LLINFO"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "rt->rt_llinfo"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: failed to add/update host route to %s.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s: Successfully added/updated host route to %s [lr=0x%llx]\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nd6_alt_node_present"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nd6_dad_find"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: a looped back NS message is detected during DAD for if=%s %s. Ignoring.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "nd6_dad_find"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "dp->dad_ifa == ifa"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nd6_dad_detach"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = ", tx unsolicited NA with O=1"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: DAD structure not found.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s: DAD complete for %s - duplicate found.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s: possible hardware address duplication detected, disabling IPv6 for interface.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s: manual intervention may be required.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "nd6_dad_timer: called with null parameter\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_dad_timer: DAD structure not found\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_dad_timer: called with duplicated address %s(%s)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_dad_timer: not a tentative or optimistic address %s(%s)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: could not run DAD, driver problem?\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: duplicate IPv6 address %s if:%s [timer]\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: a looped back NS message is detected during DAD for %s. Another DAD probe is being sent on interface %s.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: DAD complete for %s - no duplicates found %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: DAD completed while a looped back NS message is detected during DAD for %s om interface %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: NS in/out/loopback=%d/%d/%d, NA in=%d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nd6_dad_timer"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: dad %p negative refcnt @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: attached dad=%p is being freed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "dad_remref"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ro6 == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "in6_are_addr_equal_scoped(&ip6->ip6_dst, &ro6->ro_dst.sin6_addr, ip6_input_getdstifscope(m), ro6->ro_dst.sin6_scope_id)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nd6_prproxy_isours"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "rt == NULL && ro6->ro_rt == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "rt != NULL || ro6->ro_rt == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: found incorrect prefix proxy route for dst %s on %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: found prefix proxy route for dst %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: allocated prefix proxy route for dst %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: failed to find forwarding prefix proxy entry for dst %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nd6_proxy_find_fwdroute"
        prototype = ""
        caller = "ip6_forward"
    }
    new {
        args = 2
        anchors {
            new {
                string = "pr_cur != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!(pr_up->ndpr_stateflags & NDPRF_IFSCOPE)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nd6_prproxy_prelist_update"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "NUD/AR"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!RB_EMPTY(&pr->ndpr_prproxy_sols)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pr->ndpr_prproxy_sols_cnt < max_stgt"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pr->ndpr_prproxy_sols_cnt != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!TAILQ_EMPTY(&soltgt->soltgt_q)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "soltgt->soltgt_cnt != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Forwarding NS (%s) from %s to %s who has %s, originally on %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "nd6_prproxy_ns_input"
        prototype = ""
        caller = "nd6_ns_input"
    }
    new {
        args = 1
        anchors {
            new {
                string = "!IN6_IS_ADDR_UNSPECIFIED(&daddr) && fwd_ifp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pr == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!IN6_IS_ADDR_UNSPECIFIED(&daddr)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "soltgt == NULL || TAILQ_EMPTY(&soltgt->soltgt_q)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Forwarding NA (DAD) from %s to %s tgt is %s, originally on %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: Forwarding NA (NUD/AR) from %s to %s (was %s) tgt is %s, originally on %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "nd6_prproxy_na_input"
        prototype = ""
        caller = "nd6_na_input"
    }
    new {
        args = 0
        anchors {
            new {
                string = "up->ndprl_up == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!prproxy || ((pr->ndpr_stateflags & NDPRF_ONLINK) && !(pr->ndpr_stateflags & NDPRF_IFSCOPE))"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pr_up != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!prproxy || ((pr_up->ndpr_stateflags & NDPRF_ONLINK) && !(pr_up->ndpr_stateflags & NDPRF_IFSCOPE))"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nd6_prproxy_prelist_setroute"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "max_stgt != 0 || (pr->ndpr_prproxy_sols_cnt == 0 && RB_EMPTY(&pr->ndpr_prproxy_sols))"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nd6_prproxy_sols_purge"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "soltgt->soltgt_cnt > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "TAILQ_EMPTY(&soltgt->soltgt_q)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nd6_soltgt_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "defrouter_delreq"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: removing default router %s, scoped=%d, static=%d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: failed to delete default router %s on %s scoped %d (errno = %d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "defrouter_delreq"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ndi->ndefrouters >= 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: freeing route to %s with gateway %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "defrtrlist_del"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "selected_dr == NULL && installed_dr == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nd_defrouter_busy"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s:%d: Return early. NULL interface"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d: NULL interface passed. Setting to default interface %s.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d: Return early. Default router select called for loopback.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d: Return early. Default router select called for interface %s in IPV6_ROUTER_MODE_EXCLUSIVE\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d: Return early. Default router is empty.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d: Return early. Interface %s's nd_ifinfo not initialized.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d: Return early. %s does not have any default routers.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "Ignoring dummy entry for default router."
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: Ignoring router %s that has locally hosted address.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s:%d: Fast forward default router selection as interface %s has learned only one default router and there's nothing else to choose from.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "defrouter_select: more than one default router is installed for interface :%s.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s:%d: Interface %s no longer has any default routers. Abort.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d: Iterate default router list again for interface %s, as the list seems to have changed during release-reaquire of global nd6_mutex lock.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s:%d: Between release and re-acquire of global nd6_mutex lock, the list seems to have changed and it does not have any default routers for interface %s.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d: Found a better router for interface %s. Installing new default route.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d: Need to reinstall default route for interface %s as its scope has changed.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d: No need to change the default route for interface %s.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "defrouter_select"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ndi->nprefixes != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "scoped"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "non-scoped"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nd6_prelist_add: failed to make the prefix %s/%d on-link %s on %s (errno=%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nd6_prelist_add"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ndi->nprefixes > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: unexpected (missing) refcnt ndpr=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "prelist_remove: failed to make %s/%d offlink on %s, errno=%d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: error unscoping %s/%d from %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s/%d unscoped, previously on %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "prelist_remove"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: ndpr %p negative refcnt @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: freeing ndpr %p with outstanding address reference (%d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ndpr_remref"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nd_prefix_busy"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pfxlist_onlink_check: failed to make %s/%d offlink, errno=%d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: ifnet_get_address_list_family_internal failed"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "pfxlist_onlink_check"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "prproxy"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nd6_prefix_offlink: %s/%d on %s scoped=%d is already off-link\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_prefix_offlink: failed to delete route: %s/%d on %s, scoped %d, (errno = %d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nd6_prefix_offlink"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "errorp != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s is already configured!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s: invalid prefix length %d for %s, ignored\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: no link-local address (%s)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: no CGA available (%s)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: no CLAT46 available (%s)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: failed to make ifaddr %s on %s (errno=%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "in6_pfx_newpersistaddr"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "newia != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!(ia0->ia6_flags & IN6_IFF_AUTOCONF)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "in6_tmpifadd: failed to find a unique random IFID\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "in6_tmpifadd: failed to add address.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "in6_tmpifadd: no public address\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "in6_tmpifadd"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nd6_prefix"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nd6_defrouter"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nd6_rtr_init"
        prototype = ""
        caller = "nd6_init"
    }
    new {
        args = 1
        anchors {
            new {
                string = "defrouter_addreq"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: ignoring router %s, scoped=%d, static=%d on advertising interface\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: adding default router %s, scoped=%d, static=%d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: ignoring router %s, rti prefix %s, scoped=%d, static=%d on advertising interface\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Default router %s mapped to "
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: failed to add default router %s on %s scoped %d (errno = %d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "defrouter_addreq"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "defrtrlist_update_common"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ndi->ndefrouters != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: ignoring router addition as we have hit the max limit of %d for max default routers.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: allocating defrouter %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "defrtrlist_update"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: nddr %p has no debug structure @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "nddr_trace"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nddr_trace"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: attached nddr %p is being freed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: nddr %p cannot be freed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "nddr_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: ndpr %p has no debug structure @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ndpr_trace"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ndpr_trace"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: attached ndpr %p is being freed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: ndpr %p cannot be freed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: ndpr %p route %p not freed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: ndpr %p non-zero solicitors count (%d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: ndpr %p non-empty solicitors tree @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ndpr_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "nd6_prefix_onlink_common"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: %s/%d on %s scoped=%d is already on-link\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_prefix_onlink: failed to find any ifaddr to add route for a prefix(%s/%d) on %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_prefix_onlink: failed to add route for a prefix (%s/%d) on %s, gw=%s, mask=%s, flags=%x, scoped=%d, errno = %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nd6_prefix_onlink_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "new_rti != NULL && dr != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nd6_rtilist_update"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nd6_rtilist_update"
        prototype = ""
        caller = "nd6_ra_input"
    }
    new {
        args = 0
        anchors {
            new {
                string = "nd6_rti_delreq"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nd6_rti_delreq"
        prototype = ""
        caller = "nd6_prefix_onlink_common"
    }
    new {
        args = 0
        anchors {
            new {
                string = "nd6_rti_select"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nd6_rti_select"
        prototype = ""
        caller = "nd6_prefix_offlink"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: name length err [len=%u]\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: input buffer size error [len=%zu]\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "net.inet6.send.cga_parameters"
                segment = "__TEXT"
                section = "__cstring"
                caller = "mac_system_check_info"
            }
            new {
                string = "%s: mac_system_check_info denied.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s: could not allocate marshaling buffer.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "iov->iov_len < UINT16_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/AppleInternal/Library/BuildRoots/d3a62b52-2ef5-11ef-9ecd-e2437461156c/Library/Caches/com.apple.xbs/Sources/xnu/bsd/netinet6/nd6_send.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: marshalled data too large.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "%s: input too large [octets=%ld].\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: in6_cga_start error=%d.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "sysctl_cga_parameters"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "bad if_index on interface from route @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "rip6_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "rip6_attach @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "rip6_attach"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IN6_IFEXTRA(ifp) != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "scope6_ifattach"
        prototype = ""
        caller = "in6_ifattach_prelim"
    }
    new {
        args = 0
        anchors {
            new {
                string = "sa6_recoverscope: assumption failure (non 0 ID): %s%%%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
        }
        symbol = "sa6_recoverscope"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ntohs(in6->s6_addr16[1]) == ifscope"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "in6_verify_ifscope"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "udp6_output: IPV6_V6ONLY option was set for a connected socket\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "in6p->inp_sndinprog_cnt > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/AppleInternal/Library/BuildRoots/d3a62b52-2ef5-11ef-9ecd-e2437461156c/Library/Caches/com.apple.xbs/Sources/xnu/bsd/netinet6/udp6_output.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "udp6_output"
        prototype = ""
        caller = "udp6_send"
    }
    new {
        args = 0
        anchors {
            new {
                string = "UDP6: M_MCAST is set in a unicast packet.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "udp6_input"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "udp6_abort"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "udp6_usrreq.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "udp6_abort"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s[%d, %s]: defuncting so 0x%llu drop ipv6 multicast memberships"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s[%d, %s]: defuncting so 0x%llu drop ipv4 multicast memberships"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "udp6_defunct"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "salt_tmp != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/AppleInternal/Library/BuildRoots/d3a62b52-2ef5-11ef-9ecd-e2437461156c/Library/Caches/com.apple.xbs/Sources/xnu/bsd/netinet6/ip6_id.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ip6_randomid"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "key_allocsp: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_allocsp: Invalid direction is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_allocsp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: direction mismatched (TREE=%d SP=%d), anyway continue.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_allocsp"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "key_checkrequest: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_checkrequest: Invalid policy defined. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_checkrequest: error %d returned from key_acquire.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_checkrequest"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "key_freesp: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "key_freesp"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "key_msg2sp: NULL pointer was passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_msg2sp: invalid length. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_msg2sp: Invalid msg length.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_msg2sp: invalid ipsecrequest.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_msg2sp: invalid ipsecrequest length.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_msg2sp: invalid proto type=%u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_msg2sp: invalid mode=%u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_msg2sp: reqid=%d range violation, updated by kernel.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "key_msg2sp: invalid level=%u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_msg2sp: invalid request ipsecrequest len invalid for src address.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_msg2sp: invalid request invalid source address length.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_msg2sp: invalid request ipsecrequest len invalid for dst address.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_msg2sp: invalid request invalid dest address length.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_msg2sp: becoming tlen < 0.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_msg2sp: invalid policy type.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_msg2sp"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "key_sp2msg: NULL pointer was passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_getspreqmsglen returned length %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_sp2msg"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "key_spdacquire: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_spdacquire: called but there is request. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_spdacquire: policy mismathed. IPsec is expected. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "key_spdacquire"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "key_delsah: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_delsah"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "key_delsah"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "key_delsav: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "key_delsav"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "key_ismyaddr: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "key_ismyaddr"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: total stats for %u calls\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "key_timehandler"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: walked %u SPDs\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: walked %llu SAs: LARVAL SAs %u, MATURE SAs %u, DYING SAs %u, DEAD SAs %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: walked %u SAHs: DEAD SAHs %u, EMPTY SAHs %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: SAH search cost %d iters per call\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "key_spdexpire: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_expire: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_expire: Why was SA index in SA NULL. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_expire: invalid proto is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_timehandler: spbufcount overflow, ipsec policy count %u.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_timehandler: savbufcount overflow, ipsec sa count %u.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_timehandler: invalid sav->state (queue: %d SA: %d): kill it anyway\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_timehandler"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "key_freereg: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "key_freereg"
        prototype = ""
        caller = "key_detach"
    }
    new {
        args = 0
        anchors {
            new {
                string = "key_parse: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_parse: invalid message length.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_parse: PF_KEY version %u is mismatched.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_parse: must specify satype when msg type=%u.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_parse: illegal satype=%u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_parse: type %u isn't supported.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_parse"
        prototype = ""
        caller = "key_output"
    }
    new {
        args = 0
        anchors {
            new {
                string = "key_sa_recordxfer called with sav == NULL @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "key_sa_recordxfer"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "key_sa_chgstate called with sav == NULL @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "key_sa_chgstate"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "key_sa_stir_iv called with sav == NULL @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "key_sa_stir_iv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "sah != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(sah->flags & SECURITY_ASSOCIATION_CUSTOM_IPSEC) == SECURITY_ASSOCIATION_CUSTOM_IPSEC"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sa_present == false"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "key_release_custom_ipsec"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "key_do_allocsa_policy"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "key_do_allocsa_policy: lifetime_current is NULL.\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "key_do_allocsa_policy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "key_do_get_translated_port"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "key_do_get_translated_port: lifetime_current is NULL.\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "key_natt_get_translated_port"
        prototype = ""
        caller = "esp_output"
    }
    new {
        args = 0
        anchors {
            new {
                string = "key_newsaidx: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "flags == SECURITY_ASSOCIATION_PFKEY || flags == SECURITY_ASSOCIATION_CUSTOM_IPSEC"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "key_newsah"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "key_do_allocsa_policy: invalid proto is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "key_send_delete"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "key_acquire: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_acquire: invalid proto is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "totlen <= UINT16_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "key_acquire"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "key_getspi: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_getspi: invalid satype is passed.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_getspi: custom ipsec exists\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_getspi: security association head is dead\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_do_getnewspi: SPI %u exists already.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_do_getnewspi: to allocate spi is failed.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_getspi"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "key_newsa: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_newsa: invalid message is passed.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_newsa: invalid hard lifetime ext len.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_newsav"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "key_setsaval: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_setsaval: invalid message size.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_setsaval: invalid auth key ext len. len = %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_setsaval: invalid key_auth values.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_setsaval: invalid encryption key ext len. len = %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_setsaval: invalid ESP algorithm.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_setsaval: invalid key_enc value.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_setsaval: No more memory.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_setsaval: invalid SA type.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_setsaval: invalid hard lifetime ext len.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_setsaval: invalid hard lifetime value %llu.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_setsaval: invalid soft lifetime ext len.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_setsaval: invalid soft lifetime value %llu.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_setsaval"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "key_update: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_update: invalid satype is passed.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_update: no SA index found.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_update: no such a SA found (spi:%u)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_update: protocol mismatched (DB=%u param=%u)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_update: pid mismatched (DB:%u param:%u)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_update: security association head is dead\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_update"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "key_getmsgbuf_x1: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "key_getmsgbuf_x1"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "key_add: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_add: invalid satype is passed.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_add: custom ipsec exists\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_add: SA already exists.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_add: security association head is dead\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_add"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "key_delete: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_delete: invalid satype is passed.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_delete: doing delete all.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_delete: no SA found.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_delete_all: invalid sav->state (queue: %d SA: %d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_delete"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "key_get: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_get: invalid satype is passed.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_get: no SA found.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_get: there was invalid proto in SAD.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_get"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "key_acquire2: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_acquire2: must specify sequence number.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_acquire2: invalid satype is passed.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_acquire2: a SA exists already.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_acquire2: error %d returned from key_acquire.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_acquire2"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "key_register: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "(*ealgo->ivlen)(ealgo, NULL) <= UINT8_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "key_register: socket exists already.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_register"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "key_flush: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_flush: invalid satype is passed.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_flush: No more memory.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_flush"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "key_dump: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_dump: invalid satype is passed.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_dump: bufcount overflow, ipsec sa count %u.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_dump: No more memory.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_dump: there was invalid proto in SAD.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_dump"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "key_promisc: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "key_promisc"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "key_spdadd: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_spdadd: Invalid SP direction.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_spdadd: Invalid policy type.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_spdadd: some policy requests part required.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_spdadd: a SP entry exists already.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_spdadd: invalid lifetime value %llu.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_spdadd: invalid use time value %llu.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_spdadd"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "key_getsp: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "key_getsp"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "key_spddelete: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_spddelete: Invalid SP direction.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_spddelete: no SP found.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_spddelete"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "key_spdget: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_spdget: invalid message is passed.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_spdget: no SP found id:%u.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_spdget"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "key_spddump: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_spddump: bufcount overflow, ipsec policy count %u.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_spddump: No more memory.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_spddump"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "key_spdflush: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_spdflush: No more memory.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_spdflush"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "key_spddelete2: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_spddelete2: invalid message is passed.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_spddelete2: no SP found id:%u.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_spddelete2"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: invalid message is passed. missing session-id.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: invalid message is passed. short session-id.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: invalid message is passed. missing stat args.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: invalid message is passed. short stat args.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: No active SAs.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: No more memory.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: No SAs requested.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: invalid message is passed. sa stat extlen shorter than requested stat length.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: Error finding SAs.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: No SAs found.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: No bufs to dump stats.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "key_getsastat"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "key_spdenable: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_spdenable: invalid message is passed.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_spdenable: no SP found id:%u.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_spdenable"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "key_spddisable: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_spddisable: invalid message is passed.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_spddisable: no SP found id:%u.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_spddisable"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "key_migrate: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_migrate: invalid satype is passed.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_migrate: no mature SAH found.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_migrate: custom ipsec exists\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_migrate: Failed to migrate SA to new SAH.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_migrate"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "key_align: NULL pointer is passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "invalid mbuf passed to key_align @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_align: duplicate ext_type %u is passed.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_align: invalid ext_type %u is passed.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_align: ext type %u invalid ext length %d offset %d sadb message total len %zu is passed.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_align"
        prototype = ""
        caller = "key_parse"
    }
    new {
        args = 1
        anchors {
            new {
                string = "key_output: NULL pointer was passed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "key_output: not M_PKTHDR ?? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "key_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "keydomain == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_key_dinit"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "key_usrreq: key_usrreq results %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "key_attach"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "audit_worker_cv"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "audit_drain_cv"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "audit_watermark_cv"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "audit_fail_cv"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "audit_init"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Cannot get audit control port\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "audit_send_trigger"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Cannot get audit control port for analytics \n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "audit_send_analytics"
        prototype = ""
        caller = "audit"
    }
    new {
        args = 0
        anchors {
            new {
                string = "domain"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "protocol"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "accounting off"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "setaudit:auid"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "setaudit:port"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "setaudit:machine"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "setaudit:as_success"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "setaudit:as_failure"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "setaudit:asid"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "setaudit_addr:auid"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "setaudit_addr:as_success"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "setaudit_addr:as_failure"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "setaudit_addr:asid"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "setaudit_addr:type"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "setaudit_addr:port"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "operation"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "protection"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "inherit"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "msg ID"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "src dir fd"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dst dir fd"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "command"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "howto"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sem ID"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "which"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "value"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "newval"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "new mask"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "prev mask"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sflags"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "am_success"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "am_failure"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "target port"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "task port"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kaudit_to_bsm(): BSM conversion requested forunknown mac_audit data type %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "setkmask:as_success"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "setkmask:as_failure"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "setqctrl:aq_minfree"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "setumask:as_success"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "setumask:as_failure"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "setsmask:as_success"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "setsmask:as_failure"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "setclass:ec_event"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "setclass:ec_class"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "setpmask:as_success"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "setpmask:as_failure"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "setfsize:filesize"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kau_close: invalid address family @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "audit_bsm.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kaudit_to_bsm"
        prototype = ""
        caller = "audit_worker"
    }
    new {
        args = 0
        anchors {
            new {
                string = "min fd"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "close-on-exec flag"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fd flags"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "offset"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "audit_sys_fcntl"
        prototype = ""
        caller = "kaudit_to_bsm"
    }
    new {
        args = 0
        anchors {
            new {
                string = "arg: "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "audit_arg_mac_string"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "auditpipe"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "audit_pipe_init"
        prototype = ""
        caller = "audit_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "audit_pipe"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "audit_pipe_open"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "&ap->ap_cv"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "audit_pipe_read"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "auditsessions"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "audit_session_init"
        prototype = ""
        caller = "audit_init"
    }
    new {
        args = 1
        anchors {
            new {
                string = "audit_sdev_cv"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "audit_sdev_open"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "&asdev->asdev_cv"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "audit_sdev_read"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.audit.user"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "audit"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.protected-audit-control"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "auditctl"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "&audit_drain_cv"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "audit_rotate_vnode: Couldn\\'t close audit file.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "audit_rotate_vnode"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "audit_worker_init: Couldn\\'t create audit_worker thread @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "audit_worker_init"
        prototype = ""
        caller = "audit_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "audit_worker_process_record: BSM_FAILURE\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "kaudit_to_bsm returned %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "audit_worker"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "audit_record_write: free space below size of audit queue, failing stop\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Audit store overflow; record queue drained. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Audit log space exhausted and fail-stop set. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "audit_worker: write error %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "audit_worker: write error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "audit_record_write"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Re-initialisation of pthread kext callbacks. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "pthread_kext_register called without callbacks pointer. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pthread_kext_register"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "workq_mark_exiting called twice @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "workq_mark_exiting"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Quantum expired for thread that doesn't support cooperative workqueue @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Thread should not have workq bucket of QoS UN @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "workq_kern_quantum_expiry_reevaluate"
        prototype = ""
        caller = "kevent_ast"
    }
    new {
        args = 0
        anchors {
            new {
                string = "failed to allocate devpath string! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "bsd_rooted_ramdisk"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "kdebug: PAST EVENT: debugid %#8x: time %lld from CPU %u (barrier at time %lld)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kdebug: RETRO EVENT: debugid %#8x: time %lld from CPU %u (barrier at time %lld)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kdebug: invalid kdebug mode %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kdebug_common.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kernel_debug_read"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "create_buffers_triage shouldn't be called once we have inited the triage system. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kdebug_triage.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "create_buffers_triage"
        prototype = ""
        caller = "kdebug_startup"
    }
    new {
        args = 2
        anchors {
            new {
                string = "ktriage_extract: kernel_debug_read failed with %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "KTriage Error: Subsystem code %u is invalid\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "KTriage: Subsystem %d reported %u with argument 0x%lx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s(arg = 0x%lx) %s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ktriage_extract"
        prototype = ""
        caller = "populate_corpse_crashinfo"
    }
    new {
        args = 0
        anchors {
            new {
                string = "ktriage_register_subsystem_strings: set subsystem %u strings\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "ktriage_register_subsystem_strings"
        prototype = ""
        caller = "decmpfs_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOP-???"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kernel_debug_register_callback"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kdebug: invalid name for coprocessor: %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kdebug: invalid name for coprocessor: %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kdebug: no callback for coprocessor `%s' @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kdebug_register_coproc"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "start_kern_tracing"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kdebug: allocation failed, kernel tracing not started: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "kernel tracing started with %u events, filter = %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "kdebug: unexpected filter type `%c'\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kdebug: cannot parse `%s' as integer\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kdebug: class 0x%lx is invalid\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kdebug: C 0x%lx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "kdebug: class-subclass 0x%lx is invalid\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "kdebug: S 0x%lx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "kernel_debug_early_end() not call on boot processor @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "early trace done"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kdebug_trace_start"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "kdebug: invalid procfilt flags %x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kernel_debug_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kdbg_wait() called with interrupts disabled @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kdbg_wait"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Accounting resumed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Accounting suspended\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "acctwatch"
        prototype = ""
        caller = "acct"
    }
    new {
        args = 2
        anchors {
            new {
                string = "aio_close"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_aio_close"
        prototype = ""
        caller = "fp_close_and_unlock"
    }
    new {
        args = 1
        anchors {
            new {
                string = "aio_exit"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_aio_exit"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Negative total AIO count! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "proc %p: p_aio_total_count accounting mismatch @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "aio_proc_remove_done_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "aio_workq_entry %p being freed while still enqueued @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "aio_free_request"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Close and exit flags set at the same time @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "do_aio_cancel_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Trying to remove an entry from a work queue, but it is not on a queue @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "aio_work_thread"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "lio_pending accounting mistake @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "do_aio_completion_and_unlock"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "auth against NULL credential @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kauth_authorize_generic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "KAUTH_PROCESS_CANSIGNAL not implemented @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kauth_authorize_process_callback"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "tvotohz: negative time difference %ld sec %ld usec\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "tvtohz"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.custom-coredump-location"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s/%s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/cores/core.%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "coredump"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kauth external resolver %d failed to de-register.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "kauth_resolver_identity_reset"
        prototype = ""
        caller = "usrctl"
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.identitysvc"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kauth_resolver: memberd is not setting valid result codes (assuming always successful)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: resolver %d died, waiting for a new one\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: resolver reported transient failure for request %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: resolver returned unexpected status %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "identitysvc"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "external resolver died"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "kauth_resolver_getwork"
        prototype = ""
        caller = "identitysvc"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: external resolver died\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "int kauth_resolver_getwork_continue(int)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kauth_resolver_getwork_continue"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "kauth data structure corrupted. kauth identity 0x%p with %u groups, greater than max of %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "can't allocate kauth identity with both uid and gid @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "can't allocate kauth identity with both gid and supplementary groups @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kauth_cred_cache_lookup"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kauth_identity: can't insert record with both UID and GID as key @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kauth_identity: can't insert record without UID or GID as key @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kauth_identity_register_and_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kauth external resolver timed out (%d timeout(s) of %d seconds).\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "kauth_resolver_submit"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: kauth external resolver died while while waiting for work to complete\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "int __KERNEL_IS_WAITING_ON_EXTERNAL_CREDENTIAL_RESOLVER__(struct kauth_resolver_work *)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__KERNEL_IS_WAITING_ON_EXTERNAL_CREDENTIAL_RESOLVER__"
        prototype = ""
        caller = "kauth_resolver_submit"
    }
    new {
        args = 0
        anchors {
            new {
                string = "current_cached_proc_cred(%p) called but current_proc() is %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "current_cached_proc_cred_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kauth_cred_t backref mismatch: cred:%p cred->cr_rw:%p cred_rw:%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kauth_cred_verify_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kauth_cred_ref: cred %p over-retained @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kauth_cred_panic_over_retain"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kauth_cred_unref: cred %p over-released @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kauth_cred_panic_over_released"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Over-release of the kernel credentials @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: freeing credential with active long-term ref @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kauth_cred_free"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kauth_cred_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ucred_rw backref mismatch: cred_rw:%p cred_rw->crw_cred:%p cred: %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kauth_cred_rw_verify_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "cs_enforcement_disable"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "cs_relax_platform_task_ports"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "cs_library_val_enable"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cs_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "CODE SIGNING: cs_allow_invalid() not allowed: pid %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "CODE SIGNING: cs_allow_invalid() allowed: pid %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "CODE SIGNING: cs_allow_invalid() not allowed by pmap: pid %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "cs_allow_invalid"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "CODE SIGNING: cs_invalid_page(0x%llx): p=%d[%s]\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "CODE SIGNING: cs_invalid_page(0x%llx): p=%d[%s] final status 0x%x, %s page%s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "denying"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "allowing (remove VALID)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = " sending SIGKILL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cs_invalid_page"
        prototype = ""
        caller = "vm_fault_enter_prepare"
    }
    new {
        args = 0
        anchors {
            new {
                string = "CoreEntitlements: This API is no longer supported\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "csblob_entitlements_dictionary_set"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "/chosen/asmb"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "lp-sip0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "lp-sip1"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "lp-sip2"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "unexpected size %xu for uint64 property '%s' @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "internal-use-only-unit"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/chosen/manifest-properties"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "csr-allow-device-configuration"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "csr_bootstrap"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vn_open_auth(fmode: %d, cmode: %d) failed with error: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "kern_write_file() failed with error: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kern_direct_file(%s): vp size %qd, alloc %qd, mp free %qd, keep free %qd\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "kern_direct_file(%s): Not backed by block device.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "max io 0x%qx bytes\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "kern_open_file_for_direct_io"
        prototype = ""
        caller = "__Z16IOPolledFileOpenPKcjyyPvmPP18IOPolledFileIOVarsPP6OSDataPhPm"
    }
    new {
        args = 0
        anchors {
            new {
                string = "kern_close_file_for_direct_io(%p)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "vnode_close(%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "%s: unlink1(%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "kern_close_file_for_direct_io"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kern_close_file_for_direct_io"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "_DKIOCCSPINEXTENT(%d) 0x%qx, 0x%qx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "_DKIOCCSUNPINEXTENT(%d) 0x%qx, 0x%qx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kern_ioctl_file_extents"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "file %d/%p in flux during exec of %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "fdt_exec"
        prototype = ""
        caller = "exec_mach_imgact"
    }
    new {
        args = 0
        anchors {
            new {
                string = "fdfree: found fp with UF_RESERVED @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "fdt_invalidate"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: pid %d refc: %u != 0 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "fileproc_free"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fileproc_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "%s: called with fileproc in flux (%d/:%p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "fp_close_and_unlock"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bad wait queue for waitq_wakeup64_all %p (%sfp:%p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "guarded "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bad select_conflict_queue @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "fpdrain"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fp_close_and_unlock"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "CODE SIGNING: Failed to find original file for supplemental signature attachment\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "sys_fcntl_nocancel"
        prototype = ""
        caller = "sys_fcntl"
    }
    new {
        args = 2
        anchors {
            new {
                string = "ftbl_waitfd"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dup2"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kq(%p) invalid refcount %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kqworkloops_dealloc"
        prototype = ""
        caller = "fdt_invalidate"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: proc mismatch (kq->kq_p=%p != p=%p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "knote_fdclose"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "knote_fdclose"
        prototype = ""
        caller = "fp_close_and_unlock"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: - bad wait_result (%d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kqueue_scan"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kqueue_scan"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "unknown kqwl thread qos update operation: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "kqworkloop_update_threads_qos"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Unexpected wait result: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "filt_wlwait_continue"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "knote lock context not found: %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "knote_lock_slow"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s[%d](%p, %ld) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "filt_bad_event"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "filt_bad_event"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "filt_bad_touch"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "filt_bad_touch"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "filt_bad_process"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "filt_bad_process"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "KNOTE() called concurrently on knote %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "knote_post"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "filter %d cannot change QoS @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "knote_adjust_qos"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: - invalid wait_result (%d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kqueue_scan_continue"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kqueue_scan_continue"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: so=%p so_pcb=%p lr=%p ref=%d lrh= %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "event_lock"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: so=%p NO PCB usecount=%d lr=%p lrh= %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "so->so_flags & SOF_PCBCLEARING"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "event_unlock"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: so=%p NULL NO so_pcb %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "event_getlock"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pid %d (tid:%llu): copyout of return_to_kernel ast flags failed with ast_addr = %llu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "kevent_ast"
        prototype = ""
        caller = "ast_taken_user"
    }
    new {
        args = 0
        anchors {
            new {
                string = "ctl_enqueuembuf"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ctl_enqueuembuf"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: %u:%u m_pkthdr.len is 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "ctl_enqueuembuf_list"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: m_allocpacket_internal(%lu) failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "ctl_enqueuedata"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ctl_deregister"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ctl_deregister"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ctl_ctloutput: ctl %s returned len (%lu) > sopt_valsize (%lu)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ctl_ctloutput"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ctl_bind so_pcb null @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ctl_bind kctl null @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ctl_bind"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ctl_setup_kctl so_pcb null @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ctl_setup_kctl"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ctl_connect so_pcb null @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ctl_connect kctl null @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ctl_connect"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kcb->usecount"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ctl_disconnect"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s - shrunk to %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "ctl_sbrcv_trim"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ctl_usr_rcvd"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ctl_lock: so=%p NO PCB! lr=%p lrh= %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ctl_lock: so=%p so_pcb=%p lr=%p ref=%x lrh= %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ctl_lock"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ctl_unlock: so=%p usecount=%x lrh= %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ctl_unlock: so=%p NO PCB usecount=%x lr=%p lrh= %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ctl_unlock"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ctl_getlock: so=%p usecount=%x lrh= %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ctl_getlock: so=%p NULL NO so_pcb %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ctl_getlock"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s - grown to %d error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "ctl_rcvbspace"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ctl_rcvbspace"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s no space in table @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s %p for %p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "kctl_tbl_growing"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s kctl_tbl_size %lu too big\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "kctl_tbl_grow"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ctl_register"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kcb_find_socket"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kcb_find_socket"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "invalid mac policy extension data @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "exec_spawnattr_getmacpolicyinfo"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.spawn-subsystem-root"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.private.spawn-panic-crash-behavior"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.private.spawn-driver"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "posix_spawn"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "exe_boothash_salt"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "exe_boothash_salt_generate"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "load_init_program: attempting to load %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "load_init_program: failed loading %s: errno %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Process 1 exec of %s failed, errno %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "/sbin/launchd"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "load_init_program"
        prototype = ""
        caller = "bsdinit_task"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: disallowing arm64e binary with invalid RO range\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: disallowing arm64e binary with invalid dynlinker RO range\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: allowing binary \"%s\" built against preview arm64e ABI\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: (customer builds will need custom boot-args to run this binary!)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: not running binary \"%s\" built against preview arm64e ABI\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: (to allow this, add \"-arm64e_preview_abi\" to boot-args)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: disallowing arm64 platform driverkit binary \"%s\", should be arm64e\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: disallowing emulated x86 driverkit binary \"%s\", should be arm64\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.developer.web-browser-engine.host"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOVnodeHasEntitlement"
            }
            new {
                string = "com.apple.developer.web-browser-engine.rendering"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOVnodeHasEntitlement"
            }
            new {
                string = "com.apple.pac.shared_region_id"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOVnodeGetEntitlement"
            }
            new {
                string = "setting hardened runtime with entitlement mask= 0x%x on task: pid = %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "setting platform binary on task: pid = %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "clearing platform binary on task: pid = %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Disabling some mach hardening on task due to 3P plugins: pid = %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "com.apple.private.enable-coredump-on-panic-seed-privacy-approved"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOVnodeHasEntitlement"
            }
            new {
                string = "com.apple.private.enable-coredump-on-panic"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOVnodeGetEntitlement"
            }
            new {
                string = "%.9s-%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "exec_mach_imgact"
        prototype = ""
        caller = "exec_activate_image"
    }
    new {
        args = 0
        anchors {
            new {
                string = "/Library/Apple/usr/libexec/oah/libRosettaRuntime"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "is_rosetta_supported"
        prototype = ""
        caller = "exec_mach_imgact"
    }
    new {
        args = 1
        anchors {
            new {
                string = "/dev/fd/%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "exec_extract_strings"
        prototype = ""
        caller = "exec_mach_imgact"
    }
    new {
        args = 0
        anchors {
            new {
                string = "/dev/null"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "exec_handle_sugid"
        prototype = ""
        caller = "exec_mach_imgact"
    }
    new {
        args = 0
        anchors {
            new {
                string = "pfz=0x%llx"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pfz=0x%x"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to add the pfz string with error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "MallocNanoZone=1"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "stack_guard="
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "malloc_entropy="
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ptr_munge="
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "main_stack="
                segment = "__TEXT"
                section = "__cstring"
                caller = "_strlen"
            }
            new {
                string = "main_stack=0x%llx,0x%llx,0x%llx,0x%llx"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "executable_file="
                segment = "__TEXT"
                section = "__cstring"
                caller = "_strlen"
            }
            new {
                string = "executable_file=0x%llx,0x%llx"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dyld_file="
                segment = "__TEXT"
                section = "__cstring"
                caller = "_strlen"
            }
            new {
                string = "dyld_file=0x%llx,0x%llx"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "executable_cdhash="
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "executable_boothash="
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "subsystem_root_path="
                segment = "__TEXT"
                section = "__cstring"
                caller = "_strlen"
            }
            new {
                string = "subsystem_root_path=%s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ptrauth_disabled=1"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "arm64e_abi="
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "th_port="
                segment = "__TEXT"
                section = "__cstring"
                caller = "_strlen"
            }
            new {
                string = "th_port=0x%x"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "MallocExperiment="
                segment = "__TEXT"
                section = "__cstring"
                caller = "_strlen"
            }
            new {
                string = "MallocExperiment=0x%llx"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to add the libmalloc experiment factors string with error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "dyld_hw_tpro=1"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to add dyld hw tpro setting with error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "dyld_hw_tpro_pagers=1"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to add dyld hw tpro pager setting with error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "HardenedRuntime=0x%x"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to add hardened runtime flag with error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "exec_add_apple_strings"
        prototype = ""
        caller = "exec_mach_imgact"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s0x%llx"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = ",0x%llx"
                segment = "__TEXT"
                section = "__cstring"
                caller = "scnprintf"
            }
        }
        symbol = "exec_add_entropy_key"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "com.apple.developer.kernel.extended-virtual-addressing"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.security.cs.jit-write-allowlist"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.developer.cs.jit-write-allowlist"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.security.cs.jit-write-allowlist-freeze-late"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.developer.cs.jit-write-allowlist-freeze-late"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "proc_apply_jit_and_vm_policies"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "exec_resettextvp: expected valid vp @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "exec_resettextvp"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Allowing spawn of iOS binary %s since correct platform was passed in spawn\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "ignoring detached code signature on '%s' with cdhash '%s' because it is invalid, or not a simple adhoc signature.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "CS Platform Exec Logging: Executing platform signed binary '%s' with cdhash %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "process_signature"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "exit_thread failed to exit @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "exit_with_reason"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Process[%d] has no vm space for corpse info.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Process[%d] was destined to be corpse. But corpse is disabled by config.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Process[%d] has been terminated before it could be converted to a corpse.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Process[%d] crashed: %s. Too many corpses being created.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pid %d exited -- no exit reason available -- (signal %d, exit %d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pid %d exited -- exit reason namespace %d subcode 0x%llx, description %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "preinit"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "LTE preinit process exited"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "initproc exited"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "initproc failed to start"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s[%d] exited"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s -- no exit reason available -- (signal %d, exit status %d %s)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s %s -- exit reason namespace %d subcode 0x%llx description: %.800s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "panic-on-crash disabled via boot-arg\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "proc_memorystatus_remove"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Text page corruption detected in dying process %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "memorystatus_remove: Process[%d] tried to exit while being frozen. Blocking exit until freeze completes."
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "proc_prepareexit"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "proc_prepareexit_wait"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "proc_sigdrain"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "parent child linkage broken @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "proc_exit"
        prototype = ""
        caller = "thread_terminate_self"
    }
    new {
        args = 1
        anchors {
            new {
                string = "waitidcoll"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "waitid_nocancel"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Warning : lost p_ru for %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "reap_child_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "exception type %d without a valid proc @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "[%s%s] sending signal %d to process\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = ": killed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "[%s: killed] sending signal %d and force exiting process\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "exit_with_mach_exception"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: spurious wakeup, retrying lock\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "lf_setlock"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "lf_advlock"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "cycle in wakelock list @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "lf_clearlock"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "fork1 called with unknown kind %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "fork1"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Proc_ro_task for newly created proc %p is not NULL @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: task_create_internal failed.  Code: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: thread_create failed. Code: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "fork_create_child"
        prototype = ""
        caller = "cloneproc"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Unable to allocate a new pid @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "forkproc: persona_proc_inherit failed (persona %d being destroyed?)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "forkproc"
        prototype = ""
        caller = "cloneproc"
    }
    new {
        args = 1
        anchors {
            new {
                string = "_MALLOC: kalloc returned NULL (potential leak), size %llu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "_MALLOC_external"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "OSMalloc_Tagfree():'%s' has bad state 0x%08X @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "OSMalloc_Tagfree_external"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "OSMalloc_Tagrele():'%s' has refcnt 0 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "OSMalloc_Tagrele"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "[%d] code signing monitor denies JIT mapping\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "mmap"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "** %s: %d[%s] failing madvise(0x%llx,0x%llx,%s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "MADV_FREE_REUSABLE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "MADV_FREE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "madvise"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d '%s': user_addr 0x%llx user_size 0x%llx cryptid 0x%x ignored\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: unable to create decrypter %s, kr=%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: mapping failed with %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "mremap_encrypted"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "persona ref count underflow! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "persona_lookup_and_invalidate"
        prototype = ""
        caller = "persona"
    }
    new {
        args = 1
        anchors {
            new {
                string = "persona count underflow! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "persona_put_and_unlock"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "<persona>"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ERROR: PID:%d hit proc rlimit in new persona(%d): %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "persona_proc_adopt"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "chgproccnt: lost user @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "chgproccnt"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "proc_parentdropref  -ve ref @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "proc_parentdropref"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "proc being freed and unexpected refcount %p:%d:0x%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "proc_checkdeadrefs"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Unknown format character %c in `%s'\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "log"
            }
            new {
                string = "pid %ld (%s), uid (%u): unexpected end of string after %% token\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "proc_core_name"
        prototype = ""
        caller = "coredump"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: callout =%d for zombie %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "proc_iterate"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "proc_childrenwalk"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "proc_childrenwalk"
        prototype = ""
        caller = "fixjobc"
    }
    new {
        args = 1
        anchors {
            new {
                string = "pgrp_iterate"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pgrp_iterate"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "low swap: throttling pid %d (%s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "low swap: suspending pid %d (%s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "low swap: killing pid %d (%s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "proc_dopcontrol"
        prototype = ""
        caller = "no_paging_space_action"
    }
    new {
        args = 0
        anchors {
            new {
                string = "low swap: unthrottling pid %d (%s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "low swap: resuming pid %d (%s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "low swap: attempt to unkill pid %d (%s) ignored\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "proc_resetpcontrol"
        prototype = ""
        caller = "process_policy"
    }
    new {
        args = 0
        anchors {
            new {
                string = "low swap: triggering no paging space action\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "low swap: killing largest compressed process with pid %d (%s) and size %llu MB\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "low swap: unable to find any eligible processes to take action on\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "no_paging_space_action"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: proc_ro already has an owning task @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "proc_ro_ref_task"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "proc_ro_ref_task"
        prototype = ""
        caller = "task_create_internal"
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.system-task-ports.name.safe"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "task_name_for_pid"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.debug_port"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "debug_control_port_for_pid"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "CODE SIGNING: marked invalid by pid %d: p=%d[%s] honoring CS_KILL, final status 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "csops_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "proc_ro->proc backref mismatch: p=%p, ro=%p, ro->pr_proc(ro)=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "panic_proc_ro_proc_backref_mismatch"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "proc_limitblock"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "setrlimit"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.vfs.authorized-access"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.private.vfs.skip-mtime-updates"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.private.vfs.allow-low-space-writes"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "iopolicysys"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "unknown error %#x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "proc_rlimit_control"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "Quick reboot...\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "syncing disks... "
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "audit_shutdown"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/var/log/shutdown/shutdown.trace"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "shutdown.trace"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "system_shutdown cluster_push_err failed with ENOSPC %d times\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kern_shutdown.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "giving up\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "done\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bufferclean"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "if_down_all"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "reboot_kernel"
        prototype = ""
        caller = "reboot"
    }
    new {
        args = 0
        anchors {
            new {
                string = "userspace panic: %s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "panic_kernel"
        prototype = ""
        caller = "reboot_kernel"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Killing all processes "
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "continuing\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "proc_shutdown"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "/var/log/kernel-shutdown.log"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to open %s: error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Process shutdown log.  Current time is %lu (in seconds).\n\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sd_log"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s[%d] had to be forced closed with exit1().\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sd_callback3"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "sigwait with no signal wakeup @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__sigwait_nocancel"
        prototype = ""
        caller = "__sigwait"
    }
    new {
        args = 0
        anchors {
            new {
                string = "exc handler"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "threadsignal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "build_signal_reason: unable to allocate signal reason structure.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "build_signal_reason: unable to allocate signal reason buffer.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "build_signal_reason: exceeded space in signal reason buf, unable to log PID\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "build_signal_reason: exceeded space in signal reason buf, unable to log procname\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "build_signal_reason"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "psignal: bad signal number %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "unexpected SIGKILL of %s %s (no reason provided)"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "unexpected SIGKILL of %s %s with reason -- namespace %d code 0x%llx description %.800s"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "psignal_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "filt_signal: detected NOTE_EXIT event @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "filt_signal"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ureadc: non-positive resid @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ureadc"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: bad uio_max_iovs @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "uio_free"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "uio_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Sched info changed?! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kern_sysctl.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sysctl_sched_stats"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.read-environment-variables"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sysctl_procargsx"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.roots-installed-read-write"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.private.roots-installed-read-only"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sysctl_roots_installed"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Error: Invalid value passed to darkwake sysctl. Acceptable: 0 or 1.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "sysctl_toggle_darkwake_mode"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "trying to register a node %p with an invalid oid_number: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Use sysctl_register_oid_early to register permanent nodes @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "sysctl_register_oid"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Trying to unregister permanent sysctl %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "sysctl_unregister_oid"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "attempting to register a sysctl at previously registered slot : %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "sysctl_register_oid_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "NodeExt"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Int    "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "String "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Quad   "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Opaque "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%*s%-3d[%c%c%c%c%c] %s %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sysctl_sysctl_debug_dump_node"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.write-kr-experiment-factors"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sysctl_root"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "memorystatus"
                segment = "__TEXT"
                section = "__cstring"
                caller = "os_log_create"
            }
            new {
                string = "Could not allocate memorystatus_jetsam_snapshot @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "fast_jetsam_enabled"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "max_jetsam_threads"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Could not create memorystatus_thread %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "memorystatus_init"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Active"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Inactive"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fatal"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "non-fatal"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "EXC_RESOURCE -> %s[%d] exceeded mem limit: %s%s %d MB (%s)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "memorystatus_log_exception"
        prototype = ""
        caller = "task_footprint_exceeded"
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.memorystatus"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "memorystatus_control"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "healthy"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "unhealthy"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "memorystatus: System is %s. memorystatus_available_pages: %llu compressor_size:%u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "memorystatus: zone_map_is_exhausted=%d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "memorystatus_log_system_health"
        prototype = ""
        caller = "memorystatus_thread"
    }
    new {
        args = 0
        anchors {
            new {
                string = "_memstat_schedule_idle_demotion_locked"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: scheduling demotion to idle band for pid %d (dirty:0x%x).\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "_memstat_schedule_idle_demotion_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "VM_memorystatus_%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "snprintf"
            }
            new {
                string = "killing_idle_process_aggressive"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "killing_top_process_aggressive"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "memorystatus_sort_by_largest_coalition_locked"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "memorystatus: c_segment_count=%u major compaction occurred %u seconds ago\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "memorystatus_do_action: Waking up swap thread. memorystatus_available_pages: %llu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "memorystatus_do_action: Processing swapin queue of length: %u memorystatus_available_pages: %llu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "memorystatus_kill_hiwat_proc: failed to allocate exit reason\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "memorystatus_kill_processes_aggressive: failed to allocate exit reason\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "memorystatus: aggressively killing up to %d processes below band %d.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "memorystatus: aggressive%d: rewinding band %d, %s(%d) moved or exiting.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "memorystatus: aggressive%d: skipping %d [%s] (exiting?)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "memorystatus: killing %s [%d] in band %d with high relaunch probability\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "memorystatus: %s%d pid %d [%s] (%s %d) - memorystatus_available_pages: %llu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "memorystatus: giving up aggressive kill after killing %d processes below band %d.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: WARNING: more than %d leaders in priority band [%d]\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "memorystatus_thread"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "killing_highwater_process"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "killing_idle_process"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "killing_top_process"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "memorystatus: reclaimed %llu pages (%llu purged, %llu unsecluded) from pid %d [%s] and avoided %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%lu.%03d memorystatus: %s pid %d [%s] (%s %d) %lluKB - memorystatus_available_pages: %llu compressor_size:%u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "memorystatus_kill_proc"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "FOREGROUND"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "AUDIO_AND_ACCESSORY"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "CONDUCTOR"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "DRIVER_APPLE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "EXECUTIVE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IMPORTANT"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "CRITICAL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "memorystatus: killing process %d [%s] in high band %s (%d) - memorystatus_available_pages: %llu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "memorystatus_do_kill"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Caught sending pid %d a critical warning for a fatal limit. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "memorystatus_warn_process"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Unexpected non-jetsam pressure level %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "memorystatus: issuing %s jetsam pressure notification to %d waiters"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "memorystatus_broadcast_jetsam_pressure"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ephemeral-storage"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "use-recovery-securityd"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sysctl_load_devicetree_entries"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "iPad8,6"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sysctl_hw_generic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kernelmanagerd"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sysctl_use_kernelmanagerd"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: invalid size (%ld) for cluster %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: freeing jumbo cluster to an empty pool @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "mbuf_freecluster"
        prototype = ""
        caller = "mbuf_ring_cluster_alloc"
    }
    new {
        args = 1
        anchors {
            new {
                string = "tag->m_tag_len >= sizeof(*p)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "p->da_length > 0 && p->da_length <= MBUF_DRVAUX_MAXLEN"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mbuf_find_drvaux"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(*flagsp & (MBUF_PKTAUXF_INET_RESOLVE_RTR | MBUF_PKTAUXF_INET6_RESOLVE_RTR)) != (MBUF_PKTAUXF_INET_RESOLVE_RTR | MBUF_PKTAUXF_INET6_RESOLVE_RTR)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mbuf_pkthdr_aux_flags"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "WARNING: preposterous time in Real Time Clock"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = " -- CHECK AND RESET THE DATE!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "inittodr"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "image4 interface not available @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "amfi interface not available @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "amfi interface is stale: %u @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "trust_cache_runtime_init"
        prototype = ""
        caller = "kernel_bootstrap_thread"
    }
    new {
        args = 0
        anchors {
            new {
                string = "unable to load trust cache (type: %u): no img4_object provided\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "overflow on the img4 object: %p | %lu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "unable to load trust cache (type: %u): img4_ext_manifest expected\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "overflow on the ext manifest: %p | %lu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "unable to load trust cache (type: %u): img4_aux_manifest expected\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "unable to extract payload and manifest from object\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "unable to find payload within img4 object\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "unable to find manifest within img4 object\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "unable to load trust cache: invalid type: %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "unable to load trust cache: unknown type: %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "unable to load trust cache (type: %u): unsatisfied entitlement\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "disallowed to load multiple kTCTypeCryptex1BootOS trust caches\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "disallowed to load multiple kTCTypeCryptex1BootApp trust caches\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "unable to load trust cache (type: %u): %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "successfully loaded trust cache of type: %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "load_trust_cache_with_type"
        prototype = ""
        caller = "load_trust_cache"
    }
    new {
        args = 0
        anchors {
            new {
                string = "unable to load legacy trust cache: no module provided\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "overflow on the module: %p | %lu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "legacy trust caches are not supported on this platform @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "load_legacy_trust_cache"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "unable to query trust caches: no cdhash provided\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "query_trust_cache"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "unable to load static trust cache: interface not supported\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "unable to find chosen/memory-map in the device tree: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "unexpected size for TrustCache property: %u != %zu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "trust cache segment is zero length but trust caches are available: %u @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "no external trust caches found (segment length is zero)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "trust cache segment isn't zero but no trust caches available: %lu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "trust cache segment length smaller than required: %lu | %lu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "attempting to load %u external trust cache modules\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "trust cache module start overflows: %u | %lu | %u @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "trust cache module begins after segment ends: %u | %lx | %lx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "skipping engineering trust cache module: %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "failed to load static trust cache module: %u @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "completed loading external trust cache modules\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "load_static_trust_cache"
        prototype = ""
        caller = "kernel_bootstrap_thread"
    }
    new {
        args = 0
        anchors {
            new {
                string = "attempted to query static trust cache capabilities without init @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "unable to get static trust cache capabilities: interface not supported\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "static_trust_cache_capabilities"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "overflow on pmap img4 payload: %lu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "unable to allocate memory for pmap image4 payload: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "unable to allocate memory for auxiliary image4 manifest: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "ppl_load_trust_cache"
        prototype = ""
        caller = "load_trust_cache_with_type"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: unable to allocate %lu bytes\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: invalid allocation\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "code_signing_allocate"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: invalid pointer provided @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: address provided: %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "code_signing_deallocate"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "attempted to disable a code signing feature invalidly: %u @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "disable_code_signing_feature"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "coretrust interface not available @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "initialized XNU provisioning profile data\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "csm_initialize_provisioning_profiles"
        prototype = ""
        caller = "kernel_bootstrap_thread"
    }
    new {
        args = 0
        anchors {
            new {
                string = "unable to register profile with monitor: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "csm_register_provisioning_profile"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "unable to associate profile: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "csm_associate_provisioning_profile"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: provided a NULL process\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "address_space_debugged"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "address_space_debugged"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "[%s] code-signing-violation at %p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "csm_code_signing_violation"
        prototype = ""
        caller = "handle_user_abort"
    }
    new {
        args = 0
        anchors {
            new {
                string = "image4 dispatch: no input data: %llu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "image4_ dispatch: overflow on input: %p | %lu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "image4 dispatch: invalid input: %llu | %lu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "image4 dispatch: pin root not supported on this platform\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "image4 dispatch: evaluate trust not supported on this platform\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "kernel_image4_monitor_trap"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "unable to unregister profile from monitor: %d | %p\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "csm_free_provisioning_profiles"
        prototype = ""
        caller = "garbage_collect_provisioning_profiles"
    }
    new {
        args = 0
        anchors {
            new {
                string = "entered lockdown mode policy for the PPL"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "csm_check_lockdown_mode"
        prototype = ""
        caller = "kernel_bootstrap_thread"
    }
    new {
        args = 0
        anchors {
            new {
                string = "attempted to load a too-large profile: %lu bytes @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ppl.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "unable to allocate memory for pmap profile payload: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "ppl_register_provisioning_profile"
        prototype = ""
        caller = "csm_register_provisioning_profile"
    }
    new {
        args = 0
        anchors {
            new {
                string = "invalid object execution request: no payload\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "unable to allocate memory for image4 payload: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "unable to execute image4 object: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "ppl_image4_execute_object"
        prototype = ""
        caller = "kernel_image4_execute_object"
    }
    new {
        args = 0
        anchors {
            new {
                string = "invalid object copy request: no object input buffer\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "invalid object copy request: no object input length\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "unable to allocate memory for image4 object: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "unable to copy image4 object: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "ppl_image4_copy_object"
        prototype = ""
        caller = "kernel_image4_copy_object"
    }
    new {
        args = 0
        anchors {
            new {
                string = "explicit monitor-exports-get not required for the PPL\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "kernel_image4_get_monitor_exports"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "explicit release-type-set set not required for the PPL\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "kernel_image4_set_release_type"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "explicit BNCH-shadow-set not required for the PPL\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "kernel_image4_set_release_type_0"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "user space RB_PANIC message copyin failed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "reboot"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "user space panic_with_data message copyin failed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Panic called from Process: %s Message: %s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sys_panic_with_data"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "lockdown_mode: error getting state from nvram\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "lockdown_mode: lockdown mode in nvram is %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "lockdown_mode_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "get_lockdown_mode_state"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "get_lockdown_mode_state"
        prototype = ""
        caller = "csm_check_lockdown_mode"
    }
    new {
        args = 0
        anchors {
            new {
                string = "sshot-entitlement-report"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sshot-entitlement-refuse"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "atboot_stackshot_entitlement"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.stackshot"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "stack_snapshot_with_config"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.stackshot.stats"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sysctl_stackshot_stats"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Firehose disabled: Logging disabled by ATM\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "firehose_chunk_count"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "firehose_io_pages"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "illegal firehose configuration %u/%u, using defaults\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Firehose configured: %u chunks, %u io pages\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "oslog_init_firehose"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "log_dmesg: unable to allocate memory\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "log_dmesg"
        prototype = ""
        caller = "proc_kernmsgbuf"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Cannot resize system message buffer: Not enough memory\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "System message buffer configured: %lu bytes\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "sysctl_kern_msgbuf"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "OSLog stream disabled: Logging disabled by ATM\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "OSLog stream configured: stream: %lu bytes, cache: %lu bytes\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "oslog_stream_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Time 0x%lx Message "
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "PMRD: PowerChangeDone: %s->%s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "use _calendarWakeAlarmUTC\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "accelerate _aotWakeTime for exit\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "accelerate _aotWakeTime for assertion\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "aotSleep at %04d/%02d/%d %02d:%02d:%02d sched: %04d/%02d/%d %02d:%02d:%02d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: Updated sleepDelaysReport %lu %lu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: System %sSleep\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "gIOLastWakeAbsTime: %lld\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "aotWake at %04d/%02d/%d %02d:%02d:%02d sched: %04d/%02d/%d %02d:%02d:%02d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: System %sWake\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "SafeSleep "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "RTC debug alarm"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "hibernate user wake"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: Force re-evaluating aggressiveness\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: PowerChangeDone: %s->%s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: Updated sleepDelaysReport %lu %lu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: Force re-evaluating aggressiveness\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain15powerChangeDoneEm"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.getprivatesysid"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "gethostuuid"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ledger syscall logic error -- command type %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ledger"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "fp_iocount overdecrement! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "seldrop_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.coredump-encryption-key"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to handle the new encryption key. Error 0x%x"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "sysctl_coredump_encryption_key_update"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "size greater than LONG_MAX @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Expected pipe buffer wraparound disappeared @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Expected wraparound bad @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Pipe buffer overflow @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "pipewr"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pipe_write"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "pipecl"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "double free of pipe %p in pair %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pipeclose"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.record_system_event"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_sys_record_system_event"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "systemdomain == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "systemdomain_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "unknown coalition policy suppress value %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "sys_coalition.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sys_coalition_policy_get"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: Invalid ulock opcode %d addr %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kdp_ulock_find_owner"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sys_ulock.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kdp_ulock_find_owner"
        prototype = ""
        caller = "stackshot_thread_wait_owner_info"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s>thread_max=%d, ull_hash_buckets=%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "ulock_initialize"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ulock_initialize"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ttywai"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ttywait"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ttyin"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ttyhup"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ttybg3"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ttread"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ttydcd"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ttywri"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ttwrite"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "load: %d.%02d "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "not a controlling terminal\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "no foreground process group\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "foreground process without thread\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = " cmd: %s %d %s %ld.%02du %ld.%02ds\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ttyinfo_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "        "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ttyoutput"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "ttyrub: would panic c = %d, val = %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "ttyrub"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "tty kevent: unexpected filter: %d, kn = %p, tty = %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "filt_tty_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ptsopen"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ptsopen"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ptcread"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ptcread"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ptcwrite"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ptcwrite"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "/dev/%s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_devfs_setattr"
        prototype = ""
        caller = "ptyioctl"
    }
    new {
        args = 0
        anchors {
            new {
                string = "ptmx_init: failed to obtain /dev/ptmx major number\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Failed to set flags on ptmx cdevsw entry. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ptmx_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ttys%03d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "devfs_make_node() call failed for ptmx_get_ioctl()!!!!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "ptmx_get_ioctl"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "/dev/ttys%03d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ptmx_get_name"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "tty%c%x"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pty%c%x"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Can't mark ptc as kqueue ok @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Can't mark pts as kqueue ok @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pty_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "/dev/tty%c%x"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pty_get_name_0"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "CODE SIGNING: CS Blob length overflow for addr: %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "CODE SIGNING: CS Blob length overflow for blob at: %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "CODE SIGNING: CS Blob length overflow for code directory blob at: %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "csblob_find_blob_bytes"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ubc_setsize: ubc_create_upl (error = %d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ubc_setsize: invalidate failed (error = %d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "ubc_setsize_ex"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s : VNODE_REF_FORCE failed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ubc_map"
        prototype = ""
        caller = "vnode_pager_last_unmap_0"
    }
    new {
        args = 0
        anchors {
            new {
                string = "ubc_unmap"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ubc_unmap"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "unable to create a validated cs_blob object: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "validation of code signature failed through MACF policy: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "dyld simulator runtime is not apple signed: proc: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "CODE SIGNING: proc %d(%s) loaded %s signatures for file (%s) range 0x%llx:0x%llx flags 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "detached"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "embedded"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "check_signature[pid: %d]: error = %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "reconstitution required when code signing monitor is enabled\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "unable to register code signature with monitor: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "unable to verify code signature with monitor: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "unable to disassociate profile from code signature: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "unable to associate OSEntitlements with monitor: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "ubc_cs_blob_add"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "malformed code signature supplement blob: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "CODE SIGNING: proc %d(%s) supplemental signature for file (%s) is not a supplemental.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "CODE SIGNING: proc %d(%s) supplemental signature for file (%s) does not match any attached cdhash (error: %d).\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "check_supplemental_signature[pid: %d], error = %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "csb_next does not match expected NULL value @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "CODE SIGNING: proc %d(%s) loaded supplemental signature for file (%s) range 0x%llx:0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "ubc_cs_blob_add_supplement[pid: %d]: error = %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "ubc_cs_blob_add_supplement"
        prototype = ""
        caller = "sys_fcntl_nocancel"
    }
    new {
        args = 0
        anchors {
            new {
                string = "csvnode: name: %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "csvnode: range: %lu -> %lu flags: 0x%08x platform: %s path: %s team: %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "<NO-TEAM>"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "csvnode_print_debug"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "CODESIGNING: can not re-validate a previously invalidated blob, reboot or create a new file.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "CODESIGNING: revalidate: not inline revalidating reconstituted signature.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "revalidate: check_signature[pid: %d], error = %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "ubc_cs_blob_revalidate"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Reseting cs_blob cache from all vnodes. \n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cs_blob_reset_cache"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ubc_info_init: memory_object_create_named returned %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ubc_info_init_internal"
        prototype = ""
        caller = "vnode_create_internal"
    }
    new {
        args = 0
        anchors {
            new {
                string = "validated CodeDirectory but unsupported type @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "cs_blob_init_validated"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "cs_blob vnode backref mismatch: blob=%p, vp=%p, blob->csb_vnode=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "panic_cs_blob_backref_mismatch"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "unable to reconstitute code signature through monitor: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "validated cs_blob has no code directory @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "unable to allocate memory for 2nd stage reconstitution: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "unable to validate code signature after 2nd stage reconstitution: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "reconstitute_code_signature_2nd_stage"
        prototype = ""
        caller = "ubc_cs_blob_add"
    }
    new {
        args = 0
        anchors {
            new {
                string = "unable to validate security-critical blob: %d [%u|%u]\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "validate_auxiliary_signed_blobs"
        prototype = ""
        caller = "ubc_cs_blob_add"
    }
    new {
        args = 0
        anchors {
            new {
                string = "unable to accelerate entitlements through the monitor: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "unable to adjust OSEntitlements context with monitor: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "unable to adjust OSEntitlements context without monitor: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "accelerate_entitlement_queries"
        prototype = ""
        caller = "ubc_cs_blob_add"
    }
    new {
        args = 0
        anchors {
            new {
                string = "found team-id %s in cdblob\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "csblob_parse_teamid"
        prototype = ""
        caller = "ubc_cs_blob_add"
    }
    new {
        args = 1
        anchors {
            new {
                string = "CodeDirectory type %d rank %d at slot 0x%x index %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "using CodeDirectory type %d (rank %d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "multiple hash=%d CodeDirectories in signature; rejecting\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "multiple entitlements blobs\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "multiple der entitlements blobs\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "multiple self constraint blobs\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "multiple parent constraint blobs\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "multiple responsible process constraint blobs\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "multiple library constraint blobs\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cs_validate_csblob"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "disallowing unsupported code signature page shift: %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "cs_validate_codedirectory"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "unknown hash type ? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "hash size too large @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "offset not aligned to cshash boundary @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "CODE SIGNING: cs_validate_page: mobj %p off 0x%llx: no hash to validate !?\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "CODE SIGNING: cs_validate_page: mobj %p off 0x%llx size 0x%lx: actual [0x%x 0x%x 0x%x 0x%x 0x%x] != expected [0x%x 0x%x 0x%x 0x%x 0x%x]\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "CODE SIGNING: cs_validate_page: mobj %p off 0x%llx size 0x%lx: SHA1 OK\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "CODE SIGNING: Scatter extends past Code Directory\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "CODE SIGNING: unordered Scatter, prev base %d, cur base %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "cs_validate_hash"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: domain (%d,%s) already exists for %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: domain %p (%d,%s) is already associated with %p (%d,%s)\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: domain (%d,%s) protocols need to added via net_add_proto\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "net_add_domain_old"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "dp1->dom_old != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "net_del_domain_old"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "%s: domain (%d,%s), proto %d has non-NULL pr_domain! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "_net_add_proto$XNU_INTERNAL"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: domain (%d,%s), proto %d: pr_fasttimo is deprecated and won't be called\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: domain (%d,%s), proto %d: pr_slowtimo is deprecated and won't be called\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: domain (%d,%s), proto %d: failed to attach, error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "net_add_proto_old"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "protoctl_event_enqueue_nwk_wq_entry"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "p_laddr->sa_len <= sizeof(p_protoctl_ev->protoctl_ev_arg.laddr)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "p_raddr->sa_len <= sizeof(p_protoctl_ev->protoctl_ev_arg.raddr)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: eventhandler enqueuing event of type=protoctl_event event_code=%d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "protoctl_event_enqueue_nwk_wq_entry"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "dp->dom_flags & DOM_OLD"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dp->dom_old != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dom_init_old"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pp->pr_domain == dp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pp->pr_protosw == pp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "detach_proto"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pp->pr_domain == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pp->pr_protosw == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "attach_proto"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pp->pr_flags & PR_OLD"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pp->pr_old != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pr_init_old"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mbuf_class_under_pressure"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s memory-pressure on mbuf due to class %u, total %llu free %llu max %u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mbuf_class_under_pressure"
        prototype = ""
        caller = "tcp_reass"
    }
    new {
        args = 0
        anchors {
            new {
                string = "nmbclusters != 0 && !(nmbclusters & 0x1)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "m_minlimit(m_class(m)) == 0 || m_total(m_class(m)) >= m_minlimit(m_class(m))"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: done [%d MB total pool size, (%d/%d) split]\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "mbinit"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bigcl"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mbuf_cl"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mbuf_bigcl"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "16kcl"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mbuf_16kcl"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mbinit"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 2
        anchors {
            new {
                string = "!(MEXT_FLAGS(m) & EXTF_PAIRED) && MEXT_PMBUF(m) == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "m->m_type != MT_FREE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "m_clattach"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "MBUF_IS_COMPOSITE(m) && m_get_ext_free(m) == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "m_getcl"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "to->m_flags & M_PKTHDR"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "m_copy_classifier"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "bufsize != m_maxsize(MC_16KCL) || njcl > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: File a radar related to <rdar://10146739>. \t\t\tneeded = %u, pnum = %u, num_needed = %u \n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "m_getpackets_internal"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "m_getpackets_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "njcl > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "m_free_func == NULL || m_free_func == m_bigfree || m_free_func == m_16kfree"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "m_allocpacket_internal *numlist is 0"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "m_allocpacket_internal wantsize unsupported"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "m_allocpacket_internal nsegs > *maxsegments"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "m_allocpacket_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "len <= MHLEN"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "len <= MLEN"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "m_prepend"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "m_copym: invalid offset %d or len %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "(mode != M_COPYM_MUST_COPY_HDR && mode != M_COPYM_MUST_MOVE_HDR) || (m->m_flags & M_PKTHDR)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "m_copym: len != M_COPYALL @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "m_copym_mode"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "m_copym_mode"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "m_copym_with_hdrs"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "m_copym_with_hdrs"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: n == NULL @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: failed negative len %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: failed len %d too big"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: m_data out of bounds"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "m_pullup"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "len >= 0 && dstoff >= 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "m_copyup"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "(copyhdr == 1 && m->m_len <= MHLEN) || (copyhdr == 0 && m->m_len <= MLEN)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "m_dup"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "!(m->m_flags & M_PKTHDR)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: cannot set M_PKTHDR on altered mbuf %llx, m_data %llx (expected %llx), m_len %d (expected 0)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "m_reinit"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(m->m_flags & M_EXT) || m->m_data == (uintptr_t)m->m_dat"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "m_reinit"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "MEXT_REF(m) == MEXT_MINREF(m)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "MEXT_PREF(m) == MEXT_MINREF(m)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "extbuf != NULL && rfa != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "m_ext_paired_activate"
        prototype = ""
        caller = "mbuf_ring_cluster_activate"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Invalid attempt to modify guarded module-private area: mbuf %p, pkt_flags 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "m_scratch_init"
        prototype = ""
        caller = "m_copym_with_hdrs"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Invalid attempt to access guarded module-private area: mbuf %p, pkt_flags 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "mbuf_get_driver_scratch"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "m_get_rfa(m) != NULL && MBUF_IS_COMPOSITE(m)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mz_composite_build"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(m->m_flags & M_EXT) && (MEXT_FLAGS(m) & EXTF_PAIRED)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "m_free_func != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "m_free_paired"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "remain <= MLEN"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "m_split0"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "mp0 != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "*mp0 != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(flags & M_COPYBACK0_PRESERVE) == 0 || cp == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(flags & M_COPYBACK0_COPYBACK) == 0 || cp != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "tspace > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "off == 0 || eatlen >= mlen"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "len >= mlen"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "flags & M_COPYBACK0_EXTEND"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "m_copyback0"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "len > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "m_normalize"
        prototype = ""
        caller = "dlil_output"
    }
    new {
        args = 0
        anchors {
            new {
                string = "mbuf_watchdog_defunct"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: defuncting all sockets from %s.%d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mbuf_watchdog_defunct"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "len >= 0 && off >= 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "m == NULL in m_pulldown() @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "m_pulldown"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "t != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "m_tag_delete"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "(to->m_flags & M_PKTHDR) && (from->m_flags & M_PKTHDR)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "m_tag_copy_chain"
        prototype = ""
        caller = "m_dup_pkthdr"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: invalid mbuf chain %p [off %u, len %u] @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "m_adj_sum16"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "m_adj_sum16"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IS_P2ALIGNED(tag, sizeof(uint64_t))"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "len == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "len != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IS_P2ALIGNED(tag->m_tag_data, sizeof(uint64_t))"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "m_tag_alloc"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "localdomain == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pre_unp_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "socketinit: already called...\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "socache zone"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "socketinit"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 2
        anchors {
            new {
                string = "aso != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "so_pcb not NULL after pru_attach error %d for dom %d, proto %d, type %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "socreate_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "sobindlock"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sobindlock"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "solisten"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "solisten"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "sofree: not queued\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "sofreelastref"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "soclose: so=%p refcount=0 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s sp %p in so_incomp but !SS_INCOMP @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s sp %p in so_comp but !SS_COMP @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "soclose"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "soclose: usecount is zero so=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "soclose: NOFDREF @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "soclose_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "soclose: retaincnt non null and so=%p usecount=%d\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "soclose"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "soaccept: !NOFDREF @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "soacceptlock"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "soconnectlock"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "soconnectlock"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "soconnectxlocked"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "soconnectxlocked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d so %llx ignore SS_CANTSENDMORE\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "sosendcheck"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "sosend so %p resid %lld > orig_resid %lld proc %s:%d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sosend: so_gencnt %llu resid %lld > orig_resid %lld proc %s:%d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "sosend"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "top != NULL && (control == NULL || top->m_flags & M_PKTHDR)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sosend_reinject"
        prototype = ""
        caller = "cfil_service_inject_queue"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d so %llx ignore SS_CANTRCVMORE\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: after 2nd sblock so=%p ref=%d on socket @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: post-control !sync so=%p m=%p nextrecord=%p\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "soreceive"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "sooptcopyin_bindtodevice"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: sopt_valsize %lu > maxlen %lu"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "sooptcopyin_bindtodevice"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "%s[%d, %s]: so 0x%llu [%s %s:%d -> %s:%d] is now marked as %seligible for defunct\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s[%d, %s]: so 0x%llu [%d,%d] is now marked as %seligible for defunct\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "setsockopt: SO_APPLICATION_ID - wrong uid"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "setsockopt: SO_APPLICATION_ID - failed to set e_uuid"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "sosetoptlock"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "soopt_mcopyin @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "soopt_mcopyin"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%p:%p "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "solockhistory_nr"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: SB_DROP not set @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s[%d, %s]: (target pid %d name %s level %d) so 0x%llu [%d,%d] is not eligible for defunct (%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s[%d, %s]: (target pid %d name %s level %d) so 0x%llu [%d,%d] defunct by force (%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s[%d, %s]: (target pid %d name %s level %d) so 0x%llu [%d,%d] extend bk idle (%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s[%d, %s]: (target pid %d name %s level %d) so 0x%llu [%d,%d] %s defunct%s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "is already"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "marked as"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = " extbkidle"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sosetdefunct"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s improperly called @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s[%d, %s]: (target pid %d name %s level %d) so 0x%llu [%s %s:%d -> %s:%d] is now defunct [rcv_si 0x%x, snd_si 0x%x, rcv_fl 0x%x,  snd_fl 0x%x]\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s[%d, %s]: (target pid %d name %s level %d) so 0x%llu [%d,%d] is now defunct [rcv_si 0x%x, snd_si 0x%x, rcv_fl 0x%x, snd_fl 0x%x]\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sodefunct"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s[%d, %s]: (target pid %d name %s) so 0x%llu [%d,%d] resumed from bk idle\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "soresume"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "soresume"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s[%d, %s]: so 0x%llu [%d,%d] %s marked for extended bk idle\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "so_set_extended_bk_idle"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "so_set_extended_bk_idle"
        prototype = ""
        caller = "sosetoptlock"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s[%d, %s]: so 0x%llu [%d,%d]\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "so_check_extended_bk_idle_time"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "so_check_extended_bk_idle_time"
        prototype = ""
        caller = "tcp_itimer"
    }
    new {
        args = 2
        anchors {
            new {
                string = "%s[%s,%d]: so 0x%llx [%d,%d] epid %d (%s) euuid %s%s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s[%s,%d]: so 0x%llx [%d,%d] epid %d (%s) ERROR (%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PROC_NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "so_set_effective_pid"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s[%s,%d]: so 0x%llx [%d,%d] epid %d euuid %s%s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s[%s,%d]: so 0x%llx [%d,%d] euuid %s ERROR (%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "so_set_effective_uuid"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "assertion failed: %s, file: %s, line: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "assfail"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "*mp != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sosend_list: so->so_type != SOCK_DGRAM error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "sosend_list: atomic == 0 error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "sosend_list: SS_ISCONNECTED not set error: %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "sosend_list: flags 0x%x error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "sosend_list: sosendcheck error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "sosend_list: sflt_data_out error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "sosend_list: cfil_sock_data_out error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "sosend_list: pru_send_list error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "sosend_list: pru_send error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "sosend_list: m_freem_list(top) with error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "sosend_list"
        prototype = ""
        caller = "sendit_x"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: about to create invalid socketbuf @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "soreceive_addr"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "soreceive_addr"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "cm->cmsg_len <= rights->m_len"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "soreceive_ctl"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "sbwait_nointr"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: 2 sb=%p sb_flags=0x%x sb_so=%p usecount=%d lr=%p lrh= %s\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sbwait"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s[%d, %s]: defunct so 0x%llu [%d,%d] si 0x%x, fl 0x%x [%s]\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sowakeup"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sowakeup"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "sbappendstream: nexpkt %p || mb %p != lastrecord %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "sbappendstream"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sbappendstream 1"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sbappendstream 2"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sbappendstream"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "sblastrecordchk: mb 0x%llx lastrecord 0x%llx last 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "packet chain:\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "\t0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sblastrecordchk from %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "sblastrecordchk"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "sblastmbufchk: mb 0x%llx mbtail 0x%llx last 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "packet tree:\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "0x%llx "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sblastmbufchk from %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "sblastmbufchk"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "sbconcat_mbufs @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "sbconcat_mbufs"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "sbappendchain"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sbappendadddr 2"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sbappendchain"
        prototype = ""
        caller = ""
    }
    new {
        args = 4
        anchors {
            new {
                string = "sbappendaddrorfree @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "sbappendaddr"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sbappendadddr 1"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sbappendaddr"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "sbappendcontrol"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sbappendcontrol @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "sbappendcontrol 1"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sbappendcontrol_internal"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sbappendcontrol 2"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sbappendcontrol"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "m == NULL || (m->m_flags & M_PKTHDR)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(sb->sb_flags & (SB_RECV | SB_NOCOMPRESS)) == (SB_RECV | SB_NOCOMPRESS)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: nexpkt %p || mb %p != lastrecord %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "sbappendmptcpstream_rcv"
        prototype = ""
        caller = "sbappendstream_rcvdemux"
    }
    new {
        args = 1
        anchors {
            new {
                string = "sbdrop - count not zero\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sbdrop"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(flags & SBL_VALID) == flags"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sb_lock_nointr"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sb_lock"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sblock"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(sb->sb_flags & SB_LOCK) || (so->so_state & SS_DEFUNCT) || (so->so_flags1 & SOF1_DEFUNCTINPROG)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sbunlock"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "soevent"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s[%d]: so %llu [%d,%d] epid %llu euuid %s%s has %d redundant events supressed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s[%d]: so %llu [%d,%d] epid %llu euuid %s%s event posted\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: SO_FILT_HINT_WAKE_PKT so %p"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "soevent"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "sbappend 1"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sbappend 2"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sbappend 3"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sbappend_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "sbappendrecord 1"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sbappendrecord 2"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sbappendrecord 3"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sbappendrecord_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "semi-panic: sbcompress\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "sbcompress"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sbcompress"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "accept: head=%p refcount=%d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "accept: 2 head=%p refcount=%d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "accept_nocancel"
        prototype = ""
        caller = "accept"
    }
    new {
        args = 0
        anchors {
            new {
                string = "buflen <= SOCK_MAXADDRLEN"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sockargs"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "connectitx"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "connectx"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "connectit"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "connect_nocancel"
        prototype = ""
        caller = "connect"
    }
    new {
        args = 0
        anchors {
            new {
                string = "cp_size > buflen, something wrong with alignment! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "copyout_control"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "alloc_sendpkt"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: blocking allocation returned NULL @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "alloc_sendpkt"
        prototype = ""
        caller = "sendfile"
    }
    new {
        args = 0
        anchors {
            new {
                string = "peer is connected but has no socket? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "uipc_ctloutput"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "unknown socket type %d in unp_connect2 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "unp_connect2"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "unp_lock: so=%p NO PCB! lr=%p ref=0x%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "unp_lock: so=%p so_pcb=%p lr=%p ref=0x%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "unp_lock"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "unp_unlock: so=%p usecount=%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "unp_unlock: so=%p NO PCB usecount=%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "unp_unlock"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "unp_getlock: so=%p usecount=%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "unp_getlock: so=%p NULL so_pcb @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "unp_getlock"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "unpdisconnect"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "unp_conn became NULL after sleep @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "unknown socket type %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "unp_disconnect"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "uipc_accept"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: peer disconnected unp_gencnt %llu"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "uipc_accept"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "unp_attach @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "uipc_attach"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "uipc_rcvd DGRAM? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "uipc_rcvd unknown socktype @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "uipc_rcvd"
        prototype = ""
        caller = ""
    }
    new {
        args = 4
        anchors {
            new {
                string = "uipc_send connected but no connection? socket state: %x socket flags: %x socket flags1: %x. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "uipc_send"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "uipc_send unknown socktype @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "rp[i]->fg_lflags & FG_INSMSGQ"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fg_insertuipc"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s[mDNSResponder] pid=%d (%s): op=0x%x"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "uipc_send"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "so->so_rcv.sb_flags & SB_LOCK"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "unp_gc"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "fg->fg_lflags & FG_RMMSGQ"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "unp_discard"
        prototype = ""
        caller = "unp_externalize"
    }
    new {
        args = 0
        anchors {
            new {
                string = "vsock_domain == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vsock_dinit"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vsock_connect"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vsock_connect"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "vsock_unlock"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vsock_domain.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vsock_unlock"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "shmseg free count inconsistent @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "sysv_shm.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "shmget"
        prototype = ""
        caller = "shmsys"
    }
    new {
        args = 0
        anchors {
            new {
                string = "semop - can't undo undos @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "semsys"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "semexit - semid not allocated @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "semexit - semnum out of range @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "semexit"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "semu_alloc - second attempt failed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "semundo_adjust"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "msg_cbytes is messed up @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "msg_qnum is messed up @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "msgsys"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "msg_perm.mode & MSG_LOCKED @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "segs_needed > nfree_msgmaps @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "msgsz + msg_cbytes > msg_qbytes @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "no more msghdrs @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "not enough msgmaps @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "nil free_msgmaps @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "next too low #1 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "next out of range #1 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "next too low #2 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "next out of range #2 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "didn't use all the msg segments @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "msgsnd_nocancel"
        prototype = ""
        caller = "msgsys"
    }
    new {
        args = 0
        anchors {
            new {
                string = "msg_first/last messed up #1 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "msg_first/last messed up #2 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "msg_first/last messed up #3 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "next too low #3 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "next out of range #3 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "msgrcv_nocancel"
        prototype = ""
        caller = "msgsys"
    }
    new {
        args = 0
        anchors {
            new {
                string = "msginfo.msgssz=%d (0x%x) not a small power of 2; resetting to %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "msginfo.msgseg=%d (> 32767); resetting to %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "msginit: can't allocate msgpool"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "msginit: can't allocate msgmaps"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "msginit: can't allocate msghdrs"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "msginit: can't allocate msqids"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "msginit"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "msghdr->msg_spot out of range @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "msghdr->msg_spot != -1 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "msg_freehdr"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.security.override-plugin-host-detection"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOVnodeHasEntitlement"
            }
            new {
                string = "com.apple.security.cs.disable-library-validation"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.private.cs.automator-plugins"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.perl5"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.perl"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "org.python.python"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.expect"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.tcltk.wish"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.tcltk.tclsh"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.ruby"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.bash"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.zsh"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.ksh"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: running binary \"%s\" in keys-off mode due to posix_spawnattr_disable_ptr_auth_a_keys_np"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: running binary \"%s\" in keys-off mode due to entitlement: %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: running binary \"%s\" in keys-off mode due to identity: %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "load_machfile"
        prototype = ""
        caller = "exec_mach_imgact"
    }
    new {
        args = 0
        anchors {
            new {
                string = "pagezero boundary at 0x%llx; adjust slide from 0x%llx to 0x%llx%s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "page-unaligned X-W boundary at 0x%llx; adjust slide from 0x%llx to 0x%llx%s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PAGEZERO"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "proc %d: load code signature error %d for file \"%s\"\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "validating initial pages of %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "CODE SIGNING: %s[%d]: invalid initial page at offset %lld validated:%d tainted:%d csflags:0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "proc %d: set_code_unprotect() error %d for file \"%s\"\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "parse_machfile"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "+++ load_segment %s vm[0x%llx:0x%llx] file[0x%llx:0x%llx] prot %d/%d flags 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "section outside code signature\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vmaddr too large\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "++++++ load_segment: page_zero up to 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "++++++ load_segment: mapping at vm [0x%llx:0x%llx] of file [0x%llx:0x%llx]\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "++++++ load_segment: delta mapping vm [0x%llx:0x%llx]\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "load_segment"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "__DATA_DIRTY"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "__all_image_info"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "note_all_image_info_section"
        prototype = ""
        caller = "load_segment"
    }
    new {
        args = 3
        anchors {
            new {
                string = "load_code_signature: %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "load_code_signature: revalidation failed: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "success, but no blob! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "mach_loader.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "load_code_signature: %s: failure to allocate exit reason for validation failure: %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "load_code_signature: %s: failed to copy reason string (kcdata_memcpy error: %d, length: %ld)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "load_code_signature: %s: failed to allocate space for reason string (os_reason_alloc_buffer error: %d, kcdata error: %d, length: %ld)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "load_code_signature"
        prototype = ""
        caller = "parse_machfile"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d '%s': cryptoff 0x%llx cryptsize 0x%llx cryptid 0x%x ignored\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "set_code_unprotect"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "set_code_unprotect: unable to create decrypter %s, kr=%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "+++ set_code_unprotect: vm[0x%llx:0x%llx]\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "set_code_unprotect(): mapping failed with %x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "set_code_unprotect"
        prototype = ""
        caller = "parse_machfile"
    }
    new {
        args = 0
        anchors {
            new {
                string = "/usr/lib/dyld"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "load_dylinker"
        prototype = ""
        caller = "parse_machfile"
    }
    new {
        args = 0
        anchors {
            new {
                string = "/usr/libexec/rosetta/runtime"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "load_rosetta"
        prototype = ""
        caller = "parse_machfile"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: Error %d removing all semaphores: %ld remain!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "psem_cache_purge_all"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "psem_cache_purge_all"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pshm_cache_add() found %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pshm_cache_add"
        prototype = ""
        caller = "shm_open"
    }
    new {
        args = 0
        anchors {
            new {
                string = "negative usecount in pshm_close @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "pshm_deref"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "sock_connect"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sock_connect"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "sock_connectwait"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sock_connectwait"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: sosetopt SO_TRAFFIC_CLASS failed %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "sock_settclassopt"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sock_settclassopt"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: negative retain count (%d) for sock=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "sock_release"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kpi_socket.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sock->so_usecount > 1"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/AppleInternal/Library/BuildRoots/d3a62b52-2ef5-11ef-9ecd-e2437461156c/Library/Caches/com.apple.xbs/Sources/xnu/bsd/kern/kpi_socket.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sock_release"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "sock_accept"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sock_accept_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "OSDecrementAtomic64(&net_api_stats.nas_sfltr_register_os_count) > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "OSDecrementAtomic64(&net_api_stats.nas_sfltr_register_count) > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sflt_unregister"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "sflt_cleanup"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sflt_cleanup_thread"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s : EACCES returned by vnode_lookup for uid %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "proc_pidpathinfo_internal"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s : EACCES returned by vnode_lookup for uid 0\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "proc_pidpathinfo_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kern.msgbuf"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "proc_kernmsgbuf"
        prototype = ""
        caller = "proc_info_internal"
    }
    new {
        args = 3
        anchors {
            new {
                string = "com.apple.private.cryptexd-rsr-write"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sysctl_proc_rsr_in_progress"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "shouldn't be applying exception notification to process! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "process_policy.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "proc_apply_resource_actions"
        prototype = ""
        caller = "task_action_cpuusage"
    }
    new {
        args = 0
        anchors {
            new {
                string = "evthdlr_lists_ctxt != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "eventhandler_lists_ctxt_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "eventhandler_init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: init"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "eventhandler_init"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 1
        anchors {
            new {
                string = "evhrm"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: removing item %p from \"%s\""
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: marking item %p from \"%s\" as dead"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: removing all items from \"%s\""
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: marking all items from \"%s\" as dead"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "eventhandler_deregister"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "eventhandler_prune_list"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: pruning list \"%s\""
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "eventhandler_prune_list"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "TAILQ_EMPTY(&list->el_entries)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "eventhandler_lists_ctxt_destroy"
        prototype = ""
        caller = "rtfree_common"
    }
    new {
        args = 0
        anchors {
            new {
                string = "strlen(name) <= (sizeof(new_list->el_name) - 1)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "evthdlr_lists_ctxt->eventhandler_lists_initted"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: registering event_type=%s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: creating list \"%s\""
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: adding item %p (function %p to \"%s\""
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "eventhandler_register"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "os_reason failed to allocate @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "os_reason failed to get data address @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "os_reason failed to copy description data @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "os_reason_set_description_data"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "recount: unexpected thread_selfcounts kind: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "sys_recount.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "thread_selfcounts"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "com.apple.private.ip-domain-table"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "TRACKER - %s:%d Process (%d) does not hold the necessary entitlement\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "TRACKER - %s:%d Failed to copy parameters\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "TRACKER - %s:%d Could not retrieve address family TLV from parameters\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "TRACKER - %s:%d Could not retrieve address TLV from parameters\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "TRACKER - %s:%d Address family parameter and address parameter family mismatch <%d != %d>\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "TRACKER - %s:%d Could not retrieve flags TLV from parameters\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "TRACKER - %s:%d Could not retrieve APP UUID TLV from parameters\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "TRACKER - %s:%d Could not retrieve domain TLV from parameters\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "TRACKER - %s:%d Could not retrieve domain owner TLV from parameters\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tracker_action"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "tracker_lookup"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "is not"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Lookup entry"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to copy metadata"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "TRACKER - %s:%d Failed lookup - remote %s null, app_uuid %s null\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tracker_lookup"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.xnu.kern.tracker_db"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "tracker_db"
                segment = "__TEXT"
                section = "__cstring"
                caller = "os_log_create"
            }
            new {
                string = "%s: Can't create Tracker GC thread"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "g_tracker_gc_thread != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/AppleInternal/Library/BuildRoots/d3a62b52-2ef5-11ef-9ecd-e2437461156c/Library/Caches/com.apple.xbs/Sources/xnu/bsd/kern/tracker.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "TRACKER - %s:%d Failed to initialize\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "TRACKER - %s:%d Initialized: hashsize %d hashmask %lX\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tracker_db_init"
        prototype = ""
        caller = "tracker_action"
    }
    new {
        args = 0
        anchors {
            new {
                string = "TRACKER_GC"
                segment = "__TEXT"
                section = "__cstring"
                caller = "bsd_setthreadname"
            }
        }
        symbol = "tracker_gc_thread_func"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Deleting entry - IDLE TO"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "tracker_entry_expire"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "TRACKER - %s:%d Garbage Collection done...(deleted %d - total count %d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tracker_entry_expire"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Dumped entry"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "tracker_entry_dump_size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "TRACKER - %s:%d Could not dump entries, null output buffer\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "TRACKER - %s:%d Could not dump entries, failed to calculate total size needed\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "TRACKER - %s:%d Could not dump entries, failed to calculate total size needed for memory used)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "TRACKER - %s:%d Could not dump entries, failed to add 4-bytes size to start of buffer\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "TRACKER - %s:%d Could not dump entries, output buffer too small %lu (needed %lu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "TRACKER - %s:%d Could not dump entries, failed to allocate buffer\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "TRACKER - %s:%d Could not dump entry, exceeded entry tlv buffer size\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "TRACKER - %s:%d Could not dump entries, failed to calculate total memory used\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "TRACKER - %s:%d Total memory size %zu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "TRACKER - %s:%d Failed to copy out dump buffer (%lu bytes)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "TRACKER - %s:%d Could not calculate entry dump size - invalid addr family %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "TRACKER - %s:%d Could not dump entry - invalid addr family %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "TRACKER - %s:%d Dumping domain <%s> len <%zu>\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "TRACKER - %s:%d Dumping domain owner <%s> len <%zu>\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "tracker_dump"
        prototype = ""
        caller = "tracker_action"
    }
    new {
        args = 1
        anchors {
            new {
                string = "Matched entry"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Updated entry"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to Update entry, deleting found entry"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "TRACKER - %s:%d Total entries %d (hashmask 0x%lX)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tracker_search_and_insert"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "copy_metadata"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "TRACKER - %s:%d Failed to copy metadata, dst buffer size too small\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "copy_metadata"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "MATCHED only entry for featureID"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Looking at entry"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Found entry by feature context id"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "soflow_db_lookup_by_feature_context_id"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SOFLOW - %s:%d <pid %d so %llx> No entry found for featureID %llu <count %d hash %X %X>\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "soflow_db_get_feature_context"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "soflow_db_free"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Remove entry"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "db->soflow_db_count == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SOFLOW - %s:%d <pid %d so %llx> <db %p> freeing db (count == %d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "soflow_db_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "soflow_db_remove_entry"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SOFLOW - %s:%d <pid %d so %llx> <Close nstat> - context %lX\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "soflow_db_remove_entry"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "soflow_entry_log"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SOFLOW - %s:%d <pid %d so %llx> <%s>: %s <%s(%d) entry %p, featureID %llu> outifp %d lport %d fport %d laddr %s faddr %s hash %X <rx p %llu b %llu, tx p %llu b %llu>\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "soflow_entry_log"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Looking for entry"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Found entry v6"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Found entry v4"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Entry not found"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "soflow_db_lookup_entry_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "Updated outifp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Updated address"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Updated port"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "soflow_udp_get_address_from_control"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SOFLOW - %s:%d <pid %d so %llx> Check control type %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "soflow_entry_update_local"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "soflow_db_add_entry"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SOFLOW - %s:%d <pid %d so %llx> Failed to add entry\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "SOFLOW - %s:%d <pid %d so %llx> <Open nstat> - context %lX\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "SOFLOW - %s:%d <pid %d so %llx> total count %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "soflow_get_flow"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "soflow_nstat_provider_request_extensions"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SOFLOW - %s:%d <pid %d so %llx> Collected NSTAT domain_info:pid %d domain <%s> owner <%s> ctxt <%s> bundle id <%s> is_tracker %d is_non_app_initiated %d is_silent %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "soflow_nstat_provider_request_extensions"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.xnu.net.soflow"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: Can't create SOFLOW GC thread"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "soflow_init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "soflow_gc_thread != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "soflow_init"
        prototype = ""
        caller = "soflow_get_flow"
    }
    new {
        args = 0
        anchors {
            new {
                string = "SOFLOW_GC"
                segment = "__TEXT"
                section = "__cstring"
                caller = "bsd_setthreadname"
            }
        }
        symbol = "soflow_gc_thread_func"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "soflow_gc_expire"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "GC Idle Timeout detected"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "GC cleanup entry"
                segment = "__TEXT"
                section = "__cstring"
                caller = "soflow_entry_log"
            }
            new {
                string = "SOFLOW - %s:%d <pid %d so %llx> <GC cleaned %d flows>\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "soflow_gc_expire"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vmm-present"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sysctl_vmm_present"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Data/Stack execution not permitted: %s[pid %d] at virtual address 0x%qx, protections were %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vm_map_lookup_and_lock_object"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s[%d] triggered unnest of range 0x%qx->0x%qx of DYLD shared region in VM map %p. While not abnormal for debuggers, this increases system memory footprint until the target exits.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "log_unnest_badness"
        prototype = ""
        caller = "vm_map_clip_unnest"
    }
    new {
        args = 0
        anchors {
            new {
                string = "shared_region: %p [%d(%s)] -> check_np(0x%llx)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: %p [%d(%s)] check_np(0x%llx) vm_shared_region_start_address() failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "shared_region: %p [%d(%s)] check_np(0x%llx) vm_shared_region_auth_remap() failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: %p [%d(%s)] check_np(0x%llx) copyout(0x%llx) error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: %p [%d(%s)] check_np(0x%llx) <- 0x%llx %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "shared_region_check_np"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "shared_region: %p [%d(%s)] map(): no files\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: %p [%d(%s)] map(): too many files (%d) max %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: %p [%d(%s)] map(): no mappings\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: %p [%d(%s)] map(): too many mappings (%d) max %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: %p [%d(%s)] map(): mapping count argument was too small\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "shared_region_map_and_slide_2_np"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: [%d(%s)]: map__with_linking() was disabled\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: [%d(%s)]: region_count == 0\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: [%d(%s)]: region_count too big %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: [%d(%s)]: link_info_size too small\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: [%d(%s)]: link_info_size too big %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: [%d(%s)]: failed to allocate regions\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: [%d(%s)]: failed to copyin regions kr=%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: [%d(%s)]: failed to allocate link_info\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: [%d(%s)]: failed to copyin link_info kr=%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: [%d(%s)]: unrecognized mwli_version=%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: [%d(%s)]: mwli_binds_offset too large %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: [%d(%s)]: mwli_binds_count too large %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: [%d(%s)]: mwli_chains_offset too large %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: [%d(%s)]: mwli_chains_size too small %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: [%d(%s)]: mwli_chains_size too large %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: [%d(%s)]: mwlr_fd mismatch %d and %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: [%d(%s)]: mwlr_protections EXECUTE not allowed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: [%d(%s)]: region %d, found VM_PROT_ZF not allowed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: [%d(%s)]: region %d, found VM_PROT_TPRO without VM_PROT_WRITE\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: [%d(%s)]: fp_get_ftype() failed, error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: [%d(%s)]: not readable\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: [%d(%s)]: failed to get vnode, error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: [%d(%s)]: vnode not VREG\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: [%d(%s)]: no memory object\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: [%d(%s)]: mac_file_check_mmap() failed, region %d, error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: [%d(%s)]: region %d, not code signed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "map_with_linking_np"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Failed attempt to set vm.enforce_shared_cache_dir sysctl\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "sysctl_scdir_enforce"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "shared_region: %p [%d(%s)] map(): copyin(0x%llx, %ld) failed (error=%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "shared_region_copyin"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "shared_region: %p [%d(%s)] map(): vm_shared_region_map_file() failed kr=0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: %p [%d(%s)] <- map\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "_shared_region_map_and_slide"
        prototype = ""
        caller = "shared_region_map_and_slide_2_np"
    }
    new {
        args = 0
        anchors {
            new {
                string = "shared_region: %p [%d(%s)] -> map\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: %p [%d(%s)] map(): no shared region\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: map(%p) root_dir mismatch\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: %p [%d(%s)] map data >1 mapping\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "shared_region: %p [%d(%s)] map data destination 0x%llx not aligned\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "shared_region: %p [%d(%s)] map data size 0x%llx not aligned\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: %p [%d(%s)] map: fd=%d lookup failed (error=%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "shared_region: %p [%d(%s)] map: fd=%d not readable\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "shared_region: %p [%d(%s)] map: fd=%d getwithref failed (error=%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "shared_region: %p [%d(%s)] map(%p:'%s'): not a file (type=%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "shared_region: %p [%d(%s)] map(%p:'%s'): missing CS blob\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: %p [%d(%s)] map(%p:'%s'): not in trust cache\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "shared_region: %p [%d(%s)] map(%p:'%s'): vnode_getattr(%p) failed (error=%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "shared_region: %p [%d(%s)] map(%p:'%s'): owned by uid=%d instead of 0\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "shared_region: %p [%d(%s)] map(%p:'%s'), vnode is not SIP-protected. \n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "shared_region: %p [%d(%s)]: vnode_lookup(%s) failed (error=%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: %p [%d(%s)] map(%p:'%s'): shared cache file not in expected directory\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "shared_region: %p [%d(%s)] map(%p:'%s'): vnode_size(%p) failed (error=%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "shared_region: %p [%d(%s)] map(%p:'%s'): no memory object\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "shared_region: %p [%d(%s)] map(%p:'%s'): mapping #%d/%d [0x%llx:0x%llx:0x%llx:0x%x:0x%x] is not code-signed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "shared_region_map_and_slide_setup"
        prototype = ""
        caller = "_shared_region_map_and_slide"
    }
    new {
        args = 0
        anchors {
            new {
                string = "compressor_store_stop_compaction = FALSE\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "macx_triggers"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Failed to open swap file %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vm_swapfile_open"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vnode_setsize for swap files failed: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "vnode_size (new file) for swap file failed: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "pin for swap files failed: %d,  file_size = %lld\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vm_swapfile_preallocate"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "vm_map_create_upl failed with %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "vm_compressor_backing_file.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vm_swapfile_io: vnode_pagein failed with %d.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "vm_swapfile_io: vnode_pageout failed with %d.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "vm_swapfile_io"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: Invalid URL scheme for %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "imageboot_needed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "imageboot_needed"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "not supported @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: image file not found or couldn\\'t be read: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: attached disk image %s as %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "/dev/"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: attempting to mount as hfs...\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "mount failed: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: attempting to mount as apfs...\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: failed to mount pivot image(%d)! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: failed to lookup pivot root (%d) ! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "BS-DMG failed to authenticate intra-FS \n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: could not authenticate the pivot image: %d. giving up. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: vfs_switch_root failed: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "imageboot_pivot_image"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: root device 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "vfs_mountroot() failed. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "invalid imageboot type: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "imageboot_mount_image"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "imageboot_setup: rootvnode is NULL. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: no valid path to image. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: second level root image url is %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "-rootdmg-ramdisk"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: container image url is %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "imageboot_setup_new"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s specified without %s or %s? @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: root image URL is '%s'\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Failed to mount root image (err=%d, auth=%d, ramdisk=%d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "imageboot path allocation failed - cannot allocate %d bytes @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Bogus imageboot path URL - missing path @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: failed: imageboot_read_file_pageable() = %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: failed: di_root_ramfile_buf() = %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: failed: vfs_mountroot() = %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "imageboot_setup"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: namei failed (%s) - %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: failed to get vnode size of %s - %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "negative file size @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: negative file offset\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: failed to open %s - %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "rootdmg-maxsize"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: file is too large (%lld > %lld)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: file is too large for non-pageable (%lld)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: Found resource fork for %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: Cannot read %lld bytes at offset %lld from %s - %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "imageboot_read_file_internal"
        prototype = ""
        caller = "imageboot_setup"
    }
    new {
        args = 1
        anchors {
            new {
                string = "kpc_init not called @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kern_kpc.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kpc_sysctl"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kern.profiling_data"
                segment = "__TEXT"
                section = "__cstring"
                caller = "mac_system_check_info"
            }
        }
        symbol = "grab_pgo_data"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nullfs_pagein: ubc_upl_map() failed with (%d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "nullfs_pagein: ubc_upl_unmap() failed with (%d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "nullfs_pagein"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "__netns_inited == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "netns.ns_reservation"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "netns_init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "netns.ns_token"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "netns.ns_flow_info"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netns_init"
        prototype = ""
        caller = "skywalk_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "(nt->nt_flags & NETNS_OWNER_MASK) <= NETNS_OWNER_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netns_release"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "(nt->nt_flags & NETNS_OWNER_MASK) == NETNS_BSD"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "old_namespace != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netns_change_addr"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "!((set_flags | clear_flags) & NETNS_RESERVATION_FLAGS)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netns_change_flags"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "netns_get_local_ports"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netns_get_local_ports"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "RB_EMPTY(&namespace->ns_reservations)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netns_ns_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 5
        anchors {
            new {
                string = "(flags & NETNS_OWNER_MASK) <= NETNS_OWNER_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "proto == IPPROTO_TCP || proto == IPPROTO_UDP"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "hport != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nt->nt_addr_len == addr_len"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "memcmp(nt->nt_addr, addr, addr_len) == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nt->nt_proto == proto"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nt->nt_port == hport"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(nt->nt_flags & NETNS_RESERVATION_FLAGS | NETNS_PRERESERVED) == (flags & NETNS_RESERVATION_FLAGS)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Request to overwrite valid netns token @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "nt->nt_flow_info != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_netns_reserve_kpi_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "res != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NETNS_REF_COUNT(res, flags) > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_netns_release_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "port != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "_netns_reserve_common: invalid owner 0x%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "NETNS_REF_COUNT(res, flags) != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_netns_reserve_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "token->nt_addr_len == sizeof(struct in_addr) || token->nt_addr_len == sizeof(struct in6_addr)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__netns_get_if_local_ports_block_invoke"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "__protons_inited == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "protons_init"
        prototype = ""
        caller = "skywalk_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "pflowid != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pflow_key != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "domain >= FLOWIDNS_DOMAIN_MIN && domain <= FLOWIDNS_DOMAIN_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "failed to allocate flowid node\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "retry_cnt <= FLOWIDNS_MAX_FLOWID_GEN_RETRY"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "flowidns_domain_array[domain].fd_nallocs != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "flowidns_allocate_flowid"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "flowid != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "flowid 0x%x not found in domain %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "flowidns_domain_array[domain].fd_nreleases != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "flowidns_release_flowid"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "__flowidns_inited == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "flowidns_init"
        prototype = ""
        caller = "skywalk_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "n_records <= UINT32_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "n_records > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "n_records == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "flowidns_stats_sysctl"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "!__sk_inited"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "skywalk_init"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "__u._u64 != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sk_gen_guard_id"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "p != kernproc"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "skywalk_kill_process"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "leaked skoid sub-node detected %p %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "skywalk_sysctl.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "skoid_destroy"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "csi->csi_flags & CSI_DESTROYED"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "tcall != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "csi_destroy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "port != NEXUS_PORT_ANY"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ch_open"
        prototype = ""
        caller = "__channel_open"
    }
    new {
        args = 0
        anchors {
            new {
                string = "(ch->ch_flags & CHANF_EVENT_RING) != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "filt_che_event"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(ch->ch_last[NR_EV] - ch->ch_first[NR_EV]) == 1"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ch_event"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ch->ch_flags & CHANF_KERNEL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ch_close_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "hw_kring != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kern_channel_tx_refill_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "err == 0 && ph_cnt == (uint32_t)ph_needed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kr_txfinalize"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "!sk_is_sync_protected()"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__channel_sync"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "h %zu add_called %zu tmp_h %zu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "cuckoo_hashtable.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "__resize_begin"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cuckoo_resize"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "net_filter_event_callback"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "net_filter_event: new state (0x%x) %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: eventhandler saw event type=net_filter_event_state event_code=%s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "net_filter_event_callback"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "socket "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "interface "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "application-firewall "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "parental-controls "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "net_filter_event_description"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "net_filter_event_enqueue"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: eventhandler enqueuing event of type=net_filter_event_state event_code=%s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "net_filter_event_mark"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "/AppleInternal/Library/BuildRoots/d3a62b52-2ef5-11ef-9ecd-e2437461156c/Library/Caches/com.apple.xbs/Sources/xnu/bsd/skywalk/lib/net_filter_event.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "eventhandler_invoke(\"net_filter_event\")"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "net_filter_event_enqueue_callback"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "skmem_dump_buf != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Region %p\n  | Mode         : 0x%b\n  | Memory       : [%llu in use [%llu wired]] / [%llu total]\n  | Transactions : [%llu segment allocs, %llu frees]\n\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Cache %p\n  | Mode         : 0x%b\n  | Memory       : [%llu in use] / [%llu total]\n  | Transactions : [%llu alloc failures]\n  |                [%llu slab creates, %llu destroys]\n  |                [%llu slab allocs,  %llu frees]\n\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "VM Pages\n  | Free         : %u [%u speculative]\n  | Active       : %u\n  | Inactive     : %u\n  | Wired        : %u [%u throttled, %u lopage_free]\n  | Purgeable    : %u [%u purged]\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "skmem_dump"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "sk_sys_region == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "failed to allocate global sysctls region @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "failed to allocate global sysctls object (%u bytes) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "skmem_init"
        prototype = ""
        caller = "skywalk_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "nexus"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nxv->flowswitch_nxv_adv->nxadv_ver == NX_FLOWSWITCH_ADVISORY_CURRENT_VERSION"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nxv->netif_nxv_adv->nna_version == NX_NETIF_ADVISORY_CURRENT_VERSION"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: invalid advisory type %d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "skmem_arena_create_for_nexus"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "schema.%.*s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ring.%.*s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "skmem_arena_create_for_nexus"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kstats.%s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "skmem_arena_create_for_necp"
        prototype = ""
        caller = "necp_arena_initialize"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s_ksd.%.*s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "skmem_arena_sd_setup"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ar->ar_refcnt > 1"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ar->ar_maprdrcnt != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "skmem_arena_munmap_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "skywalk.skm"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "skmem_cache_pre_init"
        prototype = ""
        caller = "skmem_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "skmem_debug"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bufctl.audit"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bufctl"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: bad alignment %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "mg.%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "skmem_cache_magsize_last->mt_minbuf == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "skmem_cache_magsize_last->mt_maxbuf == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: thread_call_allocate failed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "skmem_cache_init"
        prototype = ""
        caller = "skmem_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "powerof2(bufalign)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!(cflags & SKMEM_CR_BATCH)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "region->skr_c_obj_size >= P2ROUNDUP(bufsize, bufalign)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "objalign == region->skr_align"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IS_P2ALIGNED(skm, CHANNEL_CACHE_ALIGN_MAX)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!(region->skr_mode & SKR_MODE_MMAPOK)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!(region->skr_mode & SKR_MODE_PSEUDO)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "region->skr_c_obj_size >= sizeof(struct skmem_obj)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s.%s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: (bufsize %lu, chunksize %lu) > objsize %lu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "skmem_cache_create"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IS_P2ALIGNED(ccp, CHANNEL_CACHE_ALIGN_MAX)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "skmem_cache_create"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: '%s' (%p) not empty (%llu unfreed) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "skmem_cache_destroy"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "skmem_cache_destroy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: %s failed to get object info for %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "skmem_cache_get_obj_info"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "skmem_cache_get_obj_info"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ncpu != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "chunksize > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mtp <= skmem_cache_magsize_last"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "skmem_cache_magazine_max"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: %s failed to get bufctl for %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "skmem_audit_buf"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "skmem_audit_buf"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "skmem_seg_size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "skmem_seg_size != 0 && (skmem_seg_size % SKMEM_PAGE_SIZE) == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "skmem_md_seg_size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "skmem_drv_buf_seg_size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(skmem_drv_buf_seg_eff_size % SKMEM_MIN_SEG_SIZE) == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "skmem_drv_buf_seg_eff_size >= skmem_drv_buf_seg_size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "skmem_usr_buf_seg_size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "skmem_region_init"
        prototype = ""
        caller = "skmem_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "align != 0 && (align % SKMEM_CACHE_ALIGN) == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "powerof2(align)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "seglim != 0 && (seglim % SKMEM_PAGE_SIZE) == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "skmem_region_params_config"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s.reg.%s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "skmem_region_create"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "(skmflag & (SKMEM_NOSLEEP | SKMEM_FAILOK)) != (SKMEM_NOSLEEP | SKMEM_FAILOK)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "\"%s\": failed to allocate segment (sleeping mode) after %u retries\n\n%s"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "skmflag & (SKMEM_NOSLEEP | SKMEM_FAILOK)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(skmflag & (SKMEM_NOSLEEP | SKMEM_FAILOK)) == SKMEM_NOSLEEP"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "\"%s\": skr 0x%p unable to satisfy mandatory allocation\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "sg != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sg->sg_index == sg0->sg_index"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "skmem_region_alloc"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: '%s' (%p) not empty (%u unfreed) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "skmem_region_destroy"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "skmem_region_destroy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: '%s' (%p) idx %u (out of %u) is already allocated @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sksegment_alloc_with_idx"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!bit_test(skr->skr_seg_bmap[idx / BMAPSZ], idx % BMAPSZ)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sksegment_alloc_with_idx"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "sg->sg_md == md"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Fail to unwire md %p, err %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Fail to discard md %p, err %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "skmem_region_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "\"%s\": skr 0x%p sg 0x%p (idx %u) unable to satisfy mandatory allocation\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Fail to reclaim md %p, err %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Fail to wire md %p, err %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Fail to set md %p, err %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "sksegment_freelist_remove"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "\"%s\": boff_total counter overflows\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "\"%s\": failed to allocate slab (sleeping mode) after %llu msec, %u retries\n\n%s"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "boff > 0 && ((uint32_t)boff <= (SKMEM_SLAB_BACKOFF_THRES * 2))"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "skmem_slab_alloc_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IS_P2ALIGNED(buf, skm->skm_bufalign)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "skmem_slab_alloc_pseudo_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "%s: attempt to free invalid or already-freed obj %p on skm %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "skmem_slab_free_locked"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "skmem_slab.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SKMEM_SLAB_MEMBER(sl, buf)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "skmem_slab_free_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "IS_P2ALIGNED(obj, skm->skm_bufalign)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "skmem_slab_free_pseudo_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nx_port_info_size(npi->npi_info, &sz) == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_port_unbind"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nx_port_info_size(info, &sz) == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__nx_port_free_all_block_invoke"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "struct nx_port_info"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_port_free_all"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "fae->fae_flowid == flowid"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "na_flowadv_entry_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ALLOC"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "LARGE ALLOC"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "na_rings_mem_setup"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "sd_idle || defunct"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "internalized packet 0x%llx in htbl @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "nexus_adapter.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "na_kr_teardown_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.skywalk.traffic_rule.write"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.private.skywalk.traffic_rule.read"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nxioctl"
        prototype = ""
        caller = "nxop_ioctl"
    }
    new {
        args = 0
        anchors {
            new {
                string = "nxdom_attach_all"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nxdom_attach_all"
        prototype = ""
        caller = "nexus_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "!(nxdom_prov->nxdom_prov_flags & NXDOMPROVF_ATTACHED)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!(nxdom_prov->nxdom_prov_flags & NXDOMPROVF_INITIALIZED)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "builtin && nxdom_prov_default[type] == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nxdom_prov_add"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nxdom_prov_default[type] == nxdom_prov"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!nxdom_prov_release_locked(nxdom_prov)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nxdom_prov_del"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "(tmp4xpipes == 0) || (rx_rings == tx_rings)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "CHANNEL_SCHEMA_SIZE(tmpsumrings) <= UINT32_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nxprov_params_adjust"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nxprov_detacher"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nxprov_detacher"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nxprov_detacher_cont"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nxprov_detacher_cont"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nx_pktq_empty(q)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/AppleInternal/Library/BuildRoots/d3a62b52-2ef5-11ef-9ecd-e2437461156c/Library/Caches/com.apple.xbs/Sources/xnu/bsd/skywalk/nexus/nexus_pktq.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_netif_filter_fini"
        prototype = ""
        caller = "nx_netif_clean"
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.skywalk.nexus.traffic_rule"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nexus_init"
        prototype = ""
        caller = "skywalk_init"
    }
    new {
        args = 1
        anchors {
            new {
                string = "/AppleInternal/Library/BuildRoots/d3a62b52-2ef5-11ef-9ecd-e2437461156c/Library/Caches/com.apple.xbs/Sources/xnu/bsd/skywalk/nexus/nexus_traffic_rule.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "strlcmp(ntr->ntr_ifname, ifname, sizeof(ntr->ntr_ifname)) == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "inet_traffic_rule_match"
        prototype = ""
        caller = "inet_traffic_rule_find"
    }
    new {
        args = 0
        anchors {
            new {
                string = "/AppleInternal/Library/BuildRoots/d3a62b52-2ef5-11ef-9ecd-e2437461156c/Library/Caches/com.apple.xbs/Sources/xnu/bsd/skywalk/nexus/flowswitch/nx_flowswitch.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_fsw_prov_params_adjust"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s_%llu:%u"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_fsw_dom_connect"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "__nx_fsw_ifnet_eventhandler_tag != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "__nx_fsw_protoctl_eventhandler_tag != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fsw_use_dual_sized_pool"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fsw_init"
        prototype = ""
        caller = "nx_fsw_dom_init"
    }
    new {
        args = 2
        anchors {
            new {
                string = "if_input_netem_%s@fsw"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fsw_ctl"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "fsw_ifnet_event_callback"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: eventhandler saw event type=intf_event event_code=%s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "fsw_ifnet_event_callback"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "fsw_protoctl_event_callback"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: eventhandler saw event type=protoctl_event event_code=%d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "fsw_protoctl_event_callback"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "fsw_detach"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fsw->fsw_detach_flags != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fsw->fsw_detach_flags == FSW_DETACHF_DETACHED"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "_detached"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fsw_detach"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "fsw_%s[%u]_%s.%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fsw_vp_na_create"
        prototype = ""
        caller = "fsw_attach_vp"
    }
    new {
        args = 1
        anchors {
            new {
                string = "fsw_ring_enqueue_tail_drop"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fsw_ring_enqueue_tail_drop"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s_%llu"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fsw_dp_ctor"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fsw->fsw_reap_thread != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fsw_dp_ctor"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "_fsw_receive_locked"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fsw_receive"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "dp_flow_tx_route_process"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "dp_flow_tx_process"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "invalid tso flags: 0x%x\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "fsw_dp.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "_pkt_copypkt_sum(sph, soff, dph, doff, len, partial, do_csum)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fsw_ring_flush"
        prototype = ""
        caller = "fsw_vp_na_txsync"
    }
    new {
        args = 0
        anchors {
            new {
                string = "!(fsw->fsw_reap_flags & FSW_REAPF_RUNNING)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fsw_reap_thread_func"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "fe->fe_flags & FLOWENTF_ABORTED"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "i == cnt && cnt >= freed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fsw_reap_thread_cont"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "/AppleInternal/Library/BuildRoots/d3a62b52-2ef5-11ef-9ecd-e2437461156c/Library/Caches/com.apple.xbs/Sources/xnu/bsd/skywalk/nexus/flowswitch/fsw_ip_frag.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "ipf_pkt2mbuf"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "ln->ln_state > ND6_LLINFO_INCOMPLETE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fsw_ethernet_resolve"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "fsw_flow_add"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fsw_flow_add"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "fsw_flow_del"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fsw_flow_del"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "/AppleInternal/Library/BuildRoots/d3a62b52-2ef5-11ef-9ecd-e2437461156c/Library/Caches/com.apple.xbs/Sources/xnu/bsd/skywalk/nexus/flowswitch/fsw_classq.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fsw_classq_kpkt_to_mbuf"
        prototype = ""
        caller = "fsw_ethernet_resolve"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: QoS Marking mode invalid! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "fsw_qos.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fsw_qos_mark"
        prototype = ""
        caller = "dp_flow_tx_process"
    }
    new {
        args = 0
        anchors {
            new {
                string = "flow.owner"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "flow_init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "flow.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "flow.entry"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sk_fadv_nchunks != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "flow.adv.bmap"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "flow_init"
        prototype = ""
        caller = "nx_fsw_dom_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "pkt_len >= cls_len"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "af != AF_UNSPEC"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "flow_pkt_classify"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "/AppleInternal/Library/BuildRoots/d3a62b52-2ef5-11ef-9ecd-e2437461156c/Library/Caches/com.apple.xbs/Sources/xnu/bsd/skywalk/nexus/flowswitch/flow/flow_entry.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "flow_entry_alloc"
        prototype = ""
        caller = "flow_mgr_flow_add"
    }
    new {
        args = 0
        anchors {
            new {
                string = "RB_EMPTY(&flow_mgr_head)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_fsw_dom_terminate"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "NETNS_TOKEN_VALID(&fe->fe_port_reservation) || !(fe->fe_key.fk_mask & FKMASK_SPORT) || req->nfr_flags & NXFLOWREQF_ASIS || (fe->fe_flags & FLOWENTF_CHILD)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(req->nfr_flags & NXFLOWREQF_FLOWADV) ^ (req->nfr_flowadv_idx == FLOWADV_IDX_NONE)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "err != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "saddr->sa.sa_family == AF_INET || saddr->sa.sa_family == AF_INET6"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "flow_mgr_flow_add"
        prototype = ""
        caller = "fsw_flow_add"
    }
    new {
        args = 3
        anchors {
            new {
                string = "nx_port != NEXUS_PORT_ANY"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nx_port_na != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fo_cnt <= 1"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "flow_owner_activate_nexus_port"
        prototype = ""
        caller = "fsw_port_na_activate"
    }
    new {
        args = 0
        anchors {
            new {
                string = "fo->fo_num_flowadv == fo->fo_flowadv_max"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "flow_owner_flowadv_index_alloc"
        prototype = ""
        caller = "flow_entry_alloc"
    }
    new {
        args = 1
        anchors {
            new {
                string = "fe->fe_nx_port == fo->fo_nx_port"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "flow_owner_bucket_activate_nx_port_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "flow.route"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "flow_route_init"
        prototype = ""
        caller = "flow_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "fr->fr_usecnt > 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "flow_route_release"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "src_ifp != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "flow_route_select_laddr"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "!(fr->fr_flags & FLOWRTF_ATTACHED)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fr->fr_usecnt == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fr->fr_rt_dst == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fr->fr_rt_evhdlr_tag == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fr_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "!uuid_is_null(ee_arg.ee_fm_uuid)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!uuid_is_null(ee_arg.ee_fr_uuid)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "flow_route_ev_callback"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: eventhandler saw event type=route_event event_code=%s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_route_ev_callback"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "gencnt != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ip_v == IPVERSION || ip_v == IPV6_VERSION"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_flow_route_laddr_validate"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "flow.stats"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "flow_stats_init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "flow_stats.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "flow_stats_init"
        prototype = ""
        caller = "flow_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "os_ref_get_count(&fs->fs_refcnt) == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/AppleInternal/Library/BuildRoots/d3a62b52-2ef5-11ef-9ecd-e2437461156c/Library/Caches/com.apple.xbs/Sources/xnu/bsd/skywalk/nexus/flowswitch/flow/flow_stats.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "flow_stats_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "m != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/AppleInternal/Library/BuildRoots/d3a62b52-2ef5-11ef-9ecd-e2437461156c/Library/Caches/com.apple.xbs/Sources/xnu/bsd/skywalk/nexus/flowswitch/flow/flow_track.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "flow_track_abort_quic"
        prototype = ""
        caller = "flow_entry_destroy"
    }
    new {
        args = 0
        anchors {
            new {
                string = "(currm != NULL || currp != NULL) && ((currm != NULL) != (currp != NULL))"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "copy_pkt_csum_packed"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kern_buflet_set_data_length(dbuf->dba_buflet[i], tmplen + buf_off) == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_copy_data_sum_dbuf"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "stcp->th_off << 2 == pkt->pkt_flow_tcp_hlen"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "flow_agg_merge_hdr"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "kern_buflet_set_data_length(dbuf->dba_buflet[0], kern_buflet_get_data_length(dbuf->dba_buflet[0]) + copied_len) == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "copy_pkt_csum"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "spkt->pkt_headroom == 0 && spkt->pkt_l2_len == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "flow_rx_agg_channel"
        prototype = ""
        caller = "flow_rx_agg_tcp"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s%s/%s%s%s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_monitor_na_find"
        prototype = ""
        caller = "na_find"
    }
    new {
        args = 0
        anchors {
            new {
                string = "na_arena->arn_rx_pp->pp_md_type == NEXUS_META_TYPE_PACKET"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_mon_na_activate_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "IS_P2ALIGNED(len, 64)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IS_P2ALIGNED(dbuf, sizeof(uint64_t))"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "len <= UINT16_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_mon_quantum_copy_64x"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "netif_%llu"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_netif_prov_nx_ctor"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "qset_ext->qe_prov_ctx != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "qset_ext->qe_notify_steering_info != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_netif_notify_steering_info"
        prototype = ""
        caller = "inet_traffic_rule_notify"
    }
    new {
        args = 0
        anchors {
            new {
                string = "if_ns->ifn_rx_mit_cfg_idx < mit->mit_cfg_idx_max"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_netif_copy_stats"
        prototype = ""
        caller = "_if_copy_netif_stats"
    }
    new {
        args = 2
        anchors {
            new {
                string = "ring != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netif_ring_tx_refill"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "llink_init != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kern_nexus_netif_llink_add"
        prototype = ""
        caller = "feth_clone_create"
    }
    new {
        args = 1
        anchors {
            new {
                string = "netif:%llu:%.*s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_netif_dom_connect"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "drop_lim != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_netif_attach"
        prototype = ""
        caller = "nx_netif_ctl_attach"
    }
    new {
        args = 1
        anchors {
            new {
                string = "capab.kncia_config != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "capab.kncia_provider_context != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "capab.cqe_notify_steering_info != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "capab.cqe_prov_ctx != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PP_BUF_SIZE_DEF(nif->nif_nx->nx_tx_pp) >= max(tso_v4_mtu, tso_v6_mtu)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "na_netif_finalize"
        prototype = ""
        caller = "na_netif_compat_finalize"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: ifp=%p couldn\\'t get a poll  thread; err=%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "nx_netif_compat_na_activate"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ifp->if_poll_thread != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "netif_poll_thread_exit"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_netif_compat_na_activate"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Failed to activate mbuf ring cluster 0x%llx (%d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "nx_netif_compat.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_netif_compat_na_txsync"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "(poff + len) <= (PP_BUF_SIZE_DEF(pp) * pp->pp_max_frags)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_netif_host_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "skywalk_%s_tx_%u"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "skywalk_mit_%s_tx_%u"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "tx_%u"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "skywalk_%s_rx_%u"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "skywalk_mit_%s_rx_%u"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "rx_%u"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mit->mit_cfg != NULL && mit->mit_cfg_idx < mit->mit_cfg_idx_max"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mit->mit_thread != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_netif_mit_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "!(mit->mit_flags & (NETIF_MITF_READY | NETIF_MITF_RUNNING))"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_netif_mit_thread_func"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "NetIf"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_netif_agent_init"
        prototype = ""
        caller = "na_netif_finalize"
    }
    new {
        args = 1
        anchors {
            new {
                string = "nx_netif_filter_remove"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_netif_filter_remove"
        prototype = ""
        caller = "netif_filter_na_activate"
    }
    new {
        args = 1
        anchors {
            new {
                string = "com.apple.private.skywalk.default-drop"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_netif_default_drop_sysctl"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "tc < MBUF_TC_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_netif_filter_tx_processed_mbuf_enqueue"
        prototype = ""
        caller = "nx_netif_filter_tx_cb"
    }
    new {
        args = 0
        anchors {
            new {
                string = "i >= 0 && i < MBUF_TC_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_netif_tx_processed_mbuf_get_len"
        prototype = ""
        caller = "nx_netif_compat_tx_get_len"
    }
    new {
        args = 0
        anchors {
            new {
                string = "i >= 0 && i < KPKT_TC_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/AppleInternal/Library/BuildRoots/d3a62b52-2ef5-11ef-9ecd-e2437461156c/Library/Caches/com.apple.xbs/Sources/xnu/bsd/skywalk/nexus/nexus_pktq.h"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_netif_tx_processed_pkt_get_len"
        prototype = ""
        caller = "nx_netif_native_tx_get_len"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s_filter:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s_netif_filter_pp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netif_filter_na_create"
        prototype = ""
        caller = "nx_netif_na_find"
    }
    new {
        args = 0
        anchors {
            new {
                string = "(ft = nif->nif_flow_table) != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/AppleInternal/Library/BuildRoots/d3a62b52-2ef5-11ef-9ecd-e2437461156c/Library/Caches/com.apple.xbs/Sources/xnu/bsd/skywalk/nexus/netif/nx_netif_flow.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_netif_flow_match"
        prototype = ""
        caller = "validate_packet"
    }
    new {
        args = 0
        anchors {
            new {
                string = "nx_netif_flow_remove"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_netif_flow_remove"
        prototype = ""
        caller = "netif_vp_na_activate"
    }
    new {
        args = 0
        anchors {
            new {
                string = "netif_vp:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netif_vp_na_create"
        prototype = ""
        caller = "nx_netif_na_find"
    }
    new {
        args = 0
        anchors {
            new {
                string = "(fpkt->pkt_pflags & PKT_F_TRUNCATED) != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(fpkt->pkt_pflags & PKT_F_TRUNCATED) == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_netif_mbuf_to_filter_pkt_chain"
        prototype = ""
        caller = "nx_netif_filter_tx_mbuf_enqueue"
    }
    new {
        args = 0
        anchors {
            new {
                string = "(fpkt->pkt_pflags & PKT_F_MBUF_DATA) != 0 || (fpkt->pkt_pflags & PKT_F_PKT_DATA) != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pkt != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "filter packet has no mbuf or packet attached: pkt_pflags 0x%llx\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "nx_netif_util.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "fill_vlan_info"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "skywalk_netif_poller_%s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "!(ifp->if_poll_flags & (IF_POLLF_READY | IF_POLLF_RUNNING))"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netif_rxpoll_compat_thread_func"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "(m_cnt > 0) || ((m_head == NULL) && (m_tail == NULL))"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netif_rxpoll_compat_thread_cont"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "gso_flags < GSO_END_OF_TYPE"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netif_gso_dispatch"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "((uintptr_t)state->hdr.ip6 & (uintptr_t)0x1) == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "((uintptr_t)state->hdr.ip & (uintptr_t)0x1) == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "m->m_pkthdr.tso_segsz != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netif_gso_ip_tcp_init_state"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "total_len > state->hlen"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "((tx_headroom + state->mac_hlen) & 0x1) == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(tx_headroom + state->hlen + mss) <= PP_BUF_SIZE_DEF(pp)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "__packet_finalize(SK_PKT2PH(pkt)) == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netif_gso_tcp_segment_mbuf"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "lasthdr_off <= UINT8_MAX"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netif_gso_ipv6_tcp"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "c == cnt"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "b == bytes"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "netif_qset_enqueue"
        prototype = ""
        caller = "dp_flow_tx_process"
    }
    new {
        args = 0
        anchors {
            new {
                string = "llink->nll_state == NETIF_LLINK_STATE_DESTROYED"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_netif_llink_free"
        prototype = ""
        caller = "nx_netif_llink_release"
    }
    new {
        args = 1
        anchors {
            new {
                string = "drvq->nq_qset->nqs_llink->nll_state == NETIF_LLINK_STATE_DESTROYED"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "KPKTQ_EMPTY(&drvq->nq_pktq)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_netif_qset_free"
        prototype = ""
        caller = "nx_netif_qset_destroy"
    }
    new {
        args = 0
        anchors {
            new {
                string = "llink->nll_default_qset == NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "llink->nll_default_qset != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_netif_llink_create_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "qset->nqs_num_tx_queues == _NETIF_QSET_MAX_TXQS"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_netif_qset_init"
        prototype = ""
        caller = "nx_netif_qset_create"
    }
    new {
        args = 0
        anchors {
            new {
                string = "SKYWALK_NATIVE(ifp)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nif->nif_default_llink_params != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_netif_llink_init"
        prototype = ""
        caller = "na_netif_finalize"
    }
    new {
        args = 3
        anchors {
            new {
                string = "%s}%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_upipe_na_find"
        prototype = ""
        caller = "na_find"
    }
    new {
        args = 1
        anchors {
            new {
                string = "upipe:%llu:%.*s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_upipe_dom_connect"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "/AppleInternal/Library/BuildRoots/d3a62b52-2ef5-11ef-9ecd-e2437461156c/Library/Caches/com.apple.xbs/Sources/xnu/bsd/skywalk/nexus/upipe/nx_user_pipe.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_upipe_na_activate"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "kpipe:%llu:%.*s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_kpipe_dom_connect"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "/AppleInternal/Library/BuildRoots/d3a62b52-2ef5-11ef-9ecd-e2437461156c/Library/Caches/com.apple.xbs/Sources/xnu/bsd/skywalk/nexus/kpipe/nx_kernel_pipe.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "nx_kpipe_na_activate"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "(doff + len) <= PP_BUF_SIZE_DEF(dpkt->pkt_qum.qum_pp)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pkt_copy_from_pkt"
        prototype = ""
        caller = ""
    }
    new {
        args = 6
        anchors {
            new {
                string = "(doff + len) <= (PP_BUF_SIZE_DEF(dpkt->pkt_qum.qum_pp) * __packet_get_buflet_count(dph))"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pkt_copy_multi_buflet_from_pkt"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "__buflet_set_data_offset(dbuf, doff) == 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_pkt_copypkt_sum"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: mbuf too large %p [off %d, len %d] @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "m_copypkt_sum"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: bad packet, 0x%llx [off %d, len %d] @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "_pkt_copyaddr_sum"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_pkt_copyaddr_sum"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "SK_PTR_TYPE(ph1) == NEXUS_META_TYPE_PACKET"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "p1->pkt_bufs_cnt == 1"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kern_packet_clone_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PKT_ADDR(ph) && bnew && (bnew != bprev)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PP_HAS_BUFFER_ON_DEMAND(PKT_ADDR(ph)->pkt_qum.qum_pp)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(bprev != NULL || bcnt == 0) && (bcnt < PKT_ADDR(ph)->pkt_bufs_max)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kern_packet_add_buflet"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "pkt.opt"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pkt.flow"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pkt.compl"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pp_init"
        prototype = ""
        caller = "skmem_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "srp_array[SKMEM_REGION_TXKMD].srp_c_obj_cnt != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kmd_srp->srp_c_obj_size != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "buf_srp->srp_c_obj_cnt != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "buf_srp->srp_c_obj_size != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kbft_srp->srp_c_obj_cnt != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kbft_srp->srp_c_obj_size != 0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "skywalk.pp.%s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(kbft_srp != NULL) && (kbft_srp->srp_c_obj_cnt > 0)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(ubft_srp != NULL) && (ubft_srp->srp_c_obj_cnt > 0)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kmd.%s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kbft_def.%s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kbft_large.%s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "buf_def.%s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "buf_large.%s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pp_create"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "pp != NULL && baddr != NULL"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(seg != NULL) == (idx != NULL)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pp_alloc_buffer"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "bufcnt == 1"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pp_metadata_construct"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(init->kbi_max_frags != 0) && (init->kbi_max_frags <= UINT16_MAX)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kern_pbufpool_create"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "-enable_uexc"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "register_uexc_handler"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "unix_syscall: unknown return type @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "arm_prepare_syscall_return"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "product-soc-name"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sysctl_load_brand_string"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "size mismatch @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "sysctl.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "arm_host_info"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ARM architecture"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s processor"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Apple"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "make_brand_string"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "FPU VME DE PSE TSC MSR PAE MCE CX8 APIC SEP MTRR PGE MCA CMOV PAT PSE36 CLFSH DS ACPI MMX FXSR SSE SSE2 SS HTT TM PBE SSE3 PCLMULQDQ DTSE64 MON DSCPL VMX EST TM2 SSSE3 CX16 TPR PDCM SSE4.1 SSE4.2 AES SEGLIM64"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "cpu_features"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "dtrace_user_probe() should be calling aston()\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "dtrace_user_probe"
        prototype = ""
        caller = "handle_uncategorized"
    }
    new {
        args = 1
        anchors {
            new {
                string = "Detected attempt to place DTrace probe on exclusive memory instruction (pc = 0x%llx); refusing to trace (or exclusive operation could never succeed).\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "dtrace: fasttrap init64: Unrecognized instruction: %08x at %08llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "fasttrap_tracepoint_init"
        prototype = ""
        caller = "fasttrap_pid_enable"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Should never get here! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "An instruction DTrace doesn't expect: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "fasttrap_pid_probe"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "current thread doesn't own the lock (%p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "bsd_stubs.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "devsw_unlock"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s\nBacktrace 0x%lx 0x%lx 0x%lx 0x%lx 0x%lx 0x%lx 0x%lx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "OSReportWithBacktrace"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "OSMetaClass: preModLoad() wasn't called for class %s (runtime internal error)."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN11OSMetaClassC2EPKcPKS_j"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "OSMetaClass: Can't record classes for kext %s - kext not found."
                segment = "__TEXT"
                section = "__cstring"
                caller = "-[Ace3SoCRestoreInfoHelperBackDeploy log:]"
            }
            new {
                string = "OSMetaClass: Kext %s class %s is a duplicate;kext %s already has a class by that name."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN11OSMetaClass11postModLoadEPv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "OSMetaClass: Class %s - bad retain (%d)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZNK11OSMetaClass18instanceDestructedEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = ">maxDepth @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN11OSMetaClass16applyToInstancesEP12OSOrderedSetPFbPK8OSObjectPvES5_"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s::_RESERVED%s%d called. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZNK11OSMetaClass14reservedCalledEi"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%24s count: %03d x 0x%03x = 0x%06x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN11OSMetaClass19printInstanceCountsEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "OSMetaClass::getClassDictionary() is obsoleted. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN11OSMetaClass18getClassDictionaryEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "OSMetaClass::serialize(): Obsoleted @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZNK11OSMetaClass9serializeEP11OSSerialize"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Classes"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN11OSMetaClass24serializeClassDictionaryEP12OSDictionary"
        prototype = ""
        caller = "__ZNK16IOKitDiagnostics9serializeEP11OSSerialize"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Unexpected cast fail: from %p to %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZL21panic_crash_fail_castPK15OSMetaClassBasePK11OSMetaClass"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "OSMetaClass: Failed to record class in kext."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "OSMetaClass: Duplicate class encountered."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "OSMetaClass: Kext not found for metaclass."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN11OSMetaClass8logErrorEi"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "A kext releasing a(n) %s has corrupted the registry. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZNK8OSObject13taggedReleaseEPKvi"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s is not serializable"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZNK8OSObject9serializeEP11OSSerialize"
        prototype = ""
        caller = "__ZNK11IOCatalogue9serializeEP11OSSerialize"
    }
    new {
        args = 2
        anchors {
            new {
                string = "<true/>"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "<false/>"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZNK9OSBoolean9serializeEP11OSSerialize"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Trying to change a collection in the registry @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "OSCollection.cpp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Trying to change a collection in the registry"
                segment = "__TEXT"
                section = "__cstring"
                caller = "OSReportWithBacktrace"
            }
        }
        symbol = "__ZN12OSCollection11haveUpdatedEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZNK6OSData9serializeEP11OSSerialize"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "<key>"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZNK12OSDictionary9serializeEP11OSSerialize"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "OSValueObject<void*>"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_GLOBAL__sub_I_OSCollection.cpp_1"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "OSValueObject<OSKextRequestResourceCallback>"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_GLOBAL__sub_I_OSCollection.cpp_0"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "OSKext"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "OSKextSavedMutableSegment"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "OSDextStatistics"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "OSDextCrash"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_GLOBAL__sub_I_OSKext.cpp"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: Unsupported kmod_info->id (%d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "allocAndInitFakeKext"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "CFBundleName"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext20allocAndInitFakeKextEP9kmod_info"
        prototype = ""
        caller = "__ZN6OSKext10initializeEv"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Kernel kext log filter 0x%x per kextlog boot arg."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "-nokcmismatchpanic"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "OSKernelCPUType"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "OSKernelCPUSubtype"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "__kmod_info"
                segment = "__TEXT"
                section = "__cstring"
                caller = "getsectbynamefromheader"
            }
            new {
                string = "com.apple.iokit.IOSurface"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "Kext system initialized."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext10initializeEv"
        prototype = ""
        caller = "iokit_post_constructor_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Jettisoning kext bootstrap segments."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "__PRELINK"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "__symtab"
                segment = "__TEXT"
                section = "__cstring"
                caller = "getsectbynamefromheader"
            }
            new {
                string = "keepsyms boot arg specified; keeping linkedit segment for symbols."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext19removeKextBootstrapEv"
        prototype = ""
        caller = "kernel_bootstrap_thread"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Flushing dependency info for non-loaded kexts."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Checking for unused kexts to autounload."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Request Stale"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__Z22_OSKextConsiderUnloadsPvS_"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Can't get kernelmanagerd port."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kernelmanagerd ping failed (0x%x)."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext15pingIOKitDaemonEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "System shutdown; requesting immediate kernelmanagerd exit."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext12willShutdownEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Autounloading for kext %s now %sabled."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext20setAutounloadEnabledEb"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Dext %s DextUniqueIdentifier too long."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Dext %s does not have a DextUniqueIdentifier"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext17parseDextUniqueIDEP12OSDictionaryPKc"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Kext %s can't find prelinked kext executable size."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to allocate space for prelinked kext %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s failed to create executable wrapper."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s can't find prelinked kext kmod_info address."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ModuleIndex"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "OSMutableSegmentCopy"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Saving kext %s mutable segment %.*s %llx->%llx."
                segment = "__TEXT"
                section = "__cstring"
                caller = "-[Ace3SoCRestoreInfoHelperBackDeploy log:]"
            }
            new {
                string = "Kext %s failed to save mutable segment %llx->%llx."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext25initWithPrelinkedInfoDictEP12OSDictionaryb7kc_kind"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Requested codeless kext dictionary does not contain the '%s' key"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Refusing to register codeless kext that declares an executable/kernel component: %s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext20initWithCodelessInfoEP12OSDictionary"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "No booter-provided data for kext device tree entry %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "No kext info dictionary for booter device tree entry %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Can't translate physical address 0x%x of kext info dictionary for device tree entry %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Error unserializing info dictionary for device tree entry %s: %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Can't translate physical address 0x%x of kext bundle path for device tree entry %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to create wrapper for device tree entry %s kext path %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Can't translate physical address 0x%x of kext executable for device tree entry %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to create executable wrapper for device tree entry %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to set kext executable for device tree entry %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext18initWithBooterDataEP8OSStringP6OSData"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "New dext %s, v%s requested does not have a unique dext identifier\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Found a dext %s, v%s: with no unique dext identifier\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Refusing new dext %s, v%s:a dext v %s with the same unique dext identifier (%s) already exists\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Dext %s, v%s , unique dext identifier %s Upgraded to v%s, unique dext identifier %s \n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Upgrade delayed for %s v%s, unique dext identifier %s with v%s, unique dext identifier %s.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Notice - new kext %s, v%s matches a %s dextwith the same bundle ID, v%s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Notice - new kext %s, v%s matches %s kext but can't determine if executables are the same (no UUIDs)."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Refusing new kext %s, v%s: a %s copy is already present (same version and executable)."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Refusing new kext %s, v%s: already have %s v%s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Refusing new kext %s, v%s: a %s copy with a different executable UUID is already present."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Refusing new kext %s, v%s: a codeless copy is already %s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Dropping old copy of kext %s (v%s) for newly-added (v%s)."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Dropping lower version (v%s) of registered kext %s for higher (v%s)."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s is already registered with a higher/same version (v%s); dropping newly-added (v%s)."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s, v%s registered and available for loading."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext18registerIdentifierEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Attempt to set info dictionary on a kext that already has one (%s). @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "OSBundleEnableKextLogging"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "CFBundleIdentifier missing/invalid type in kext %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Can't copy bundle identifier as symbol for kext %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s error - CFBundleIdentifier over max length %d."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s error - CFBundleVersion missing/invalid type."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s error - CFBundleVersion bad value '%s'."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s error - OSBundleCompatibleVersion bad value '%s'."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s error - %s %s > %s %s (must be <=)."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext24setInfoDictionaryAndPathEP12OSDictionaryP8OSString"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Attempt to set an executable on a kext that already has one (%s). @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN6OSKext13setExecutableEP6OSDataS1_b"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "HIDDefaultBehavior"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "HIDPointerAccelerationType"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "HIDRemoteControlType"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "HIDScrollAccelerationType"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Physical Interconnect Location"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Vendor"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Vendor Identification"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Vendor Name"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bConfigurationValue"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bInterfaceNumber"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "idProduct"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext27uniquePersonalityPropertiesEP12OSDictionaryb"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Attempt to free loaded kext %s. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Freeing dext %s but dextLaunchedCount is %d\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN6OSKext4freeEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Internal error; invalid arguments to OSKext::serializeLogInfo()."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to create serializer on log info for request from user space."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to serialize log info for request from user space."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to copy log info for request from user space."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext16serializeLogInfoEP7OSArrayPPcPj"
        prototype = ""
        caller = "__ZN6OSKext13handleRequestEP4hostjPcjPS2_PjS3_S4_"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Failed to query kext UUID (MAC policy error 0x%x)."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext22copyKextUUIDForAddressEP8OSNumber"
        prototype = ""
        caller = "__ZN6OSKext13handleRequestEP4hostjPcjPS2_PjS3_S4_"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Failed to remove kext %s (MAC policy error 0x%x)."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Can't remove kext %s; unsupported by cache."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Can't remove kext %s; services failed to terminate - 0x%x."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Can't remove kext %s; kext failed to unload - 0x%x."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Fileset kext %s unloaded."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Removing kext %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext10removeKextEPS_b"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Can't remove kext %s - not found."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext24removeKextWithIdentifierEPKcb"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Can't remove kext with load tag %d - not found."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext21removeKextWithLoadTagEjb"
        prototype = ""
        caller = "OSKextUnloadKextWithLoadTag"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Driver-"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "\"%s\" not a kext"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext31createExcludeListFromBooterDataEP12OSDictionaryP20OSCollectionIterator"
        prototype = ""
        caller = "__ZN12KLDBootstrap20readBooterExtensionsEv"
    }
    new {
        args = 0
        anchors {
            new {
                string = "OSKextExcludeList"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext17updateExcludeListEP12OSDictionary"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "OSBundleRequired"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Local-Root"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Network-Root"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Safe Boot"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Console"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext20isLoadableInSafeBootEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Cannot unload dext for upgrade %s: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Cannot send upgrade notification for %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext19replaceDextInternalEPS_S0_"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Pending upgrade found for %s but dextLaunchedCount is 0!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext11upgradeDextEPS_S0_"
        prototype = ""
        caller = "__ZN6OSKext18registerIdentifierEv"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s services failed to terminate - 0x%x."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext10removeDextEPS_"
        prototype = ""
        caller = "__ZN6OSKext13handleRequestEP4hostjPcjPS2_PjS3_S4_"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Cannot find dext UniqueID for %s, cannot increment dext launches\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Too many dexts launched for %s UniqueID %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "New dext launched for  %s UniqueID %s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Dext %s UniqueID %s requires update, cannot launch a new dext\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Dext %s: UniqueID %s does not match UniqueID looked for %s, cannot launch a new dext\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext24incrementDextLaunchCountEPS_P6OSData"
        prototype = ""
        caller = "__ZN24IOUserServerCheckInToken4initEPK8OSSymbolP8OSNumberP6OSKextP6OSData"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Cannot find dext for %s, cannot decrement dext launches\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Cannot find dext UniqueID for %s, cannot decrement dext launches\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Over decrementing dext launch for %s UniqueID %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Dext terminated for %s UniqueID %s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Dext upgrade for %s UniqueID %s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Dext unload for %s UniqueID %s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext24decrementDextLaunchCountEP8OSString"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Allocation failure."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext22getPropertyForHostArchEPKc"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Can't load kext %s - not found."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Can't load kext %s - requests to user space are disabled."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext Load Request"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s not found; queued load request to user space."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s might not load - kernelmanagerd is currently unavailable."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext22loadKextWithIdentifierEP8OSStringPP8OSObjectbbhhP7OSArray"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Received kext KC load request from user space."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Switching to late startup (user-space) kext loading policy."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Start Exclude Level"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Start Matching Exclude Level"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Personality Names"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Received request from user space to load KC kext %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s Loaded successfully from %s KC"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext14loadKextFromKCEPS_P12OSDictionary"
        prototype = ""
        caller = "__ZN6OSKext13handleRequestEP4hostjPcjPS2_PjS3_S4_"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Codeless Kext Info"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Missing 'Codeless Kext Info' dictionary in codeless kext load request of %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Received request from user space to load codeless kext %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Could not instantiate codeless kext."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Codeless kext identifiers don't match '%s' != '%s'"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext16loadCodelessKextEP8OSStringP12OSDictionary"
        prototype = ""
        caller = "__ZN6OSKext13handleRequestEP4hostjPcjPS2_PjS3_S4_"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Recorded kext %s as a candidate for inclusion in prelinked kernel."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to record kext %s as a candidate for inclusion in prelinked kernel."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext23recordIdentifierRequestEP8OSString"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Kext %s is not loadable"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s is already loaded."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to load kext %s (MAC policy error 0x%x)."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext loading is disabled (attempt to load kext %s)."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Can't load kext %s - no more load tags to assign."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Loading kext %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Can't load kext %s - not in a kext collection."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Can't load kext %s - failed to resolve library dependencies."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Internal error loading kext %s; dependency disappeared."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Dependency %s of kext %s failed to load."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s start failed (result 0x%x)."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s failed to load (0x%x)."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s loaded."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext Load Notification"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext4loadEhhP7OSArray"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Sliding kext %s: External relocations found."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Sliding kext %s: No linkedit segment."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Sliding kext %s: No segments."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Sliding kext %s: Unexpected relocation found."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s: new kext size is too large."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext24slidePrelinkedExecutableEb"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "7.9.9"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kernel component %s has incorrect version %s; expected %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Not entitled to link kext '%s'"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Can't load kext %s - executable is missing."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Refusing to link non-prelinked kext: %s (no kxld support)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s header size is too large (%lu > UINT32_MAX)."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s size is too large (%lu > UINT32_MAX)."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s executable loaded; %u pages at 0x%lx (load tag %u)."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "__asan_globals"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "KASAN: cannot load KASAN-ified kext %s on a non-KASAN kernel\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to load executable for kext %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext14loadExecutableEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "FileSet booted with no Linkedit segment @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Jettisoning fileset Linkedit segments from vmaddr %llx with size %llu"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_ZN6OSKext30jettisonFileSetLinkeditSegmentEP14mach_header_64"
        prototype = ""
        caller = "__ZN6OSKext19removeKextBootstrapEv"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Attempt to set linked executable on kext that already has one (%s).\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN6OSKext19setLinkedExecutableEP6OSData"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "OSBundleForceDTraceInit"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Ignoring OSBundleForceDTraceInit for Boot KC Kext %s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext18registerWithDTraceEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Kext %s failed to set initial VM protections for segment %s - 0x%x."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext15setVMAttributesEbb"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Kext %s - NULL kmod_info pointer."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s - NULL module %s pointer."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s module %s pointer is outside of kext range (%s %p - kext starts at %p)."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s module %s pointer is outside of kext range (%s %p - kext at %p-%p)."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s - bad %s pointer %p."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext19validateKextMappingEb"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Kext %s - page %p is not backed by physical memory."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_ZN6OSKext20verifySegmentMappingEP18segment_command_64"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Attempt to start nonloaded kext %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext loading is disabled (attempt to start kext %s)."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s start - internal error, dependency disappeared."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s start - dependency %s failed to start (error 0x%x)."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Not starting %s - dependency %s not started yet."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s calling module start function."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s is now started."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s did not start (return code 0x%x)."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext5startEb"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Attempt to stop nonloaded kext %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s - C++ instances; can't stop."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s - has references (linkage or tracking object); can't stop."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s calling module stop function."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s is now stopped and ready to unload."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s did not stop (return code 0x%x)."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext4stopEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Kext unloading is disabled (%s)."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Can't unload kext %s; outstanding references %d (linkage or tracking object)."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Can't unload kext %s; classes have instances:"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s can't unload - module stop returned 0x%x."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s unloading."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to reset kext %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s unloaded."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext6unloadEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Kext %s has delayed autounload set; skipping and clearing flag."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext14autounloadKextEPS_"
        prototype = ""
        caller = "__Z22_OSKextConsiderUnloadsPvS_"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%scheduling %sscan for unused kexts in %lu seconds."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "initial "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext15considerUnloadsEb"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Kext %s has a dependency loop; can't resolve dependencies."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s resolving dependencies."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s can't create bookkeeping stack to resolve dependencies."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s - can't resolve dependencies; %s missing/invalid type."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s - can't allocate dependencies array."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s - can't allocate dependencies iterator."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s - illegal type in OSBundleLibraries."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s - invalid library version %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s - library kext %s not found."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s - library kext %s not compatible with requested version %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s (prelinked) - library kext %s (v%s) not prelinked."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s added dependency %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = "-[Ace3SoCRestoreInfoHelperBackDeploy log:]"
            }
            new {
                string = "Kext %s pulling %d dependencies from codeless library %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = "-[Ace3SoCRestoreInfoHelperBackDeploy log:]"
            }
            new {
                string = "Kext %s added dependency %s from codeless library %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = "-[Ace3SoCRestoreInfoHelperBackDeploy log:]"
            }
            new {
                string = "Error - kext %s declares a dependency on %s, which is not permitted."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Error - kext %s declares %s dependencies. Only %s* dependencies are supported for 64-bit kexts."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Warning - kext %s declares no %s* dependencies. If it uses any KPIs, the link may fail with undefined symbols."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s successfully resolved dependencies."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext19resolveDependenciesEP7OSArray"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Kext %s - internal error propagating compatibility dependencies."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext27addBleedthroughDependenciesEP7OSArray"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Kext %s flushing dependencies."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext17flushDependenciesEb"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Notice - kext %s has already registered class %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s registered class %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s has IOService subclass %s; enabling autounload."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s failed to register class %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext8addClassEP11OSMetaClassj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Notice - kext %s asked to unregister unknown class %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s unregistering class %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to unregister kext %s class %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext11removeClassEP11OSMetaClass"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "    Kext %s class %s has %d instance%s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext26reportOSMetaClassInstancesEj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Invalid request from user space (not nul-terminated)."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Error unserializing request from user space: %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Recieved kext request from user space with no predicate."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Received '%s' request from user space."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Access Failure - must be root user."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.private.security.only-bootkc-management"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Access Failure - client not entitled to manage file sets."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Access Failure - client not entitled to manage non-primary KCs"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Access Failure - client not entitled to manage kext in non-primary KC"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Invalid arguments to kext start request."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s not found for start request."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Invalid arguments to kext stop request."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s not found for stop request."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Invalid arguments to AuxKC Bundle Available request."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Invalid arguments to kext load from KC request."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s not found for load from KC request."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s does not exist in a KC: refusing to load."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Invalid arguments to codeless kext load interface (missing identifier)."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Invalid arguments to kext unload request."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s not found for unload request."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Terminate IOServices"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Get Kext UUID by Address"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext Request Lookup Address"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext Request Info Keys"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Invalid arguments to kext info request."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Returning loaded kext info."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Returning kernel requests."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Get All Load Requests"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Returning load requests."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "KextLog: Loading FileSet KC(s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "KextLog: kernelmanagerd is %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "active"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "not active"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "KextLog: was reset after userspace reboot\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Received '%s' invalid request from user space."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Request from user space still retained by a kext; probable memory leak."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "responseObject should be an OSArray if predicate is Get Kernel Requests"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to patch dext launch requests."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to serialize response to request from user space."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext13handleRequestEP4hostjPcjPS2_PjS3_S4_"
        prototype = ""
        caller = "kext_request"
    }
    new {
        args = 0
        anchors {
            new {
                string = "kcUUID length is %d, expected %lu @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "_PrelinkInfoDictionary"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "The given KC has no kext info dictionaries"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "_PrelinkLinkKASLROffsets"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext info dictionary for kext #%d isn't a dictionary?"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Can't find a TEXT segment named '%s' in macho header"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%u prelinked kexts"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext26addKextsFromKextCollectionEP14mach_header_64P12OSDictionaryPKcPP6OSData7kc_kind"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "An Aux KC has already been registered for deferred processing."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "The Aux KC has info dictionary"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "The Aux KC has no UUID in %s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext30registerDeferredKextCollectionEP14mach_header_64R11OSSharedPtrI8OSObjectE7kc_kind"
        prototype = ""
        caller = "__ZN12KLDBootstrap23readPrelinkedExtensionsEP14mach_header_647kc_kind"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Invalid '%s' argument value '%s' to kext collection info request."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Loaded State"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Loaded"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Unloaded"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Invalid '%s' argument value '%s' for '%s' collection info"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext22copyKextCollectionInfoEP12OSDictionaryP7OSArray"
        prototype = ""
        caller = "__ZN6OSKext13handleRequestEP4hostjPcjPS2_PjS3_S4_"
    }
    new {
        args = 0
        anchors {
            new {
                string = "OSBundleDextStateActive"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
        }
        symbol = "__ZN6OSKext13copyDextsInfoEP7OSArrayS1_"
        prototype = ""
        caller = "__ZN6OSKext13handleRequestEP4hostjPcjPS2_PjS3_S4_"
    }
    new {
        args = 0
        anchors {
            new {
                string = "OSBundleAllPrelinked"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
        }
        symbol = "__ZN6OSKext18copyLoadedKextInfoEP7OSArrayS1_"
        prototype = ""
        caller = "__ZN6OSKext13handleRequestEP4hostjPcjPS2_PjS3_S4_"
    }
    new {
        args = 0
        anchors {
            new {
                string = "__os_log"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "__cstring"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "__asan_cstring"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "OSMetaClassName"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "OSMetaClassSuperclassName"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "OSMetaClassTrackingCount"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext8copyInfoEP7OSArray"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s/Contents/MacOS/%s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext22copyUserExecutablePathEPK8OSSymbolPcm"
        prototype = ""
        caller = "__ZN12IOUserServer13serviceAttachEP9IOServiceS1_"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Can't request resource %s for %s - requests to user space are disabled."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Resource request has bad callback address."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Resource request callback is in a kext that is not started."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "No more request tags available; restart required."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext15requestResourceEPKcS1_PFvjiPKvjPvES4_Pj"
        prototype = ""
        caller = "OSKextRequestResource"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Requesting daemon launch for %s %s with serverName %s and tag %llu%s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = " with reslid shared cache"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Driver Extension Server Name"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Driver Extension Server Tag"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "DriverKit Reslide Shared Cache"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext19requestDaemonLaunchEP8OSStringS1_P8OSNumberP9OSBooleanP24IOUserServerCheckInTokenP6OSData"
        prototype = ""
        caller = "__ZN12IOUserServer16launchUserServerEP8OSStringPK8OSSymbolP8OSNumberbPP24IOUserServerCheckInTokenP6OSData"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Notifying of dext upgrade for %s with UniqueID %s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Dext Daemon Upgrade"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext17notifyDextUpgradeEP8OSStringP6OSData"
        prototype = ""
        caller = "__ZN6OSKext19replaceDextInternalEPS_S0_"
    }
    new {
        args = 0
        anchors {
            new {
                string = "KextLog: No arguments in plist for loading fileset kext\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "KextLog: Kext loading is disabled (attempt to load KCs)."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PageableKCName"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "KextLog: ignoring Pageable KC load from %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "KextLog: Adding kexts from in-memory AuxKC\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "KextLog: WARNING: did not find UUID in deferred Aux KC!"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "KextLog: can't re-parse deferred AuxKC personalities on IOKit daemon restart"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "KextLog: ERROR loading deferred AuxKC: PRELINK_INFO wasn't an OSDictionary"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "KextLog: ERROR loading deferred AuxKC: PRELINK_INFO wasn't an OSDictionary\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "AuxKCName"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "KextLog: Ignoring AuxKC load from %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Codeless Personalities"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "KextLog: loading %d codeless kexts/dexts"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext16loadFileSetKextsEP12OSDictionary"
        prototype = ""
        caller = "__ZN6OSKext13handleRequestEP4hostjPcjPS2_PjS3_S4_"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Kext %s cannot be reset, mutable segments were not saved."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Resetting kext %s, mutable segment %.*s %llx->%llx."
                segment = "__TEXT"
                section = "__cstring"
                caller = "-[Ace3SoCRestoreInfoHelperBackDeploy log:]"
            }
            new {
                string = "Kext %s cannot be reset, mutable segment %llx->%llx could not be restored. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Kext %s cannot be reset, could not find saved mutable segment for %llx->%llx. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN6OSKext20resetMutableSegmentsEv"
        prototype = ""
        caller = "__ZN6OSKext6unloadEv"
    }
    new {
        args = 1
        anchors {
            new {
                string = "validateKCFileSetUUID Boot KC UUID was not set at boot."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "_BootKCID"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN6OSKext29validateKCUUIDfromPrelinkInfoEPA16_h7kc_kindP12OSDictionaryPKc"
            }
            new {
                string = "KextLog: Collection UUID matches with loaded KCs.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "__ZN6OSKext21validateKCFileSetUUIDEP12OSDictionary7kc_kind"
        prototype = ""
        caller = "__ZN12KLDBootstrap23readPrelinkedExtensionsEP14mach_header_647kc_kind"
    }
    new {
        args = 0
        anchors {
            new {
                string = "validateKCUUID Info plist does not contain %s KC UUID key."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "validateKCUUID %s KC UUID has wrong length: %d."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "KextLog: ERROR: UUID from key:%s %s != expected %s (KC UUID: %s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "System KC UUID %s linked against %s, but %s is loaded @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN6OSKext29validateKCUUIDfromPrelinkInfoEPA16_h7kc_kindP12OSDictionaryPKc"
        prototype = ""
        caller = "__ZN6OSKext21validateKCFileSetUUIDEP12OSDictionary7kc_kind"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Can't invoke callback for resource request; "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Can't invoke kext resource callback; "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext16dispatchResourceEP12OSDictionary"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Missing Bundle IDs"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext22setMissingAuxKCBundlesEP12OSDictionary"
        prototype = ""
        caller = "__ZN6OSKext13handleRequestEP4hostjPcjPS2_PjS3_S4_"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Bundle Availability"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "KextLog: AuxKC bundle %s marked as %s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "loadable"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NOT loadable"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext23setAuxKCBundleAvailableEP8OSStringP12OSDictionary"
        prototype = ""
        caller = "__ZN6OSKext13handleRequestEP4hostjPcjPS2_PjS3_S4_"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Kext %s requires an explicit kextload; omitting its personalities."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext24copyAllKextPersonalitiesEb"
        prototype = ""
        caller = "__ZN6OSKext33sendAllKextPersonalitiesToCatalogEb"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Sending all eligible registered kexts' personalities to the IOCatalogue %s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "and starting matching"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "but not starting matching"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext33sendAllKextPersonalitiesToCatalogEb"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Kext loading is disabled (attempt to start matching for kext %s)."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Kext %s sending %d personalit%s to the IOCatalogue%s."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = " and starting matching"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = " but not starting matching"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext26sendPersonalitiesToCatalogEbP7OSArray"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Kext %s removing all personalities naming it from the IOCatalogue."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext30removePersonalitiesFromCatalogEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Failed to allocate user-space log message arrays."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext21setUserSpaceLogFilterEjb"
        prototype = ""
        caller = "__ZN6OSKext13handleRequestEP4hostjPcjPS2_PjS3_S4_"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s%s%s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "OSKextVLog"
        prototype = ""
        caller = "-[Ace3SoCRestoreInfoHelperBackDeploy log:]"
    }
    new {
        args = 0
        anchors {
            new {
                string = "         can't perform kext scan: no kext summary"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "         can't perform kext scan: missing kext summary page %p"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext21printKextsInBacktraceEPmjPFiPKczEj"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "      Kernel Extensions in backtrace:\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "___ZN6OSKext21printKextsInBacktraceEPmjPFiPKczEj_block_invoke"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "unknown version"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s%s(%s)[%s]@0x%llx->0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "         "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "            kmod dependency scan stopped due to missing dependency page: %p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "            kmod dependency scan stopped due to missing kmod page: %p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "            dependency: %s(%s)[%s]@%p->%p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext12printSummaryEP20_loaded_kext_summaryPFiPKczEj"
        prototype = ""
        caller = "___ZN6OSKext21printKextsInBacktraceEPmjPFiPKczEj_block_invoke"
    }
    new {
        args = 0
        anchors {
            new {
                string = "OSKext::saveLoadedKextPanicListTyped - NULL kext in loaded kext list; continuing\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "OSKext::saveLoadedKextPanicListTyped - Kext type cast failed in loaded kext list; continuing\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kext scan stopped due to missing kmod_info page: %p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "error saving loaded kext info\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext28saveLoadedKextPanicListTypedEPKciiPcj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Couldn\\'t allocate kext panic log buffer."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext23saveLoadedKextPanicListEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "last started kext at %llu: %.*s (addr %p, size %lu)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "last stopped kext at %llu: %.*s (addr %p, size %lu)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "loaded kexts:\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(none)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6OSKext19printKextPanicListsEPFiPKczE"
        prototype = ""
        caller = "SavePanicInfo"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Elements of request should be of type OSDictionary"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to get request predicate"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Could not create send right for object."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Could not create OSNumber object."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Could not set OSNumber object as request Check In Token"
                segment = "__TEXT"
                section = "__cstring"
                caller = "-[Ace3SoCRestoreInfoHelperBackDeploy log:]"
            }
        }
        symbol = "__ZL23patchDextLaunchRequestsP4taskP7OSArray"
        prototype = ""
        caller = "__ZN6OSKext13handleRequestEP4hostjPcjPS2_PjS3_S4_"
    }
    new {
        args = 0
        anchors {
            new {
                string = "__llvm_prf_data"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "__llvm_prf_names"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "__llvm_prf_name"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZL23OSKextGrabPgoDataLockedP6OSKextbPhPyPcy"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%lu.%06d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZL23OSKextPgoMetadataPutAllP6OSKextPhPcPmmPj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "integer size=\"%d\""
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "0x%lx%08lx"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "0x%lx"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZNK8OSNumber9serializeEP11OSSerialize"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "__cxa_pure_virtual"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__cxa_pure_virtual"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "OSRuntime: C++ runtime failed to initialize. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "OSlibkernInit"
        prototype = ""
        caller = "InitIOKit"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Size of array created by new[] has overflowed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZSt20__throw_length_errorPKc"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: null structor @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZL31OSRuntimeCallStructorsInSectionP6OSKextP9kmod_infoPvP18segment_command_64PKcmm"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "<reference IDREF=\""
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN11OSSerialize20previouslySerializedEPK15OSMetaClassBase"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "class %s: xml serialize\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = " ID=\""
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN11OSSerialize14addXMLStartTagEPK15OSMetaClassBasePKc"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "xml serialize\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "__ZN11OSSerialize7addCharEc"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "OSUnserialize: can't alloc temp memory\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "__Z18OSUnserializeparsev"
        prototype = ""
        caller = "__Z13OSUnserializePKcPP8OSString"
    }
    new {
        args = 0
        anchors {
            new {
                string = "unexpected end of buffer"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "buildDictionary"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "maximum object count"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "buildArray"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "buildSet"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "buildString"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "buildData"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "buildNumber"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "buildBoolean"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "maximum object reference count"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "duplicate dictionary key"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "format"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "plist"
                segment = "__TEXT"
                section = "__cstring"
                caller = "_strcmp"
            }
        }
        symbol = "__Z21OSUnserializeXMLparsePv"
        prototype = ""
        caller = "__Z16OSUnserializeXMLPKcPP8OSString"
    }
    new {
        args = 0
        anchors {
            new {
                string = "OSUnserializeXML: can't alloc temp memory\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "__ZL9getStringP12parser_statePi"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "No service matching %s"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Unable to match CoreAnalyticsHub"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "CoreAnalyticsHub"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "No service matching %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "Unable to match CoreAnalyticsHub"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "core_analytics_family_match"
        prototype = ""
        caller = "core_analytics_event_queue_invoke"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Dropping attempt to send a CoreAnalytics event before CoreAnalyticsHub has registered."
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Unable to serialize CoreAnalytics event: %d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Unable to send CoreAnalytics event. Giving up."
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Unknown CoreAnalytics event type: %s. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Dropping attempt to send a CoreAnalytics event before CoreAnalyticsHub has registered."
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "Unable to serialize CoreAnalytics event: %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "Unable to send CoreAnalytics event. Giving up."
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "core_analytics_send_event_lazy"
        prototype = ""
        caller = "core_analytics_event_queue_invoke"
    }
    new {
        args = 0
        anchors {
            new {
                string = "CoreAnalyticsHub is out of sync with xnu. CoreAnalyticsHub table version: %d. xnu table version: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Registered CoreAnalyticsHub functions with xnu."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Registered CoreAnalyticsHub functions with xnu."
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "core_analytics_hub_register"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Kext %s (load tag %d) has been retained."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Can't retain kext with load tag %d - no such kext is loaded."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "OSKextRetainKextWithLoadTag"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Kext %s (load tag %d) has been released."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Can't release kext with load tag %d - no such kext is loaded."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "OSKextReleaseKextWithLoadTag"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Invalid request from user space (no data)."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vm_map_copyout() failed for request from user space."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to copy log data for request from user space."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "kext_request"
        prototype = ""
        caller = "_Xkext_request"
    }
    new {
        args = 0
        anchors {
            new {
                string = "A kext referenced an unresolved weak symbol @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "OSKextLib.cpp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pmap_cs_core_entitlements_abort"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s@%llx:%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "scnprintf"
            }
        }
        symbol = "__telemetry_backtrace_add_kexts_block_invoke"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "(invalid)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "(missing)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "OSKextVersionGetString"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%2hhx%2hhx%2hhx%2hhx-%2hhx%2hhx-%2hhx%2hhx-%2hhx%2hhx-%2hhx%2hhx%2hhx%2hhx%2hhx%2hhx%n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "uuid_parse"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-%02x%02x%02x%02x%02x%02x"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_uuid_unparse_lower"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Long logs support disabled: Logging disabled by ATM\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Long logs support configured: size: %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Long logs support disabled: Not enough memory\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "oslog_init_logmem"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "[%5lu.%06u]: "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Unknown firehose tracepoint flags %x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "_os_log_with_args_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Unexpected firehose stream type %u @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "log_payload_send"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "unhandled return value @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "log_encode.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "os_log_context_encode"
        prototype = ""
        caller = "_os_log_with_args_internal"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Log queues disabled: Logging disabled by ATM\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Log queues disabled: Zero lq_size_order boot argument\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Log queues configured: slot count: %u, per-slot size: %u, total size: %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "oslog_init_log_queues"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "os_refcnt: unexpected release of final reference (rc=%p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "os_ref_panic_live"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "os_refcnt: underflow (rc=%p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "os_ref_panic_underflow"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "os_refcnt: attempted resurrection (rc=%p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "os_ref_panic_retain"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "os_pcpu_ref: destroying live refcount %p at %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "os_pcpu_ref: destroying refcount %p with a waiter at %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "os_pcpu_ref: destroying non-zero refcount %p at %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__os_pcpu_ref_destroy_panic"
        prototype = ""
        caller = "os_pcpu_ref_destroy"
    }
    new {
        args = 0
        anchors {
            new {
                string = "os_pcpu_ref: attempted resurrection (rc=%p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__os_pcpu_ref_retain_panic"
        prototype = ""
        caller = "__os_pcpu_ref_retain_slow"
    }
    new {
        args = 0
        anchors {
            new {
                string = "os_pcpu_ref: unexpected release of final reference (rc=%p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__os_pcpu_ref_release_live_panic"
        prototype = ""
        caller = "__os_pcpu_ref_release_live_slow"
    }
    new {
        args = 0
        anchors {
            new {
                string = "os_pcpu_ref: over-release (rc=%p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__os_pcpu_ref_release_panic"
        prototype = ""
        caller = "__os_pcpu_ref_release_slow"
    }
    new {
        args = 0
        anchors {
            new {
                string = "os_pcpu_ref: double-kill (rc=%p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__os_pcpu_ref_kill_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "os_pcpu_ref: overflow (rc=%p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__os_pcpu_ref_overflow_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "os_pcpu_ref: double-wait (rc=%p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "os_pcpu_ref: wait while still live (rc=%p) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__os_pcpu_ref_invalid_wait_panic"
        prototype = ""
        caller = "os_pcpu_ref_wait_for_death"
    }
    new {
        args = 1
        anchors {
            new {
                string = "incorrect header check"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "unknown compression method"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "invalid window size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "unknown header flags set"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "header crc mismatch"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "invalid block type"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "invalid stored block lengths"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "too many length or distance symbols"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "invalid code lengths set"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "invalid literal/lengths set"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "invalid distances set"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "incorrect data check"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "incorrect length check"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "inflate"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "zlib deflate"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "compress_block"
        prototype = ""
        caller = "_tr_flush_block"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: inconsistent size for SHA384 context @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "SHA384_Init"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "SHA384_Init"
        prototype = ""
        caller = "pmap_cs_verify_code_signature_blob_internal"
    }
    new {
        args = 0
        anchors {
            new {
                string = "sha1_hardware_hook: Called twice.. Should never happen @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "corecrypto_sha1.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "sha1_hardware_hook"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: inconsistent size for DES-ECB context @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "des_ecb_key_sched"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "des_ecb_key_sched"
        prototype = ""
        caller = "esp_des_schedule"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: inconsistent size for 3DES-ECB context @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "des3_ecb_key_sched"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "des3_ecb_key_sched"
        prototype = ""
        caller = "esp_3des_schedule"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: corecrypto not registered! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: xts mode not registered? enc=%p, dec=%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s: inconsistent size for AES-XTS context @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "xts_start"
        prototype = ""
        caller = "vm_swap_encrypt"
    }
    new {
        args = 0
        anchors {
            new {
                string = "xts encrypt not a multiple of block size @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "xts_encrypt"
        prototype = ""
        caller = "vm_swap_encrypt"
    }
    new {
        args = 0
        anchors {
            new {
                string = "xts decrypt not a multiple of block size @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "xts_decrypt"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "coretrust interface already set @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "coretrust.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "coretrust_interface_register"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "apple_encrypted_archive interface already set @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "apple_encrypted_archive_interface_register"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "img4 interface already set @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "interface.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "coretrust_interface_register_0"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "image4 dlxk interface already set @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "dlxk.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "image4_dlxk_link"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "AppleMobileFileIntegrity interface already set @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "amfi.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "amfi_interface_register"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ptrauth_utils_auth_blob_generic: ptr must not be NULL @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "signature mismatch for %lu bytes at %p, calculated %lx vs %lx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ptrauth_utils_auth_blob_generic"
        prototype = ""
        caller = "ubc_cs_blob_add"
    }
    new {
        args = 0
        anchors {
            new {
                string = "compression interface already set @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "apple_encrypted_archive_interface_register_0"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "OSAction"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_GLOBAL__sub_I_OSCollection.cpp_2"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IODispatchSource"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_GLOBAL__sub_I_OSCollection.cpp_3"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IODispatchQueue"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_GLOBAL__sub_I_OSCollection.cpp_4"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOInterruptDispatchSource"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_GLOBAL__sub_I_IOUserClient.iig.cpp_0"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOServiceStateNotificationDispatchSource"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_GLOBAL__sub_I_IOUserClient.iig.cpp_3"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOEventLink"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_GLOBAL__sub_I_OSCollection.cpp_5"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOWorkGroup"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_GLOBAL__sub_I_OSCollection.cpp_6"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "hibernate_set_page_state @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "hibernate_set_page_state"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "boot-signature"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "bridge-boot-session-uuid"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "hfile"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "IOHibernateSystemInit"
        prototype = ""
        caller = "__ZN14IOPMrootDomain5startEP9IOService"
    }
    new {
        args = 0
        anchors {
            new {
                string = "couldn\\'t find sectHIBTEXTB in segInfo @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "hibernate_write_image"
        prototype = ""
        caller = "ml_arm_sleep"
    }
    new {
        args = 0
        anchors {
            new {
                string = "handoff overflow @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "handoff out of range @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kIOHibernateHandoffTypeCryptVars(%d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "kIOHibernateHandoffTypeVolumeCryptKey(%d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "no volumeCryptKey @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "hibernate handoff @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "IOPolledFilePollersSetEncryptionKey(0x%x) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Hibernate restore error %x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "image2 pages corrupted @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "hibernate_machine_init"
        prototype = ""
        caller = "IOCPURunPlatformActiveActions"
    }
    new {
        args = 0
        anchors {
            new {
                string = "handoff %p, %x, %x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "failed to find %s in IORegistry @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZL15IOHibernateDoneP15IOHibernateVars"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "no name @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZL15MergeDeviceTreePK13OpaqueDTEntryP15IORegistryEntryP5OSSetmm"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.hibernation.set-preview"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZL21hibernate_set_previewP10sysctl_oidPviP10sysctl_req"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pid %d, "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "IOCopyLogNameForPID"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Invalid offset %p for aligned addr %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "alignMask 0x%llx overflows recalAlignedStart %p for provided addr %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Recalculated aligned addr %p doesn't match provided addr %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Offset %zd doesn't accomodate IOLibPageMallocHeader for aligned addr %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "alignMask 0x%llx overflows adjusted size %zd for aligned addr %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZL33IOMallocAlignedHdrCorruptionPanicyyym"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOKitBuildVersion"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "_NO_NAME_4"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
        }
        symbol = "iokit_post_constructor_init"
        prototype = ""
        caller = "last_kernel_constructor"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Failed to initialize IOKit root nub @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "InitIOKit"
        prototype = ""
        caller = "PE_init_iokit"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Failed to start IOService matching @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "StartIOKitMatching"
        prototype = ""
        caller = "kernel_bootstrap_thread"
    }
    new {
        args = 0
        anchors {
            new {
                string = "IODeviceTree:/chosen"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOProgressColorTheme"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "IORecordProgressBackbuffer"
        prototype = ""
        caller = "internal_enable_progressmeter"
    }
    new {
        args = 0
        anchors {
            new {
                string = "IODeviceTree"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN15IORegistryEntry9makePlaneEPKc"
            }
            new {
                string = "AAPL,unit-string"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "bridge-model"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "#size-cells"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "#address-cells"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IODTPersist"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "associated-service"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOPrimaryInterruptController"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IONWInterrupts"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "AAPL,interrupts"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "interrupt-parent"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "#interrupt-cells"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "exclave-edk-endpoint"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "exclave-endpoint"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "disp0"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__Z17IODeviceTreeAllocPv"
        prototype = ""
        caller = "__ZN22IOPlatformExpertDevice4initEPv"
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOInterruptController%08X"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__Z27IODTInterruptControllerNameP15IORegistryEntry"
        prototype = ""
        caller = "__ZL24IODTMapInterruptsSharingP15IORegistryEntryP12OSDictionary"
    }
    new {
        args = 0
        anchors {
            new {
                string = "AAPL,ignore"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__Z23IODTFindMatchingEntriesP15IORegistryEntryjPKc"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IODTSetResolving - gIODTResolvers alloc overflows @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "IODTSetResolving - could not allocate new resolvers @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__Z16IODTSetResolvingP15IORegistryEntryPFxjPjS1_EPFvS0_PhS4_S4_E"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IODTResolveAddressCell: Invalid device tree (%u,%u) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "There is no mixed comparison function yet... @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "IODTResolveAddressCell: Invalid device tree (%u) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "IODTResolveAddressCell: Invalid device tree (%u, %u) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__Z22IODTResolveAddressCellP15IORegistryEntryPjPyS2_"
        prototype = ""
        caller = "__Z21IODTResolveAddressingP15IORegistryEntryPKcP14IODeviceMemory"
    }
    new {
        args = 0
        anchors {
            new {
                string = "slot-names"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__Z16IODTFindSlotNameP15IORegistryEntryj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kernel-only"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZL18MakeReferenceTablePK13OpaqueDTEntryb"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: error mapping interrupt[%d]\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "interrupt-map"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "interrupt-map-mask"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZL24IODTMapInterruptsSharingP15IORegistryEntryP12OSDictionary"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "DefaultCompare only knows how to handle 1 or 2 cells. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZL14DefaultComparejPjS_"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IORegistryLock"
                segment = "__TEXT"
                section = "__cstring"
                caller = "lck_grp_init_flags"
            }
            new {
                string = "IOName"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOLocation"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IORegistryEntryID"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IORegistryEntryPropertyKeys"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IORegistryPlanes"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN15IORegistryEntry10initializeEv"
        prototype = ""
        caller = "iokit_post_constructor_init"
    }
    new {
        args = 1
        anchors {
            new {
                string = "ChildLinks"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN15IORegistryEntry9makePlaneEPKc"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: attached at free() @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "IORegistryEntry.cpp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN15IORegistryEntry4freeEv"
        prototype = ""
        caller = "__ZN9IOService4freeEv"
    }
    new {
        args = 0
        anchors {
            new {
                string = "_IOServiceNullNotifier"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "_IOConfigThread"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOUserResources"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "_IOServiceStateNotification"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOServiceCompatibility"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_GLOBAL__sub_I_IOService.cpp"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOPower"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN15IORegistryEntry9makePlaneEPKc"
            }
            new {
                string = "IOPropertyMatch"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOPropertyExistsMatch"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOLocationMatch"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOParentMatch"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IODefaultMatchCategory"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOMatchedAtBoot"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOMatchedServiceCountMatch"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOMatchedPersonality"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IORematchPersonality"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IORematchCount"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IODEXTMatchCount"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOServiceLegacyMatchingRegistryID"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "dextrelaunch"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "iocthreads"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOUserClientClass"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOUserClasses"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOUserServerName"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOUserServerTag"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOUserServerOneProcess"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOUserServerPreserveUserspaceReboot"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOResourceMatch"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOResourceMatched"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IODeviceMemory"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOInterruptControllers"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOInterruptSpecifiers"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOCompatibilityMatch"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOCompatibilityProperties"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOPath"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOSupportedProperties"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOMapperID"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOKitDebug"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOCommandPoolSize"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOGeneralInterest"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOBusyInterest"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOAppPowerStateInterest"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOPriorityPowerStateInterest"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOConsoleSecurityInterest"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOServicePublish"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOServiceFirstPublish"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOServiceMatched"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOServiceFirstMatch"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOServiceTerminate"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOServiceWillTerminate"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOConsoleLocked"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOConsoleUsers"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "kCGSSessionUserIDKey"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "kCGSSessionAuditIDKey"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOConsoleUsersSeed"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "kCGSSessionOnConsoleKey"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "kCGSessionLoginDoneKey"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "kCGSSessionSecureInputPID"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "CGSSessionScreenLockedTime"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "CGSSessionScreenIsLocked"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOServiceDEXTEntitlements"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "com.apple.developer.driverkit"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "com.apple.developer.driverkit.userclient-access"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "com.apple.developer.driverkit.allow-any-userclient-access"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "com.apple.private.driverkit.driver-access"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "com.apple.private.driverkit.test-driver"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "com.apple.developer.driverkit.communicates-with-drivers"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "com.apple.developer.driverkit.allow-third-party-userclients"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOMatchDefer"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOServiceMatchDeferred"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOServiceNotificationUser"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOPrimaryDriverTerminateOptions"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOBlockStorageDriver"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "Virtual Interface"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOAllCPUInitialized"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOPlatformFunctionHandlerSet"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOPlatformFunctionHandlerMaxBusDelay"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "getKey"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOAssociatedServices"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOServiceTerminateThread"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN9IOService10initializeEv"
        prototype = ""
        caller = "iokit_post_constructor_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s::attach(%s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZN9IOService6attachEPS_"
        prototype = ""
        caller = "__ZN16IOPlatformExpert6attachEP9IOService"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s::detach(%s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZN9IOService6detachEPS_"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: not registry member at registerService()\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "Registering: "
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN9IOService15registerServiceEj"
        prototype = ""
        caller = "__ZN17IONVRAMController15registerServiceEj"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: Failed to acquire power assertion for matching @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN9IOService13startMatchingEj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Matching service count = %ld\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZN9IOService17catalogNewDriversEP12OSOrderedSet"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Class %s passed the %s action to IOService @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN9IOService20callPlatformFunctionEPK8OSSymbolbPvS3_S3_S3_"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOPlatformMaxBusDelay"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN9IOService11setPlatformEP16IOPlatformExpert"
        prototype = ""
        caller = "__ZN16IOPlatformExpert5startEP9IOService"
    }
    new {
        args = 0
        anchors {
            new {
                string = "I/O Kit: Unrecoverable deadlock. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN9IOService18lockForArbitrationEb"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s[0x%qx]::terminatePhase1(%08llx)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "%s[0x%qx]::waitPhase1(%s[0x%qx])\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "%s[0x%qx]::did waitPhase1(%s[0x%qx])\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "%s[0x%qx]::requestTerminate(%s[0x%qx], %08llx)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "%s[0x%qx]::requestTerminate(%s[0x%qx], ok = %d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "%s[0x%qx]::wakePhase1\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "DK: %s-0x%qx rematching after dext crash\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN9IOService15terminatePhase1Ej"
        prototype = ""
        caller = "__ZN9IOService9terminateEj"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s[0x%qx]::terminate(kIOServiceSynchronous): THREAD_TIMED_OUT. Attempting to auto-resolve your deadlock. PLEASE FIX!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN9IOService23scheduleTerminatePhase2Ej"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s[0x%qx]::scheduleStop(%s[0x%qx])\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN9IOService12scheduleStopEPS_"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s[0x%qx]::scheduleFinalize\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN9IOService16scheduleFinalizeEb"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s[0x%qx]::finalize(%08llx)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN9IOService14actionFinalizeEPS_jPvS1_S1_"
        prototype = ""
        caller = "__ZN9IOService15terminateWorkerEj"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s[0x%qx]::stop(%s[0x%qx])\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "%s[0x%qx]::detach(%s[0x%qx])\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN9IOService10actionStopEPS_S0_PvS1_S1_"
        prototype = ""
        caller = "__ZN9IOService15terminateWorkerEj"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s[0x%qx]::defer phase2(%s[0x%qx])\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "%s[0x%qx]::nop stop(%s[0x%qx])\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "%s[0x%qx]::defer stop()\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "iokit terminate done, %d stops remain\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN9IOService15terminateWorkerEj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s[0x%qx]::stop1(%s[0x%qx])\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN9IOService8finalizeEj"
        prototype = ""
        caller = "__ZN12IOUserServer8finalizeEj"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: match category %s exists\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "%s: stalling for module\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "Couldn\\'t alloc class \"%s\"\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "%s::init fails\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s::probe(%s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "%s::probe fails\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s(0x%qx): %u categories\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "match category exists, skipping "
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "%s::start(%s) <%d>\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "%s(0x%qx): matching deferred by %s%s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = " in userspace reboot"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s::start(%s) <%d> failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "Can't replace primary matched driver on root media %s-0x%qx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN9IOService15probeCandidatesEP12OSOrderedSet"
        prototype = ""
        caller = "__ZN9IOService14doServiceMatchEj"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s(0x%qx): category %s, %u matches\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "___ZN9IOService15probeCandidatesEP12OSOrderedSet_block_invoke"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s(0x%qx): category %s: matched %s, probe score %qd\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "___ZN9IOService15probeCandidatesEP12OSOrderedSet_block_invoke_2"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "deferring %s-%llx (provider of %s-%llx) matching after userspace reboot\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN9IOService19userSpaceWillRebootEv"
        prototype = ""
        caller = "__ZL26sysctl_willuserspacerebootP10sysctl_oidPviP10sysctl_req"
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK: Waiting for %u user servers, %u matching work\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "DK: allowPowerChange\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN11IOServicePH9serverAckEP12IOUserServer"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK: sleep deferred rematching count %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN11IOServicePH11matchingEndEP9IOService"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK: ack timer expired\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "DK ack timer expired after %u ms @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN11IOServicePH25userServerAckTimerExpiredEPvS0_"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK: %s-0x%qx power state transition failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "Power Management Failed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "___ZN11IOServicePH25userServerAckTimerExpiredEPvS0__block_invoke"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOServicePH::kIOMessageSystemCapabilityChange: %s%s 0x%x->0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "DK: arming ack timer, %u ms\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN11IOServicePH17systemPowerChangeEPvS0_jP9IOServiceS0_m"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK: %s-0x%qx dext launches are disabled \n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "DK: %s disabled in shutdown\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "DK: %s deferred in sleep\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "DK: %s-0x%qx using existing server %s-0x%qx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "DK: %s-0x%qx waiting for server %s-%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "DK: %s-0x%qx failed to launch server\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "DK: %s-0x%qx user server timeout\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "Check In Token verification failed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Entitlements check failed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s::start took %ld ms\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN9IOService14startCandidateEPS_"
        prototype = ""
        caller = "__ZN9IOService15probeCandidatesEP12OSOrderedSet"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: Can't match using: %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "config(%p): stalling %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "config(%p): waking\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZN9IOService13checkResourceEP8OSObject"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOConfigThread_'%s'"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN15_IOConfigThread12configThreadEPKc"
        prototype = ""
        caller = "__ZN13_IOServiceJob10pingConfigEPS_"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: bad busy count (%d,%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "OSReportWithBacktrace"
            }
        }
        symbol = "__ZN9IOService11_adjustBusyEib"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "busy extended ok[%d], (%llds, %llds)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "IOServiceBusyTimeoutExtensions"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "registry root held busy, kernelmanagerd %s checked in"
                segment = "__TEXT"
                section = "__cstring"
                caller = "snprintf"
            }
            new {
                string = "has not"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s'%s' (%x,%x)"
                segment = "__TEXT"
                section = "__cstring"
                caller = "snprintf"
            }
            new {
                string = "%s[%d], (%llds): multiple entries holding the registry busy, IOKit termination queue depth %u: %s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOKit Daemon (kernelmanagerd) stall"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "busy timeout"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s[%d], (%llds): %s"
                segment = "__TEXT"
                section = "__cstring"
                caller = "snprintf"
            }
        }
        symbol = "__ZN9IOService20waitQuietWithOptionsEyj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "thread_policy_set(%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "config(%p): starting on %s, %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "config(%p): strange type (%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "config(%p): terminating\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZN15_IOConfigThread4mainEPvi"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "config(%d): creating\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZN13_IOServiceJob10pingConfigEPS_"
        prototype = ""
        caller = "__ZN13_IOServiceJob8startJobEP9IOServiceij"
    }
    new {
        args = 0
        anchors {
            new {
                string = "deliverNotification @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN9IOService19deliverNotificationEPK8OSSymboljj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOConsoleUsers: gIOScreenLockState %d, hs %d, bs %d, now %ld, sm 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN9IOService18updateConsoleUsersEP7OSArrayjb"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.iokit.ioresources.setproperty"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN11IOResources13setPropertiesEP8OSObject"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: family specific matching fails\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZN9IOService12matchPassiveEP12OSDictionaryj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "addInterruptStatistics called for an excessively large index (%d) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "%s %d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Interrupt Statistics (by index)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "addInterruptStatistics call for index %d would have clobbered existing statistics @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN9IOService22addInterruptStatisticsEP25IOInterruptAccountingDatai"
        prototype = ""
        caller = "__ZN22IOInterruptEventSource24registerInterruptHandlerEP9IOServicei"
    }
    new {
        args = 0
        anchors {
            new {
                string = "removeInterruptStatistics called for index %d, which was never registered @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "removeInterruptStatistics called for empty index %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN9IOService25removeInterruptStatisticsEi"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.iokit.IOServiceSetAuthorizationID"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN12IOUserClient21copyClientEntitlementEP4taskPKc"
            }
        }
        symbol = "__ZN9IOService18setAuthorizationIDEy"
        prototype = ""
        caller = "_Xio_service_set_authorization_id"
    }
    new {
        args = 0
        anchors {
            new {
                string = "DevicePowerState"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "DriverPowerState"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "ChildProxyPowerState"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "ChildrenPowerState"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "AdvisoryTicklePowerState"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "RootDomainPower"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
        }
        symbol = "__ZN9IOService6PMinitEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: PMstop() already stopped\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "%s: %p PMstop\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZN9IOService6PMstopEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: %p %s start\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "%s: %p %s done\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZN9IOService12handlePMstopEP11IOPMRequest"
        prototype = ""
        caller = "__ZN9IOService16executePMRequestEP11IOPMRequest"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: %s (%p) is already a child\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZN9IOService13addPowerChildEPS_"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: addPowerChild2 not in power plane\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZN9IOService14addPowerChild2EP11IOPMRequest"
        prototype = ""
        caller = "__ZN9IOService16executePMRequestEP11IOPMRequest"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: strict PM order enforced\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "%s: addPowerChild3 not in power plane\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZN9IOService14addPowerChild3EP11IOPMRequest"
        prototype = ""
        caller = "__ZN9IOService16executePMRequestEP11IOPMRequest"
    }
    new {
        args = 0
        anchors {
            new {
                string = "handlePowerDomainWillChangeTo"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN9IOService29handlePowerDomainWillChangeToEP11IOPMRequest"
        prototype = ""
        caller = "__ZN9IOService16executePMRequestEP11IOPMRequest"
    }
    new {
        args = 0
        anchors {
            new {
                string = "handlePowerDomainDidChangeTo"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "aotPS %s0x%qx[%ld]\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "%s::powerDomainDidChangeTo parentsKnowState %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZN9IOService28handlePowerDomainDidChangeToEP11IOPMRequest"
        prototype = ""
        caller = "__ZN9IOService16executePMRequestEP11IOPMRequest"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s::requestPowerDomainState\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "%s: power drop cancelled in state %u by %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZN9IOService23requestPowerDomainStateEmP17IOPowerConnectionm"
        prototype = ""
        caller = "__ZN14IOPMrootDomain23requestPowerDomainStateEmP17IOPowerConnectionm"
    }
    new {
        args = 0
        anchors {
            new {
                string = "  %u %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "  temp %u, clamp %u, current %u, new %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZN9IOService19computeDesiredStateEmb"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: %d children in delayed array\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZN9IOService14notifyChildrenEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: notified delayed children\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZN9IOService21notifyChildrenDelayedEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOService::pmDriverCallout bad machine state %x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN9IOService15pmDriverCalloutEPS_Pv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s::setPowerState(%p, %lu -> %lu) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZN9IOService19driverSetPowerStateEv"
        prototype = ""
        caller = "__ZN9IOService15pmDriverCalloutEPS_Pv"
    }
    new {
        args = 0
        anchors {
            new {
                string = "PM waiting on pmDriverCallout(0x%x) to %s (%u ms)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZN9IOService20pmDriverCalloutTimerEPvS0_"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: power desired %u:0x%x got %u:0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZN9IOService18requestDomainPowerEmj"
        prototype = ""
        caller = "__ZN9IOService14OurChangeStartEv"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: tickle desire removed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "%s: tickle desire dropped\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZN9IOService26ParentChangeRootChangeDownEv"
        prototype = ""
        caller = "__ZN9IOService8all_doneEv"
    }
    new {
        args = 1
        anchors {
            new {
                string = "IOPMTardyAckSetPowerState"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s::setPowerState(%p, %lu -> %lu) timed out after %d ms @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s::setPowerState(%p : %p, %lu -> %lu) timed out after %d ms @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOPMTardyAckPowerStateChange"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s::powerState%sChangeTo(%p, %s, %lu -> %lu) timed out after %d ms\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: unexpected ack timer tick (state = %d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZN9IOService12ackTimerTickEv"
        prototype = ""
        caller = "__ZN9IOService21actionAckTimerExpiredEP8OSObjectPvS2_S2_S2_"
    }
    new {
        args = 0
        anchors {
            new {
                string = "WDOG:Object %s unexpected in blocked array\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN9IOService19stop_watchdog_timerEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "WDOG:Object %s is already blocked for responses. Ignoring timeout %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN9IOService20reset_watchdog_timerEPS_i"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "PM priority notification timeout\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PM priority notification timeout @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN9IOService20cleanClientResponsesEb"
        prototype = ""
        caller = "__ZN9IOService12ackTimerTickEv"
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: tellClientsWithResponse( %s, %s )\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "tellClientsWithResponse(%s, %s) %d of %d skipped in dark\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN9IOService23tellClientsWithResponseEi"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMTellAppWithResponse - Suspended"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "App response ignored"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN9IOService21pmTellAppWithResponseEP8OSObjectPv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMTellCapablityAppWithResponse - Suspended"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s MESG App(%u) %s, wait %u, %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZN9IOService31pmTellCapabilityAppWithResponseEP8OSObjectPv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: tellClients( %s )\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN9IOService11tellClientsEi"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PM response took %d ms (%d, %s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "Ack(%u) %u ms\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZN9IOService13responseValidEji"
        prototype = ""
        caller = "__ZN9IOService18actionPMReplyQueueEP11IOPMRequestP16IOPMRequestQueue"
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOPMClientAck"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOPMRequest"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOPMRequestQueue"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOPMWorkQueue"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOPMCompletionQueue"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOServicePM"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_GLOBAL__sub_I_IOServicePM.cpp"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: resetting ack timer to %u ms\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN9IOService21updateClientResponsesEv"
        prototype = ""
        caller = "__ZN9IOService18actionPMReplyQueueEP11IOPMRequestP16IOPMRequestQueue"
    }
    new {
        args = 0
        anchors {
            new {
                string = " (%s)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PM notification cancel (pid %d, %s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN9IOService17cancelPowerChangeEm"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: cancel from machine state %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZN9IOService25handleCancelIdlePowerDownEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "bufSize is smaller than the required size\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN9IOService26configurePowerStatesReportEjPv"
        prototype = ""
        caller = "__ZN9IOService15configureReportEP19IOReportChannelListjPvS2_"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: No memory for PM request type 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN9IOService16acquirePMRequestEPS_jP11IOPMRequest"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: PM not initialized\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "[- %02x] %p [%p %s] !initialized\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZN9IOService20actionPMRequestQueueEP11IOPMRequestP16IOPMRequestQueue"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "[- %02x] %p [%p %s] state %d, busy %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZN9IOService23actionPMWorkQueueRetireEP11IOPMRequestP13IOPMWorkQueue"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "[B %02x] %p [%p %s] state %d, reason %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZN9IOService11isPMBlockedEP11IOPMRequesti"
        prototype = ""
        caller = "__ZN9IOService23actionPMWorkQueueInvokeEP11IOPMRequestP13IOPMWorkQueue"
    }
    new {
        args = 2
        anchors {
            new {
                string = "[W %02x] %p [%p %s] state %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "%s: idle revert, state %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: bad call reason %x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "PMWorkQueueInvoke: unknown machine state %x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN9IOService23actionPMWorkQueueInvokeEP11IOPMRequestP13IOPMWorkQueue"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "executePMRequest: unknown request type %x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN9IOService16executePMRequestEP11IOPMRequest"
        prototype = ""
        caller = "__ZN9IOService23actionPMWorkQueueInvokeEP11IOPMRequestP13IOPMWorkQueue"
    }
    new {
        args = 2
        anchors {
            new {
                string = "[A %02x] %p [%p %s] state %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "%s: delay notify cancelled\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "PMReplyQueue: unknown reply type %x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN9IOService18actionPMReplyQueueEP11IOPMRequestP16IOPMRequestQueue"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: %s(%s) on PM thread\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "waitForPMDriverCall"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: waitForPMDriverCall timeout\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN9IOService19waitForPMDriverCallEPS_"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PM request 0x%x dropped\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN13IOPMWorkQueue17checkRequestQueueEP11queue_entryPb"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "CurrentPowerState"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "CapabilityFlags"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "MaxPowerState"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "DesiredPowerState"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "MachineState"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PowerOverrideOn"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PowerClamp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IdleTimerPeriod"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ActivityTickles"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "TimeSinceLastTickle"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IdleTimerElapsedTime"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "WQ-CheckForWork"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "WQ-ScanEntries"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "WQ-QueueEmpty"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "WQ-NoWorkDone"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZNK11IOServicePM14gatedSerializeEP11OSSerialize"
        prototype = ""
        caller = "__ZNK11IOServicePM9serializeEP11OSSerialize"
    }
    new {
        args = 0
        anchors {
            new {
                string = "PM notification timeout (pid %d, %s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZL14logAppTimeoutsP8OSObjectPv"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "tellAppClientApplier - Suspended"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZL20tellAppClientApplierP8OSObjectPv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOPMPowerStateQueue"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_GLOBAL__sub_I_IOPMPowerStateQueue.cpp"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOCatalogue"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_GLOBAL__sub_I_OSCollectionIterator.cpp_0"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "KernelConfigTables syntax error: %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "IOProbeScore"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOHIDInterface"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
        }
        symbol = "__ZN11IOCatalogue10initializeEv"
        prototype = ""
        caller = "iokit_post_constructor_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Missing or bad \"%s\" key\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN11IOCatalogue4initEP7OSArray"
        prototype = ""
        caller = "__ZN11IOCatalogue10initializeEv"
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOCatalogue.cpp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN11IOCatalogue4freeEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOCatalogue::addDrivers() encountered non-dictionary; bailing.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN11IOCatalogue10addDriversEP7OSArrayb"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "OSBundleAllowUserTerminate"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%sallowing kextunload terminate for bundleID %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN11IOCatalogue16terminateDriversEP12OSDictionaryPcb"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "preserving service %s-0x%llx during userspace reboot\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "terminating service %s-0x%llx [dext %s]\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "terminating service %s-0x%llx [kext %s]\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN11IOCatalogue34terminateDriversForUserspaceRebootEv"
        prototype = ""
        caller = "__ZL26sysctl_willuserspacerebootP10sysctl_oidPviP10sysctl_req"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: failed to terminate service %s-0x%qx with options %08llx for new dext %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "startMatching_block_invoke"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "___ZN11IOCatalogue13startMatchingEPK8OSSymbol_block_invoke.34"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Resetting IOCatalogue.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN11IOCatalogue18resetAndAddDriversEP7OSArrayb"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "enableCPUCore is unimplemented @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "IOPMGR.cpp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN6IOPMGR13enableCPUCoreEj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOPolledFilePollers"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_GLOBAL__sub_I_IOPolledInterface.cpp"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOPolledInterface::close[%d] 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "IOPolledFilePollersClose"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Preferred Block Size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%qx:%x"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__Z16IOPolledFileOpenPKcjyyPvmPP18IOPolledFileIOVarsPP6OSDataPhPm"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "IOPolledFileWrite(0x%p, 0x%p, %llu, 0x%p) : IOStartPolledIO(0x%p, kIOPolledWrite, %llu, 0x%llx, %d) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "IOPolledFileWrite"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOPolledFileFlush(0x%p) : IOStartPolledIO(0x%p, kIOPolledFlush, 0, 0, 0) returned 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kdb_printf"
            }
        }
        symbol = "IOPolledFileFlush"
        prototype = ""
        caller = "disk_stage_outproc"
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOWorkLoop %p lock time %qd us @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "IOWorkLoop.cpp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOWorkLoop %p lock time %qd us"
                segment = "__TEXT"
                section = "__cstring"
                caller = "OSReportWithBacktrace"
            }
        }
        symbol = "__ZN10IOWorkLoop8lockTimeEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOCommandGate::disable() called when not gated"
                segment = "__TEXT"
                section = "__cstring"
                caller = "OSReportWithBacktrace"
            }
        }
        symbol = "__ZN13IOCommandGate7disableEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "setTimeoutFunc already %p, %p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "IOTimerEventSource.cpp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN18IOTimerEventSource14setTimeoutFuncEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "IOBMD: Unsupported use of guard pages with pageable memory.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOBMD: Unsupported use of guard pages with physical mask or contiguous memory.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "__ZN24IOBufferMemoryDescriptor20initWithPhysicalMaskEP4taskjyyy"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Attempting to free IOBMD with page allocated flag @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "IOBufferMemoryDescriptor.cpp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN24IOBufferMemoryDescriptor4freeEv"
        prototype = ""
        caller = "__ZN16IOSKMemoryBuffer4freeEv"
    }
    new {
        args = 1
        anchors {
            new {
                string = "dmaCommandOperation @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "dmaCommandOperation 0x%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN12IODMACommand7prepareEyybb"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "no remap page found @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN12IODMACommand15genIOVMSegmentsEjPFiPvPS_NS_9Segment64ES0_jES0_PyS0_Pj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "iommu-id"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN8IOMapper5startEP9IOService"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "iommu-parent"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s.DMA.%s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN8IOMapper28copyMapperForDeviceWithIndexEP9IOServicej"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mach_make_memory_entry_64 actualSize @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "getKernelReserved @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "phys is kIODefaultCache @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN25IOGeneralMemoryDescriptor21memoryReferenceCreateEjPP17IOMemoryReference"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "overrun @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "map enter err %x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN25IOGeneralMemoryDescriptor21memoryReferenceMapNewEP17IOMemoryReferenceP7_vm_mapyyjPy"
        prototype = ""
        caller = "__ZN25IOGeneralMemoryDescriptor18memoryReferenceMapEP17IOMemoryReferenceP7_vm_mapyyjPy"
    }
    new {
        args = 1
        anchors {
            new {
                string = "bad dir for upl 0x%x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "short external upl @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN25IOGeneralMemoryDescriptor15initWithOptionsEPvjjP4taskjP8IOMapper"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "IOGMD: not wired for the IODMACommand @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "!pageList phys_addr @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZNK25IOGeneralMemoryDescriptor19dmaCommandOperationEjPvj"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "fMapped %p %s %qx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZNK18IOMemoryDescriptor19dmaCommandOperationEjPvj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOMemoryDescriptor 0x%zx prepared read only"
                segment = "__TEXT"
                section = "__cstring"
                caller = "OSReportWithBacktrace"
            }
            new {
                string = "memRefEntry @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "entry size error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "__ZN25IOGeneralMemoryDescriptor11wireVirtualEj"
        prototype = ""
        caller = "__ZN25IOGeneralMemoryDescriptor7prepareEj"
    }
    new {
        args = 1
        anchors {
            new {
                string = "complete() while dma active @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN25IOGeneralMemoryDescriptor8completeEj"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "upl_transpose(%x)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN25IOGeneralMemoryDescriptor5doMapEP7_vm_mapPyjyy"
        prototype = ""
        caller = "__ZN27IOGuardPageMemoryDescriptor5doMapEP7_vm_mapPyjyy"
    }
    new {
        args = 0
        anchors {
            new {
                string = "doUnmap @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN18IOMemoryDescriptor7doUnmapEP7_vm_mapyy"
        prototype = ""
        caller = "__ZN25IOGeneralMemoryDescriptor7doUnmapEP7_vm_mapyy"
    }
    new {
        args = 0
        anchors {
            new {
                string = "address"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
        }
        symbol = "__ZNK25IOGeneralMemoryDescriptor9serializeEP11OSSerialize"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "_IOMemoryDescriptorMixedData"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_GLOBAL__sub_I_IOMemoryDescriptor.cpp"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOPlatformInterruptController"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "enforce_platform_action_safety"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN16IOPlatformExpert5startEP9IOService"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "top-level"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN16IOPlatformExpert9configureEP9IOService"
        prototype = ""
        caller = "__ZN18IODTPlatformExpert9configureEP9IOService"
    }
    new {
        args = 0
        anchors {
            new {
                string = "pm%u %p %.30s %d %lx %lx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZN16IOPlatformExpert5PMLogEPKcmmm"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "device"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "provider"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRegisterDevice/CheckSubTree - service registered!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN16IOPlatformExpert12CheckSubTreeEP7OSArrayP9IOServiceS3_P12OSDictionary"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s IOClass is %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "%s IOProviderClass is %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "%s IONameMatch is %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "%s IONameMatched is %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "%s name is %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__Z19printDictionaryKeysP12OSDictionaryPc"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "halt-restart-timeout"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "PEHaltRestartInternal"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Class %s passed the %s action to IOPlatformExpert @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN16IOPlatformExpert20callPlatformFunctionEPK8OSSymbolbPvS3_S3_S3_"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "logical-cpu-id"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "logical-cluster-id"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN18IODTPlatformExpert10createNubsEP9IOServiceP10OSIterator"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "AAPL,"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN18IODTPlatformExpert12getModelNameEPci"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOPlatformExpertDevice"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOPanicPlatform"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_GLOBAL__sub_I_IOPlatformExpert.cpp"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "chip-id"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN22IOPlatformExpertDevice20generatePlatformUUIDEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(unknown platform name)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Unable to find driver for this platform: \"%s\". @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN15IOPanicPlatform5startEP9IOService"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Halt/Restart Timed Out @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZL31IOShutdownNotificationsTimedOutPvS_"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOPlatformIO"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_GLOBAL__sub_I_IOPMGR.cpp_0"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "IOCPUNumber"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN5IOCPU12setCPUNumberEj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOPlatformSleepAction"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOPlatformWakeAction"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOPlatformQuiesceAction"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOPlatformActiveAction"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOPlatformHaltRestartAction"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOPlatformPanicAction"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
        }
        symbol = "__Z27IOPlatformActionsInitializev"
        prototype = ""
        caller = "iokit_post_constructor_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s -> %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZL23IOServicePlatformActionPvS_jS_S_S_PKcy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IODTNVRAMPlatformNotifier"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IODTNVRAMDiags"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IODTNVRAMVariables"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_GLOBAL__sub_I_IONVRAM.cpp"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Stats"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN14IODTNVRAMDiags5startEP9IOService"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%02X:%s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Write"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Delete"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN14IODTNVRAMDiags11logVariableE18NVRAMPartitionType16IONVRAMOperationPKcPv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nvram-bank-count"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "nvram-current-bank"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN22IODTNVRAMFormatHandler18getNVRAMPropertiesEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "header adler %#08X != calculated_adler %#08X\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "IONVRAMCHRPHandler.cpp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN18IONVRAMCHRPHandler16unserializeImageEPKhy"
        prototype = ""
        caller = "__ZN9IODTNVRAM15initImageFormatEv"
    }
    new {
        args = 0
        anchors {
            new {
                string = "nvram-raw"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN16IONVRAMV3Handler18getNVRAMPropertiesEv"
        prototype = ""
        caller = "__ZN9IODTNVRAM15initImageFormatEv"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Invalid _systemUsed size\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Invalid _commonUsed size\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN16IONVRAMV3Handler17setEntryForRemoveEP18nvram_v3_var_entryb"
        prototype = ""
        caller = "__ZN16IONVRAMV3Handler19setVariableInternalEPKhPKcP8OSObject"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Version"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "options-system"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "options-common"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN9IODTNVRAM5startEP9IOService"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nvram-proxy-data"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NVRAM size is 0 bytes, possibly due to bad config with iBoot + xnu mismatch @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "IONVRAMV3Handler creation failed\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "IONVRAMCHRPHandler creation failed\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN9IODTNVRAM15initImageFormatEv"
        prototype = ""
        caller = "__ZN9IODTNVRAM5startEP9IOService"
    }
    new {
        args = 0
        anchors {
            new {
                string = "triggered"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "completed with ret=%08x"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Generation"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN9IODTNVRAM12syncInternalEb"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ObliterateNVRam"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ResetNVRam"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN9IODTNVRAM22handleSpecialVariablesEPKcPKhPK8OSObjectPi"
        prototype = ""
        caller = "__ZN9IODTNVRAM26setPropertyWithGUIDAndNameEPKhPKcP8OSObject"
    }
    new {
        args = 1
        anchors {
            new {
                string = "IONVRAM-DELETE-PROPERTY"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IONVRAM-DELETEWRET-PROPERTY"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IONVRAM-FORCESYNCNOW-PROPERTY"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s as bool to %d"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s as number to %#llx"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s as string to %s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s as data with size %#x"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN9IODTNVRAM26setPropertyWithGUIDAndNameEPKhPKcP8OSObject"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOClassNameOverride"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "BSD Names"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZL7skipKeyPK8OSSymbol"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "2nvram"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZL26nvram_validate_header_v1v2PKhPji"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "com.apple.private.iokit.nvram-write-access"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.private.iokit.nvram-read-access"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.private.iokit.system-nvram-allow"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.private.iokit.system-nvram-internal-allow"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.private.iokit.system-nvram-hidden-allow"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZL16verifyPermission16IONVRAMOperationPKhPKcb"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOExtensiblePaniclog"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_GLOBAL__sub_I_IOUserClient.iig.cpp_7"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "EXT_PANICLOG IOKIT: Failed to create iobmd"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN20IOExtensiblePaniclog11Create_ImplEP6OSDataP8OSStringjjPPS_"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "dma-parent"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dmaIndex out of range @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "IODMAController.cpp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN15IODMAController13getControllerEP9IOServicej"
        prototype = ""
        caller = "__ZN16IODMAEventSource4initEP8OSObjectP9IOServicePFvS1_PS_P12IODMACommandiyyES8_j"
    }
    new {
        args = 0
        anchors {
            new {
                string = "PassthruInterruptController"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_GLOBAL__sub_I_PassthruInterruptController.cpp"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "handleInterrupt shouldn't be invoked directly @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "PassthruInterruptController.cpp"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN27PassthruInterruptController15handleInterruptEPvP9IOServicei"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOMachPort"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "iokit.IOMachPort"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOUserIterator"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOUserNotification"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOServiceUserNotification"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOServiceMessageUserNotification"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_GLOBAL__sub_I_IOUserClient.cpp"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s(0x%qx)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "iokit_port_object_description"
        prototype = ""
        caller = "mach_port_kobject_description_from_user"
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipcEnter @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN12IOUserClient18callExternalMethodEjP25IOExternalMethodArguments"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipcExit @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN12IOUserClient7ipcExitEi"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "virtual bool IOServiceUserNotification::handler(void *, IOService *)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN25IOServiceUserNotification7handlerEPvP9IOService"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "virtual IOReturn IOServiceMessageUserNotification::handler(void *, UInt32, IOService *, void *, vm_size_t)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN32IOServiceMessageUserNotification7handlerEPvjP9IOServiceS0_m"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "setAsyncReference not valid for 64b @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__Z29transmuteEntitlementsInDaemonP7cs_blobPPKhPm.cold.1"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "consolesession"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "secureprocess"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN12IOUserClient18clientHasPrivilegeEPvPKc"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "iokit_task_terminate phase %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "destroying out of band connect for %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "iokit_task_terminate"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: mach_msg_send_from_kernel(0x%x)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "static IOReturn IOUserClient::_sendAsyncResult64(io_user_reference_t *, IOReturn, io_user_reference_t *, UInt32, IOOptionBits)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN12IOUserClient18_sendAsyncResult64EPyiS0_jj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IORegistryEntrySetProperties(%s, %s) disallowed due to IORegistryEntryAllowableSetProperties\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__is_io_registry_entry_set_properties_block_invoke"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.security.waitquiet-panics"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "is_io_service_wait_quiet_with_options"
        prototype = ""
        caller = "_Xio_service_wait_quiet_with_options"
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOUserClientSharedInstance"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOUserClientMessageAppSuspended"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOUC %s requires kIOUserClientDefaultLockingKey, kIOUserClientDefaultLockingSetPropertiesKey, kIOUserClientDefaultLockingSingleThreadExternalMethodKey\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "IOUC %s missing IOUserClientEntitlements property\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "IOUC %s had IOUserClientEntitlementswith value not boolean false or string\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "IOUC %s missing entitlement in process %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOUC %s failed MACF in process %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "IOUC %s failed sandbox in process %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "is_io_service_open_extended"
        prototype = ""
        caller = "_Xio_service_open_extended"
    }
    new {
        args = 0
        anchors {
            new {
                string = "ignored is_io_service_close(0x%qx,%s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "is_io_service_close"
        prototype = ""
        caller = "_Xio_service_close"
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.security.iocatalog-management"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "is_io_catalog_send_data"
        prototype = ""
        caller = "_Xio_catalog_send_data"
    }
    new {
        args = 0
        anchors {
            new {
                string = "wrong externalMethod for IOUserClient2022 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN16IOUserClient202214externalMethodEjP25IOExternalMethodArgumentsP24IOExternalMethodDispatchP8OSObjectPv"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Count %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "Empty\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = ", busy %ld"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "IOPrintPlane"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Instance allocation"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Container allocation"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOMalloc allocation"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Pageable allocation"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZNK16IOKitDiagnostics9serializeEP11OSSerialize"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOKitDiagnosticsClient"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_GLOBAL__sub_I_IOKitDebug.cpp"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: dataAvailableNotification failed - msg_send returned: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN11IODataQueue29sendDataAvailableNotificationEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOStatistics::onKextUnload: cannot find kext: %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN12IOStatistics12onKextUnloadEP6OSKext"
        prototype = ""
        caller = "__ZN6OSKext6unloadEv"
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOStatistics::onClassAdded: cannot find parent kext: %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN12IOStatistics12onClassAddedEP6OSKextP11OSMetaClass"
        prototype = ""
        caller = "__ZN6OSKext8addClassEP11OSMetaClassj"
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOStatistics::onClassRemoved: cannot find class: %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN12IOStatistics14onClassRemovedEP6OSKextP11OSMetaClass"
        prototype = ""
        caller = "__ZN6OSKext11removeClassEP11OSMetaClass"
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOStatistics::registerEventSource - bad metaclass %p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "IOStatistics::registerEventSource: cannot find parent class: %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN12IOStatistics19registerEventSourceEP8OSObject"
        prototype = ""
        caller = "__ZN13IOEventSource4initEP8OSObjectPFvS1_zE"
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOStatistics::registerWorkLoop: cannot find parent kext @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN12IOStatistics16registerWorkLoopEP10IOWorkLoop"
        prototype = ""
        caller = "__ZN10IOWorkLoop4initEv"
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOStatistics::registerUserClient: cannot find parent class: %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN12IOStatistics18registerUserClientEP12IOUserClient"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "interrupt_accounting"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__Z23interruptAccountingInitv"
        prototype = ""
        caller = "InitIOKit"
    }
    new {
        args = 0
        anchors {
            new {
                string = "virtual IOReturn IOReporter::handleSwapPrepare(int)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s doesn't support shrinking @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "IOReporter::_swap* already in use @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN10IOReporter17handleSwapPrepareEi"
        prototype = ""
        caller = "__ZN15IOStateReporter17handleSwapPrepareEi"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s - can't free %d channels of dimension %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "virtual void IOReporter::handleSwapCleanup(int)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN10IOReporter17handleSwapCleanupEi"
        prototype = ""
        caller = "__ZN15IOStateReporter17handleSwapCleanupEi"
    }
    new {
        args = 0
        anchors {
            new {
                string = "virtual IOReturn IOReporter::setElementValues(int, IOReportElementValues *, uint64_t)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN10IOReporter16setElementValuesEiP21IOReportElementValuesy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "virtual const IOReportElementValues *IOReporter::getElementValues(int)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN10IOReporter16getElementValuesEi"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOReturn IOReporter::updateReportChannel(int, int *, IOBufferMemoryDescriptor *)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "updateReportChannel"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "chElems"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN10IOReporter19updateReportChannelEiPiP24IOBufferMemoryDescriptor"
        prototype = ""
        caller = "__ZN10IOReporter18handleUpdateReportEP19IOReportChannelListjPvS2_"
    }
    new {
        args = 0
        anchors {
            new {
                string = "virtual IOReturn IOReporter::copyElementValues(int, IOReportElementValues *)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN10IOReporter17copyElementValuesEiP21IOReportElementValues"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOReportChannelUnit"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOReportChannels"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN10IOReporter10legendWithEP7OSArrayS1_19IOReportChannelTypey"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "virtual IOReturn IOStateReporter::handleSwapPrepare(int)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOStateReporter::_swap* already in use @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN15IOStateReporter17handleSwapPrepareEi"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "IOStateReporter::handleAddChannelSwap _lastUpdateTimes unset despite non-NULL _currentStates @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN15IOStateReporter20handleAddChannelSwapEyPK8OSSymbol"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "virtual void IOStateReporter::handleSwapCleanup(int)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN15IOStateReporter17handleSwapCleanupEi"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "overrideChannelState() cannot be used after setChannelState()! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN15IOStateReporter20overrideChannelStateEyyyyy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "incrementChannelState() cannot be used after setChannelState()! @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN15IOStateReporter21incrementChannelStateEyyyyy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "virtual IOReturn IOStateReporter::handleSetStateID(uint64_t, int, uint64_t)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN15IOStateReporter16handleSetStateIDEyiy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "virtual IOReturn IOStateReporter::handleSetStateByIndices(int, int, uint64_t, uint64_t)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN15IOStateReporter23handleSetStateByIndicesEiiyy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "virtual IOReturn IOStateReporter::updateChannelValues(int)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN15IOStateReporter19updateChannelValuesEi"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOReportGroupName"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOReportSubGroupName"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN14IOReportLegend14organizeLegendEP12OSDictionaryPK8OSSymbolS4_"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "OSUserMetaClass"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOUserService"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOUserServerCheckInToken"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "_IOUserServerCheckInCancellationHandler"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOServiceStateNotificationEventSource"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOSystemStateNotification"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOStateNotificationItem"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOStateNotificationListener"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_GLOBAL__sub_I_IOUserServer.cpp"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "DK: %s-0x%qx::SetDispatchQueue(%s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN9IOService21SetDispatchQueue_ImplEPKcP15IODispatchQueue"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.driverkit.allows-publish"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "DK: %s-0x%qx: publisher entitlements check failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "IODriverKitPublishEntitlementsKey"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "DK: %s-0x%qx: subscriber entitlements check failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "___ZN35IOServiceNotificationDispatchSource11Create_ImplEP12OSDictionaryyP15IODispatchQueuePPS__block_invoke"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "DK: %s-0x%qx::Create(%s-0x%qx) %p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "DK: %s-0x%qx::Create(%s-0x%qx): could not find OSKext for %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "IOUserServer(%s-0x%qx)"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "%s: found the task loadTag already set to %u (set to %u)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN12IOUserServer11Create_ImplEPKcyyP8OSStringPPS_"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK: IODispatchQueue::Create %s %p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN15IODispatchQueue11Create_ImplEPKcyyPPS_"
        prototype = ""
        caller = "__ZN15IODispatchQueue9MetaClass8DispatchE5IORPC"
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK: OSMetaClassBase::Invoke user 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "DK: OSMetaClassBase::Invoke kernel %s 0x%qx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN15OSMetaClassBase6InvokeE5IORPC"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: proc not found\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: uuid not matching\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN12IOUserServer16setDriverKitUUIDEP6OSKext"
        prototype = ""
        caller = "__ZN12IOUserServer11Create_ImplEPKcyyP8OSStringPPS_"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: failed to set check in token. token=%p, fCheckInToken=%p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "setCheckInToken"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN12IOUserServer19externalMethodStartEP8OSObjectPvP25IOExternalMethodArguments"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: null check in token\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "serviceMatchesCheckInToken"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN12IOUserServer26serviceMatchesCheckInTokenEP24IOUserServerCheckInToken"
        prototype = ""
        caller = "__ZN9IOService14startCandidateEPS_"
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK: %s-0x%qx: provider entitlements check failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "DK: %s-0x%qx: family entitlements check failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN12IOUserServer17checkEntitlementsEP9IOServiceS1_"
        prototype = ""
        caller = "__ZN9IOService14startCandidateEPS_"
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK: %s::exit(%s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN12IOUserServer4exitEPKc"
        prototype = ""
        caller = "__ZN9IOService14startCandidateEPS_"
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK: %s::kill(%s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN12IOUserServer4killEPKc"
        prototype = ""
        caller = "___ZN11IOServicePH25userServerAckTimerExpiredEPvS0__block_invoke"
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK: %s-0x%qx::instantiate inactive\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "DK: no IOUserClass defined for %s-0x%qx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "DK: userMeta %s %p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "DK: userMeta %s was not found in fClasses\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "DK: instantiate object %s with user class %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "DK: %s: no user class found\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN12IOUserServer17objectInstantiateEP8OSObject5IORPCP12IORPCMessage"
        prototype = ""
        caller = "__ZN12IOUserServer14kernelDispatchEP8OSObject5IORPC"
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK:  fClasses[\"%s\"] => %p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "___ZN12IOUserServer17objectInstantiateEP8OSObject5IORPCP12IORPCMessage_block_invoke"
        prototype = ""
        caller = "__ZN12IOUserServer17objectInstantiateEP8OSObject5IORPCP12IORPCMessage"
    }
    new {
        args = 1
        anchors {
            new {
                string = "DK: %s: instantiate failed 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "DK: %s::Dispatch kernel 0x%qx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "DK: %s::Dispatch kernel 0x%qx result 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN12IOUserServer14kernelDispatchEP8OSObject5IORPC"
        prototype = ""
        caller = "__ZN12IOUserServer6serverEP8ipc_kmsgP12IORPCMessagePS1_"
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK: TARGET %s msg 0x%qx from 0x%qx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN12IOUserServer6targetEP8OSActionP12IORPCMessage"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "DK: UEXT notify %o\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "DK: UEXT copyin(0x%x) %x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN12IOUserServer6serverEP8ipc_kmsgP12IORPCMessagePS1_"
        prototype = ""
        caller = "uext_server"
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK: invalid refs count %qd in message id 0x%qx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "DK: %s::Dispatch(trap) kernel 0x%qx 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "IOUserServerUEXTTrap"
        prototype = ""
        caller = "iokit_user_client_trap"
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK: mach_msg() failed 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "DK: rpc copyin(0x%x) %x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN12IOUserServer3rpcE5IORPC"
        prototype = ""
        caller = "__ZN15OSMetaClassBase6InvokeE5IORPC"
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK: %s::finalize(%p)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "DK: %s::finalize(%p) dext was replaced, do not rematch current dext\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "DK: %s::finalize(%p) could not find fCheckInToken\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN12IOUserServer8finalizeEj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK: %s::terminate(%s-0x%qx)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "DK: %s::terminate(%s-0x%qx) server exit before start()\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "___ZN12IOUserServer8finalizeEj_block_invoke"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK: IOUserServer may only be created with driver tasks\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "DK: entitlements are missing for %s[%d]\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "DK: %s[%d] has team identifier %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "com.apple.developer.driverkit entitlement check failed for %s[%d]\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN12IOUserServer8withTaskEP4task"
        prototype = ""
        caller = "__ZN22IOPlatformExpertDevice13newUserClientEP4taskPvjP12OSDictionaryPP12IOUserClient"
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK: %s::clientClose(%p)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "Driver %s has crashed too many times\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN12IOUserServer11clientCloseEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK: %s-0x%qx::ClientCrashed(%s-0x%qx)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "___ZN12IOUserServer11clientCloseEv_block_invoke"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK: %s::registerClass %s, %d, %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN12IOUserServer13registerClassEP18OSClassDescriptionjPP15OSUserMetaClass"
        prototype = ""
        caller = "__ZN12IOUserServer27externalMethodRegisterClassEP8OSObjectPvP25IOExternalMethodArguments"
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK: %s::LoadModule 0x%x %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN12IOUserServer13serviceAttachEP9IOServiceS1_"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "com.apple.developer.driverkit.administrator"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "DK: %s-0x%qx:UC failed required entitlement check\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "DK: %s-0x%qx:UC failed userclient-access check, needed bundle ID %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "DK: %s-0x%qx:UC entitlements check failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN12IOUserServer20serviceNewUserClientEP9IOServiceP4taskPvjP12OSDictionaryPP12IOUserClient"
        prototype = ""
        caller = "__ZN9IOService13newUserClientEP4taskPvjP12OSDictionaryPP12IOUserClient"
    }
    new {
        args = 0
        anchors {
            new {
                string = "non-removable"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN12IOUserServer17serviceJoinPMTreeEP9IOService"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK: %s-0x%qx::setPowerState(%ld) %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN12IOUserServer13setPowerStateEmP9IOService"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK: %s-0x%qx::serviceSetPowerState(%ld) %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN12IOUserServer20serviceSetPowerStateEP9IOServiceS1_mm"
        prototype = ""
        caller = "__ZN9IOService19driverSetPowerStateEv"
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK: %s-0x%qx::powerStateDidChangeTo(%ld) %d, %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN12IOUserServer21powerStateDidChangeToEmmP9IOService"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK: %s-0x%qx::SetPowerState(%d), %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN9IOService18SetPowerState_ImplEj"
        prototype = ""
        caller = "__ZN9IOService9_DispatchEPS_5IORPC"
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK: %s::powerOff(%d) %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN12IOUserServer11systemPowerEbb"
        prototype = ""
        caller = "___ZN11IOServicePH11matchingEndEP9IOService_block_invoke"
    }
    new {
        args = 1
        anchors {
            new {
                string = "DK: changePowerStateWithOverrideTo(%s-0x%qx, %d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "___ZN12IOUserServer11systemPowerEb_block_invoke.164"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "DK: %schangePowerStateWithOverrideTo(%s-0x%qx, %d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "___ZN12IOUserServer11systemPowerEb_block_invoke_2"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK: %s::systemHalt()\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN12IOUserServer10systemHaltEi"
        prototype = ""
        caller = "___ZN11IOServicePH10systemHaltEi_block_invoke"
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK: stale service %s-0x%qx found, skipping termination\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "DK: %d: terminate(%s-0x%qx)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "___ZN12IOUserServer10systemHaltEi_block_invoke"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK: %s-0x%qx::start(%s-0x%qx) %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN12IOUserServer14serviceStartedEP9IOServiceS1_b"
        prototype = ""
        caller = "__ZN9IOService14startCandidateEPS_"
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK: %s-0x%qx- %s-0x%qx blocked attempt to open %s-0x%qx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN12IOUserServer11serviceOpenEP9IOServiceS1_"
        prototype = ""
        caller = "__ZN9IOService4openEPS_jPv"
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK: %s-0x%qx:force close (%s-0x%qx)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "___ZN12IOUserServer14serviceDidStopEP9IOServiceS1__block_invoke"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "DK: %s-0x%qx %s SetEventlinkPort() returned %x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN16IOUserUserClient26eventlinkConfigurationTrapEPvS0_S0_S0_S0_S0_"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "DK: %s-0x%qx %s SetWorkGroupPort() returned %x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN16IOUserUserClient26workgroupConfigurationTrapEPvS0_S0_S0_S0_S0_"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Driver %s has crashed %zu time(s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "DK: Could not find OSKext for %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "IOUserServerName \"%s\" not correct organization for bundleID \"%s\"\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "Could not initialize token\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN12IOUserServer16launchUserServerEP8OSStringPK8OSSymbolP8OSNumberbPP24IOUserServerCheckInTokenP6OSData"
        prototype = ""
        caller = "__ZN9IOService14startCandidateEPS_"
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.iokit.pm.sleepdescription"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "com.apple.iokit.pm.hibernatestate"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "com.apple.iokit.pm.sleepreason"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "com.apple.iokit.pm.wakedescription"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "com.apple.iokit.pm.wakereason"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "com.apple.iokit.pm.wakedescription.continuous-time-offset"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "com.apple.iokit.pm.haltdescription"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "com.apple.iokit.pm.haltstate"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "com.apple.iokit.pm.powersourcedescription"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "com.apple.iokit.pm.acattached"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
        }
        symbol = "__ZN25IOSystemStateNotification10initializeEv"
        prototype = ""
        caller = "__ZN9IOService11setPlatformEP16IOPlatformExpert"
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.iokit.systemstate"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.iokit.statenotification.create"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "com.apple.iokit.statenotification.set"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN25IOSystemStateNotification13setPropertiesEP8OSObject"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "DK: Attempted to create action object with type \"%s\" which does not inherit from OSAction\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZL34OSActionCreateWithTypeNameInternalP8OSObjectyymP8OSStringbPP8OSAction"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "obsolete message"
                segment = "__TEXT"
                section = "__cstring"
                caller = "OSReportWithBacktrace"
            }
        }
        symbol = "__ZL25IORPCMessageFromMachReplyP16IORPCMessageMach"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOInterfaceNamePrefix"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "network-type"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IONetworkRootType"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "IONetworkNamePrefixMatching"
        prototype = ""
        caller = "IOFindBSDRoot"
    }
    new {
        args = 0
        anchors {
            new {
                string = "apfs-preboot-uuid"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "IOGetBootUUID_0"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "associated-volume-group"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "IOGetBootUUID_1"
        prototype = ""
        caller = "sysctl_targetsystemvolgroupuuid"
    }
    new {
        args = 0
        anchors {
            new {
                string = "boot-objects-path"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "IOGetBootObjectsPath"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "boot-manifest-hash"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "IOGetBootManifestHash"
        prototype = ""
        caller = "sysctl_bootobjectspath"
    }
    new {
        args = 1
        anchors {
            new {
                string = "ssv-seal-broken"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "40A0DDD2-77F8-4392-B4A3-1E7304206516:recovery-broken-seal-uuid"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to write recovery-broken-seal-uuid to NVRAM.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "40A0DDD2-77F8-4392-B4A3-1E7304206516:recovery-boot-mode"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to write recovery-boot-mode to NVRAM.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "missing-boot-media"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "40A0DDD2-77F8-4392-B4A3-1E7304206516:boot-picker-bringup-reason"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to write boot-picker-bringup-reason to NVRAM.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "40A0DDD2-77F8-4392-B4A3-1E7304206516:boot-command"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "recover-system"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to acquire IODTNVRAM object.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Failed to wait for IONVRAM service.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "Failed to save new boot-command to NVRAM.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "Unknown mode: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "\nAbout to reboot into Recovery!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "IOSetRecoveryBoot"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "!BSD\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "mount(%d) failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "rootdev"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "root-matching"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "rooting via boot-uuid from /chosen: %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "RAMDisk"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ramdisk params @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "BSD root: %s, major %d, minor %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "Unable to retrieve range for root memory device %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "IOFindBSDRoot: specified root memory device, %s, has not been configured @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "rd=uuid but no boot-uuid=<value> specified @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "\nWaiting for boot volume with UUID %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "Apple_HFS"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Content"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Waiting for matching to complete\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "Waiting on %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "Got boot device = %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "Wait for root failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = ", major %d, minor %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "IONetworkStack"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOInterfaceUnit"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "IOFindBSDRoot"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "SecureRootName"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
        }
        symbol = "IOSecureBSDRoot"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Failed to open the corefile. Error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "IOProvideCoreFileAccess"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kernel-core-dump-location"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/private/preboot/kernelcore"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "corefile path selection in device-tree is not one of the allowed values: %s, Using default %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "corefile path selection in device-tree was set to: %s (value: %s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZL21IOResolveCoreFilePathv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Failed to open corefile of size %llu MB (low disk space)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "IOPolledFilePollersSetup for corefile failed with error: 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "Opened corefile of size %llu MB\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "corefile_size_mb"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Boot-args specify %d MB kernel corefile\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "Volume is low on space. Not allocating kernel corefile.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "Couldn\\'t retrieve volume status. Error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZL20IOOpenPolledCoreFilePvS_"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Failed to %s the corefile. Error %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "write to"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "read from"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZL20IOAccessCoreFileDataPviyiS_"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "di-root-image"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOHDIXController::setProperty(%s, %s) failed.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "failed to quiesce attached disk image (%s)! \n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "di-root-removable"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOHDIXController::setProperty(%s, %d) failed.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "di_root_image_ext"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "boot-ramdmg-size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "boot-ramdmg-extents"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "di_root_ramfile"
        prototype = ""
        caller = "IOFindBSDRoot"
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.AppleDiskImageController.load"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN9IOService15publishResourceEPKcP8OSObject"
            }
            new {
                string = "IOHDIXController"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZL18di_load_controllerv"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "IOUserClientCrossEndianCompatible"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN20RootDomainUserClient12initWithTaskEP4taskPvjP12OSDictionary"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "SleepRequestedByPID"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOPMRootDomain SleepSystem unserialization failure: %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN20RootDomainUserClient24secureSleepSystemOptionsEPKvyPj"
        prototype = ""
        caller = "__ZN20RootDomainUserClient24externalMethodDispatchedEP8OSObjectPvP25IOExternalMethodArguments"
    }
    new {
        args = 1
        anchors {
            new {
                string = "UserActivity Assertion"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN20RootDomainUserClient24externalMethodDispatchedEP8OSObjectPvP25IOExternalMethodArguments"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "could not create IOPerfControlClient @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN19IOPerfControlClient10copyClientEP9IOServicey"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "driverState has already been initialized @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN19IOPerfControlClient14registerDeviceEP9IOServiceS1_"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOPerfControlWorkContext"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_GLOBAL__sub_I_IOPerfControl.cpp"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "WorkloadIDTable"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "WorkloadIDConfigurationFlags"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "IOParseWorkloadConfig"
        prototype = ""
        caller = "sysctl_workload_config"
    }
    new {
        args = 0
        anchors {
            new {
                string = "WorkloadClass"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "CriticalityOffset"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "WorkIntervalType"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "___ZL11parsePhasesP19workload_config_ctxRK8OSSymbolP8OSObject_block_invoke"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ComplexityAllowed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "___ZL10parseFlagsRK8OSSymbolPK8OSObjectRjS5__block_invoke"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "DefaultPhase"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Phases"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "___ZL20parseWorkloadIDTableP19workload_config_ctxP12OSDictionary_block_invoke"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "DisableWorkloadClassThreadPolicy"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "___ZL33parseWorkloadIDConfigurationFlagsP19workload_config_ctxPK8OSObject_block_invoke"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOSKRegionMapper"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOSKMapper"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOSKArena"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOSKRegion"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOSKMemoryArray"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOSKMemoryBuffer"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "iokit.IOSKMemoryBuffer"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_GLOBAL__sub_I_IOSkywalkSupport.cpp"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOUnifiedAddressTranslator"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_GLOBAL__sub_I_IOUnifiedAddressTranslator.cpp"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOUnifiedAddressTranslator init failed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN26IOUnifiedAddressTranslator22registerTaskForServiceEP4taskP9IOService"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOUAT ERROR: Failed to retrieve '%s' DT prop @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "IOUAT ERROR: Bad '%s' DT prop size (expected %zu bytes, got %u) @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN26IOUnifiedAddressTranslator13getDTPropertyEPKcm"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "IOUAT %s:%d: *** Attempting to map %s\n\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "IOUAT ERROR: Expected %s base address to be page-aligned but got %#llx @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "IOUAT ERROR: Expected %s size to be a non-zero multiple of the page size but got %#zx bytes @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "IOUAT ERROR: Failed to allocate IOMemoryDescriptor for %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "IOUAT ERROR: Failed to allocate IOMemoryMap for %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "IOUAT ERROR: Failed to prepare %s descriptor @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "IOUAT %s:%d: *** Successfully mapped %s at (VA=%#lx, PA=%#llx)\n\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN26IOUnifiedAddressTranslator29mapHardwareResourceDTInternalEPKcS1_m"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ASC carveout region"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "gfx-shared-region-base"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "gfx-shared-region-size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "TTBR1 shared L2 table"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "gfx-shared-l2-region-base"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "TTBAT"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "gpu-region-base"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "GPU handoff region"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "gfx-handoff-base"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOUAT %s:%d: *** IOUnifiedAddressTranslator entry\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "IOUAT ERROR: Failed to allocate unmap list lock\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOUAT ERROR: Failed to allocate the TTBR0 lock\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOUAT ERROR: Failed to allocate release thread lock\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOUAT ERROR: Failed to allocate release array\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "iouat_debug"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOUAT WARN: Not using restricted aperture as VM range extension not sufficient\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "IOUAT ERROR: Failed to allocate the TTBR1 lock\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOUAT"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOUAT ERROR: failed to initialize PPL state object\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "fCodeRangeAllocator @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "IOUAT %s:%d: *** IOUnifiedAddressTranslator success\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN26IOUnifiedAddressTranslator4initEP4taskP9IOService"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "IOUAT %s:%d: *** setClientContextID entry: %u\n\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "setClientContextID"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOUAT: failed to call PPL ioctl UAT_PPL_IOCTL_SET_CONTEXT_ID @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN26IOUnifiedAddressTranslator18setClientContextIDEjb"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "IOUAT %s:%d: *** removeClientContextID entry: %u\n\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "removeClientContextID"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOUAT: failed to call PPL ioctl UAT_PPL_IOCTL_REMOVE_CONTEXT_ID @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN26IOUnifiedAddressTranslator21removeClientContextIDEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "IOUAT %s:%d: *** taskDied, context ID: %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOUAT %s:%d: *** taskDied, no context ID assigned\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "IOUAT: failed to free all page tables on task death for ID %u @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN26IOUnifiedAddressTranslator8taskDiedEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "IOUAT %s:%d: *** map virt: %010llX length: 0x%llX options: 0x%llX contextID: %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "doMap"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "backingDescriptor != nullptr @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "isAligned(size, (uint32_t)PAGE_SIZE)failed: %llu/%u @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "isAligned(virtAddr, (uint32_t)PAGE_SIZE)failed: 0x%llX/%u @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "IOUAT: PPL map operation failed virt: %010llX length: 0x%llX options: 0x%llX contextID: %u @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN26IOUnifiedAddressTranslator5doMapEP18IOMemoryDescriptoryyj"
        prototype = ""
        caller = "__ZN26IOUnifiedAddressTranslator3mapEP11IOMemoryMapj"
    }
    new {
        args = 1
        anchors {
            new {
                string = "IOUAT %s:%d: *** unmap virt: %010llX length: 0x%llX contextID: %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "IOUAT %s:%d: *** reached doUnmap exit\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN26IOUnifiedAddressTranslator7doUnmapEP18IOMemoryDescriptoryy"
        prototype = ""
        caller = "__ZN26IOUnifiedAddressTranslator5unmapEP11IOMemoryMap"
    }
    new {
        args = 1
        anchors {
            new {
                string = "IOUAT %s:%d: *** prepareFWUnmap entry virt:%010llX length: 0x%llX contextID: %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "prepareFWUnmap"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOUAT: failed to call PPL ioctl UAT_PPL_IOCTL_PREPARE_UNMAP @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN26IOUnifiedAddressTranslator14prepareFWUnmapEyy"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "IOUAT %s:%d: *** reached createMappingInAperture()\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "createMappingInAperture"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN26IOUnifiedAddressTranslator23createMappingInApertureEjP18IOMemoryDescriptorjym"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOUAT %s:%d: *** reached queueUnmap()\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "fUnmapListCount < IOUAT_UNMAP_LIST_MAX_SIZE @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "IOUAT %s:%d: *** exit queueUnmap()\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN26IOUnifiedAddressTranslator10queueUnmapEP18IOMemoryDescriptoryy"
        prototype = ""
        caller = "__ZN26IOUnifiedAddressTranslator7doUnmapEP18IOMemoryDescriptoryy"
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOUAT %s:%d: *** Reached commitUnmaps()\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "IOUAT %s:%d: *** exit commitUnmaps()\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN26IOUnifiedAddressTranslator12commitUnmapsEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOUAT %s:%d: *** getTotalPageTableMemory entry\n\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "getTotalPageTableMemory"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOUAT: failed to call PPL ioctl UAT_PPL_IOCTL_TOTAL_PT_MEM @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN26IOUnifiedAddressTranslator23getTotalPageTableMemoryEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOUAT %s:%d: *** isPageFaultExpected entry 0x%llx %u\n\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "isPageFaultExpected"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOUAT: failed to call PPL ioctl UAT_PPL_IOCTL_FAULT_EXPECTED @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN26IOUnifiedAddressTranslator19isPageFaultExpectedEyj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOUAT %s:%d: *** getPageTablePhysicalBaseAddress entry %u\n\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "getPageTablePhysicalBaseAddress"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ttbrIdx < 2 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN26IOUnifiedAddressTranslator31getPageTablePhysicalBaseAddressEj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOUAT %s:%d: *** getPageTableEntry entry 0x%llx\n\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "getPageTableEntry"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOUAT: failed to call PPL ioctl UAT_PPL_IOCTL_GET_PT_ENTRY @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN26IOUnifiedAddressTranslator17getPageTableEntryEy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOUAT %s:%d: *** mapToPhysicalAddress entry 0x%llx\n\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "mapToPhysicalAddress"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN26IOUnifiedAddressTranslator20mapToPhysicalAddressEy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "SEPHibernator"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SEPHibernatorService"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_GLOBAL__sub_I_SEPHibernator.cpp"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "HibernationService"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Couldn\\'t allocate service dict @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Wrong type for IOService @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN13SEPHibernator13sepHibernatorEv"
        prototype = ""
        caller = "__Z16IOPolledFileOpenPKcjyyPvmPP18IOPolledFileIOVarsPP6OSDataPhPm"
    }
    new {
        args = 0
        anchors {
            new {
                string = "kPMGeneralAggressiveness"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kPMMinutesToDim"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kPMMinutesToSpinDown"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kPMMinutesToSleep"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kPMEthernetWakeOnLANSettings"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kPMSetProcessorSpeed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kPMPowerSource"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kPMMotionSensor"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kPMLastAggressivenessType"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: setAggressiveness(%x) %s = %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: setAggressiveness(%x) %s = %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain17setAggressivenessEmmj"
        prototype = ""
        caller = "__ZN14IOPMrootDomain17setAggressivenessEmm"
    }
    new {
        args = 0
        anchors {
            new {
                string = "kPMCPUAssertion"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kPMPCIUnsupported"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "kPMDKNotReady"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain23checkSystemSleepAllowedEjj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "OSValueObject<PMAssertStruct>"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_GLOBAL__sub_I_OSCollection.cpp_8"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMAssertionsTracker"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMHaltWorker"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOPMServiceInterestNotifier"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMTraceWorker"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMSettingHandle"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMSettingObject"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "_GLOBAL__sub_I_IOPMrootDomain.cpp"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: %qd ms @ 0x%lx, "
                segment = "__TEXT"
                section = "__cstring"
                caller = "paniclog_append_noflush_0"
            }
        }
        symbol = "halt_log_enter"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "waitQuiet() for unmount %qd ms\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "IOServicePH::systemHalt took %qd ms\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "IOPMRootDomainWillShutdown"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOHibernateSystemPostWake"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "IOSystemShutdownNotification"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "WakeByCalendarDate"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "PowerByCalendarDate"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "poweron"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "WakeRelativeToSleep"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "PowerRelativeToShutdown"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "MaintenanceWakeCalendarDate"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "SleepServiceWakeCalendarKey"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "SilentRunning"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOPMUserTriggeredFullWake"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "IOPMUserIsActive"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "LowLatencyAudioMode"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "ResponseTimedOut"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "ResponseCancel"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "ResponseSlow"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "ResponsePrompt"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "DriverPSChangeSlow"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "IOPMSetSleepSupported"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "IOPMSystemSleepMessage"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "Sleep On Power Button"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "Wake On Modem Ring"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "Wake On Clamshell Open"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "Wake On AC Change"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "TimeZoneOffsetSeconds"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "Display Sleep Uses Dim"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "MobileMotionModule"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "GPUSwitch"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "ConsoleShutdown"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "swd_sleeptimeout"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "swd_waketimeout"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "haltmspanic"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "haltmslog"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "no-idle"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: Setting gNoIdleFlag to %u from device tree\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "IOSleepSupported"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "TimeMS"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "ResponseType"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "MessageType"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "PowerCaps"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "LowLatencyAudioNotifyState"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "LowLatencyAudioNotifyTimestamp"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "DisplayDims"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Hibernation"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "BootSessionUUID"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: Setting gNoIdleFlag to %u from device tree\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain5startEP9IOService"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "com.apple.private.iokit.rootdomain-set-property"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN12IOUserClient21copyClientEntitlementEP4taskPKc"
            }
            new {
                string = "privileged"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "entitled"
                segment = "__TEXT"
                section = "__cstring"
                caller = "current_thread_ro"
            }
            new {
                string = "PMRD: %s failed, process %s is not %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "SoftwareSimulatedBatteries"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "System Boot Complete"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "System Shutdown"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "StallSystemAtHalt"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "BatteryWarningsDisabled"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "System Idle Seconds"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "System Idle Milliseconds"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "SleepDisabled"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "LoginWindowProgress"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "CoreDisplayProgress"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "CoreGraphicsProgress"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "DestroyFVKeyOnStandby"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "UserWakeAlarmScheduled"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: _userScheduledAlarmMask 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: setProperties(%s) not handled\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: %s failed, process %s is not %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: _userScheduledAlarmMask 0x%x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "PMRD: setProperties(%s) not handled\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "__ZN14IOPMrootDomain13setPropertiesEP8OSObject"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: getAggressiveness type 0x%x not found\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: getAggressiveness type 0x%x not found\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain17getAggressivenessEmPm"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: disk spindown accelerated, was %u min\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: disk spindown restored to %u min\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: disk spindown accelerated\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "bad aggressives request type %x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "PMRD: disk spindown accelerated, was %u min\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "PMRD: disk spindown restored to %u min\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "PMRD: disk spindown accelerated\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "__ZN14IOPMrootDomain25handleAggressivesRequestsEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: idle timer not set (noidle=%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: startIdleSleepTimer increasing timeout from %u to %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: idle timer set for %u milliseconds\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: idle timer not set (noidle=%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: startIdleSleepTimer increasing timeout from %u to %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: idle timer set for %u milliseconds\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain19startIdleSleepTimerEj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: idle timer cancelled\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: idle timer cancelled\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain20cancelIdleSleepTimerEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: sleep timer expired\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: sleep timer expired\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain26handleSleepTimerExpirationEv"
        prototype = ""
        caller = "__ZL21idleSleepTimerExpiredPvS_"
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: ignoring lastActivityTime 0x%qx, now 0x%qx, wake 0x%qx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: user inactive %u min, time to idle sleep %u min\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: ignoring lastActivityTime 0x%qx, now 0x%qx, wake 0x%qx\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: user inactive %u min, time to idle sleep %u min\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain18getTimeToIdleSleepEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "OSSwitch"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Sleep Reason"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain18sleepSystemOptionsEP12OSDictionary"
        prototype = ""
        caller = "__ZN20RootDomainUserClient24secureSleepSystemOptionsEPKvyPj"
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: Added %s to idle sleep preventers list (Total %u)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: Removed %s from idle sleep preventers list (Total %u)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: Cannot cancel idle sleep\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: Added %s to idle sleep preventers list (Total %u)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: Removed %s from idle sleep preventers list (Total %u)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: Cannot cancel idle sleep\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain34updatePreventIdleSleepListInternalEP9IOServicebj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: Added %s to system sleep preventers list (Total %u)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: Removed %s from system sleep preventers list (Total %u)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: Added %s to system sleep preventers list (Total %u)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: Removed %s from system sleep preventers list (Total %u)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain28updatePreventSystemSleepListEP9IOServiceb"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: tellChangeDown %s->%s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: tellChangeDown::userActivityAtSleep %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: tellChangeDown %s->%s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: tellChangeDown::userActivityAtSleep %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain14tellChangeDownEm"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: askChangeDown %s->%s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: askChangeDown %s->%s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain13askChangeDownEm"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: askChangeDownDone(0x%x, %u) type %x, cap %x->%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: cancel dark->sleep\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "AOT wake window cancel: %qd, %qd\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: askChangeDownDone(0x%x, %u) type %x, cap %x->%x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: cancel dark->sleep\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain17askChangeDownDoneEPjPb"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: MESG cap %x->%x did change\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: MESG cap %x->%x did change\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain17systemDidNotSleepEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: tellNoChangeDown %s->%s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: tellNoChangeDown %s->%s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain16tellNoChangeDownEm"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: tellChangeUp %s->%s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: tellChangeUp %s->%s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain12tellChangeUpEm"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: sysPowerDownHandler message %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: sysPowerDownHandler cap %x -> %x (flags %x)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: sysPowerDownHandler max wait %d s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: sysPowerDownHandler message %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: sysPowerDownHandler cap %x -> %x (flags %x)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: sysPowerDownHandler max wait %d s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain19sysPowerDownHandlerEPvS0_jP9IOServiceS0_m"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "PMRD: SleepWake UUID queued: %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: SleepWake UUID queued: %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain24handleQueueSleepWakeUUIDEP8OSObject"
        prototype = ""
        caller = "__ZN14IOPMrootDomain18dispatchPowerEventEjPvy"
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: SleepWake UUID cleared\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: SleepWake UUID cleared\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain26handlePublishSleepWakeUUIDEb"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: Reverting sleep with relative wake\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "Reverting sleep with relative wake\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN14IOPMrootDomain26scheduleImmediateDebugWakeEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "aotlinger"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain23willNotifyPowerChildrenEm"
        prototype = ""
        caller = "__ZN9IOService15pmDriverCalloutEPS_Pv"
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: dark wake promotion disabled at %u ms\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: dark wake promotion disabled at %u ms\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain33willTellSystemCapabilityDidChangeEv"
        prototype = ""
        caller = "__ZN9IOService32OurChangeTellCapabilityDidChangeEv"
    }
    new {
        args = 0
        anchors {
            new {
                string = "AppleClamshellState"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "AppleClamshellCausesSleep"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain31sendClientClamshellNotificationEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: setSleepSupported(%x)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: setSleepSupported(%x)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain17setSleepSupportedEj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: setClamShellSleepDisable(%x->%x)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: setClamShellSleepDisable(%x->%x)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain24setClamShellSleepDisableEbj"
        prototype = ""
        caller = "__ZN20RootDomainUserClient24externalMethodDispatchedEP8OSObjectPvP25IOExternalMethodArguments"
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: next alarm (%s) in %u secs\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: %s %04d/%02d/%d %02d:%02d:%02d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: next alarm (%s) %04d/%02d/%d %02d:%02d:%02d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: scheduled alarm mask 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: next alarm (%s) in %u secs\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: %s %04d/%02d/%d %02d:%02d:%02d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: next alarm (%s) %04d/%02d/%d %02d:%02d:%02d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: scheduled alarm mask 0x%x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain14recordRTCAlarmEPK8OSSymbolP8OSObject"
        prototype = ""
        caller = "__ZN14IOPMrootDomain12setPMSettingEPK8OSSymbolP8OSObject"
    }
    new {
        args = 0
        anchors {
            new {
                string = "SleepTimerWake"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "LidOpen"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ACPower"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "BatteryLow"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "StandbyNoDelay"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "StandbyForced"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "StandbyDisabled"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "USBExternalDevice"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "BluetoothHIDDevice"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ExternalMediaMounted"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ThunderboltDevice"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "RTCAlarmScheduled"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "MagicPacketWakeEnabled"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "HibernateForced"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "AutoPowerOffDisabled"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "AutoPowerOffForced"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ExternalDisplay"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "NetworkKeepAliveActive"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "LocalUserActivity"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "HibernateFailed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ThermalWarning"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "DisplayCaptured"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: phase %d, standby %d delay %u timer %u, poweroff %d delay %u timer %u, hibernate 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: HibernateMode is 0. Not sending LowBattery factor to IOPPF\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: sleep factors 0x%llx%s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: sleep policy handler error\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "sleep policy handler error\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: sleep params v%u, type %u, flags 0x%x, wake 0x%x, timer %u, poweroff %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: phase %d, standby %d delay %u timer %u, poweroff %d delay %u timer %u, hibernate 0x%x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: HibernateMode is 0. Not sending LowBattery factor to IOPPF\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: sleep factors 0x%llx%s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: sleep params v%u, type %u, flags 0x%x, wake 0x%x, timer %u, poweroff %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain25evaluateSystemSleepPolicyEP25IOPMSystemSleepParametersiPj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOPMSystemSleepType"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain30evaluateSystemSleepPolicyEarlyEv"
        prototype = ""
        caller = "__ZN14IOPMrootDomain19sysPowerDownHandlerEPvS0_jP9IOServiceS0_m"
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: wake in %u secs for hibernateDisabled %d, hibernateAborted %d, standbyNixed %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: wake in %u secs for hibernateDisabled %d, hibernateAborted %d, standbyNixed %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain30evaluateSystemSleepPolicyFinalEv"
        prototype = ""
        caller = "__ZN14IOPMrootDomain15powerChangeDoneEm"
    }
    new {
        args = 1
        anchors {
            new {
                string = "PMRD: hibernateMode 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: hibernateMode 0x%x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain20getHibernateSettingsEPjS0_S0_"
        prototype = ""
        caller = "__Z22IOHibernateSystemSleepv"
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: Standby delay is not set\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: Standby delay is not set\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain18getSystemSleepTypeEPjS0_"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PagingOff"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: PM quiesce took %u ms\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "Quiesce"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: %s all drivers took %u ms\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "PMRD: %s total %u ms\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "%s total %d ms:%s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "PMRD: %s msgType = 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMShutdown"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "PMRD: Skipped PM node %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: Nodes at depth %u = %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: PM nodes %u, maxDepth %u, workers %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: %s done\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: PM quiesce took %u ms\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: %s msgType = 0x%x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: Skipped PM node %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "PMRD: Nodes at depth %u = %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: PM nodes %u, maxDepth %u, workers %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: %s done\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain25handlePlatformHaltRestartEj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOPMUnattendedWakePowerState"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOPCITunnelled"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: Avoiding delayChildNotification on object 0x%llx. flags: 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: delayChildNotification for 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "IOPMDarkWakeMaxPowerState"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: %s tag flags %x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "IOPCIBridge"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: PMTrace found PCI host bridge %s->%s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "IOPCIDevice"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "acpi-device"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: Avoiding delayChildNotification on object 0x%llx. flags: 0x%x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: delayChildNotification for 0x%llx\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: %s tag flags %x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: PMTrace found PCI host bridge %s->%s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain20tagPowerPlaneServiceEP9IOServiceP11IOPMActionsm"
        prototype = ""
        caller = "__ZN9IOService25handleRegisterPowerDriverEP11IOPMRequest"
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: PowerChangeOverride (%s->%s, %x, 0x%x) tag 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: Duplicate lowBattery sleep"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: PowerChangeOverride (%s->%s, %x, 0x%x) tag 0x%x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: Duplicate lowBattery sleep"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain22overrideOurPowerChangeEP9IOServiceP11IOPMActionsPK11IOPMRequestPmPj"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "PMRD: sleepDelaysReport f->9 start at 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: sleepDelaysReport 9->0 start at 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: sleep reason %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: === START (%s->%s, %x->%x, 0x%x) gen %u, msg %x, tag %x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "illegal AOT entry from %s @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "PMRD: sleepDelaysReport f->9 start at 0x%llx\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: sleepDelaysReport 9->0 start at 0x%llx\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: sleep reason %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: === START (%s->%s, %x->%x, 0x%x) gen %u, msg %x, tag %x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain25handleOurPowerChangeStartEP9IOServiceP11IOPMActionsPK11IOPMRequestmPj"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "PMRD: sleepDelaysReport f->9 end 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: === FINISH (%s->%s, %x->%x, 0x%x) gen %u, msg %x, tag %x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: DisplayOn fullwake request is removed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: sleepDelaysReport f->9 end 0x%llx\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: === FINISH (%s->%s, %x->%x, 0x%x) gen %u, msg %x, tag %x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: DisplayOn fullwake request is removed\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain24handleOurPowerChangeDoneEP9IOServiceP11IOPMActionsPK11IOPMRequestmj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: power clamp enabled %s %qx, pendingCap 0x%x, ps %d, cflags 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: power clamp removed %s %qx, pendingCap 0x%x, ps %d, cflags 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: power clamped %s %qx, ps %u->%u, cflags 0x%x)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: dark wake power clamped after %u ms\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: power clamp enabled %s %qx, pendingCap 0x%x, ps %d, cflags 0x%x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: power clamp removed %s %qx, pendingCap 0x%x, ps %d, cflags 0x%x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: power clamped %s %qx, ps %u->%u, cflags 0x%x)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: dark wake power clamped after %u ms\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain29overridePowerChangeForServiceEP9IOServiceP11IOPMActionsPK11IOPMRequestPmPj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: %s: delay child notify\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: %s: delay child notify\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain28shouldDelayChildNotificationEP9IOService"
        prototype = ""
        caller = "__ZN9IOService14notifyChildrenEv"
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOPMSystemCapabilityInterest"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain16registerInterestEPK8OSSymbolPFiPvS3_jP9IOServiceS3_mES3_S3_"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: destroyed capability client set %p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZN14IOPMrootDomain19systemMessageFilterEPvS0_S0_S0_"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: user activity reported %d lastSleepReason %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: user activity reported %d lastSleepReason %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain15reportUserInputEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: requestUserActive: device is null\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: requestUserActive: no device name or registry entry\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "%s:%s"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: requestUserActive from %s (0x%llx) for %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: requestUserActive: device is null\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: requestUserActive: no device name or registry entry\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: requestUserActive from %s (0x%llx) for %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain17requestUserActiveEP9IOServicePKc"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: wakeAbs %qd < nowAbs %qd\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "PMRD: setWakeTime: %04d/%02d/%d %02d:%02d:%02d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN14IOPMrootDomain11setWakeTimeEy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "user alarm"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain13aotShouldExitEb"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: System cannot sustain full wake\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Notification"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: System cannot sustain full wake\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain23handleSetDisplayPowerOnEb"
        prototype = ""
        caller = "__ZN14IOPMrootDomain18dispatchPowerEventEjPvy"
    }
    new {
        args = 3
        anchors {
            new {
                string = "sleep-disabled"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: Setting gSleepDisabledFlag to %u from device tree\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: Clearing gSleepDisabledFlag due to test_sleep_in_vm boot-arg\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "WakeTypeUser"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "WakeTypeAlarm"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SleepService"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Maintenance"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: Setting gSleepDisabledFlag to %u from device tree\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: Clearing gSleepDisabledFlag due to test_sleep_in_vm boot-arg\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain18dispatchPowerEventEjPvy"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "PMRD: Thermal overtemp message received!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: DarkWake thermal limits message received!\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: Received kIOPMPowerEmergency"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: Clamshell opened\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "Lid Open"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: clamshell tickled %d lastSleepReason %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: Ignoring redundant Clamshell close event\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: Clamshell closed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: Desktop mode %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: Clamshell enabled\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: Clamshell disabled\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: ProModeEngaged\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: ProModeDisengaged\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: Thermal overtemp message received!\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: DarkWake thermal limits message received!\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: Received kIOPMPowerEmergency"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: Clamshell opened\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: clamshell tickled %d lastSleepReason %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: Ignoring redundant Clamshell close event\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: Clamshell closed\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: Desktop mode %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: Clamshell enabled\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: Clamshell disabled\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: ProModeEngaged\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: ProModeDisengaged\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain23handlePowerNotificationEj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: user active dropped\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: User activity while in notification wake\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: aggressiveness changed: system %u->%u, display %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: idle time -> %d ms (ena %d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: Requested wrangler idle\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "HID Activity"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: Requesting full wake due to dark wake activity tickle\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: dark wake entry\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: User activity recorded while going to darkwake\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: DarkWake: sleepASAP %d, clamshell closed %d, disabled %d/%x, desktopMode %d, ac %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: Display sleep while in notification wake\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: extra sleep timer changed\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: user inactive\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: idle sleep timer enabled\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: idle sleep timer disabled\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: user active dropped\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: User activity while in notification wake\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: aggressiveness changed: system %u->%u, display %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: idle time -> %d ms (ena %d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: Requested wrangler idle\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: Requesting full wake due to dark wake activity tickle\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: dark wake entry\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: User activity recorded while going to darkwake\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: DarkWake: sleepASAP %d, clamshell closed %d, disabled %d/%x, desktopMode %d, ac %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: Display sleep while in notification wake\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: extra sleep timer changed\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: user inactive\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: idle sleep timer enabled\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: idle sleep timer disabled\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain14evaluatePolicyEij"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "AppleARMBacklight"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "___ZN14IOPMrootDomain24idleSleepPreventersCountEv_block_invoke"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "PMRD: full wake %s (reason %u) %u ms\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "promotion"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "full wake %s (reason %u) %u ms\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN14IOPMrootDomain15requestFullWakeENS_14FullWakeReasonE"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: wrangler->setIgnoreIdleTimer(%d)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "CPU assertions %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: PreventIdleSleep driver assertion raised\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: PreventIdleSleep driver assertion dropped\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: wrangler->setIgnoreIdleTimer(%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: PreventIdleSleep driver assertion raised\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: PreventIdleSleep driver assertion dropped\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain18evaluateAssertionsEyy"
        prototype = ""
        caller = "__ZN19PMAssertionsTracker8tabulateEv"
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMStats: Hibernate read took %qd ms\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "SleepStatistics"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain18pmStatsRecordEventEiy"
        prototype = ""
        caller = "hibernate_machine_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Sleep"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol11withCStringEPKc"
            }
            new {
                string = "TransitionType"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain32pmStatsRecordApplicationResponseEPK8OSSymbolPKcijyP8OSObjectmb"
        prototype = ""
        caller = ""
    }
    new {
        args = 7
        anchors {
            new {
                string = "IOPMRegisterNVRAMTracePointHandler"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "wake-failure"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: Sleep failure code 0x%08x 0x%08x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "Sleep failure code 0x%08x 0x%08x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "IOPMInstallSystemSleepPolicyHandler"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain20callPlatformFunctionEPK8OSSymbolbPvS3_S3_S3_"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: %s[%u] to %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: %s to %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: %s[%u] to %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: %s to %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain17traceNotificationEP8OSObjectbyj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: %s[%u] ack from %s took %d ms\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: %s[%u] ack from %s took %d ms\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain20traceNotificationAckEP8OSObjectj"
        prototype = ""
        caller = "__ZN9IOService13responseValidEji"
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: %s[%u] response from %s took %d ms\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: %s[%u] response from %s took %d ms (ack in %d us)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: %s[%u] response from %s took %d ms\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: %s[%u] response from %s took %d ms (ack in %d us)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain25traceNotificationResponseEP8OSObjectjj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: %s to %s dropped\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: %s to %s dropped\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain25traceFilteredNotificationEP8OSObject"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "PMRD: trace point 0x%02x msgType 0x%x detail 0x%08x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: trace point 0x%02x msgType 0x%x detail 0x%08x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain11traceDetailEjjj"
        prototype = ""
        caller = "__ZN9IOService23tellClientsWithResponseEi"
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: PMTraceWorker %p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: PMTraceWorker %p\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN13PMTraceWorker6tracerEP14IOPMrootDomain"
        prototype = ""
        caller = "__ZN14IOPMrootDomain5startEP9IOService"
    }
    new {
        args = 0
        anchors {
            new {
                string = "PCITopLevel"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN13PMTraceWorker23recordTopLevelPCIDeviceEP9IOService"
        prototype = ""
        caller = "__ZN14IOPMrootDomain20tagPowerPlaneServiceEP9IOServiceP11IOPMActionsm"
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: trace point 0x%02x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: trace point 0x%02x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN13PMTraceWorker10tracePointEh"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: component trace point 0x%02x data 0x%08x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: component trace point 0x%02x data 0x%08x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN13PMTraceWorker26traceComponentWakeProgressEjj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: trace point 0x%02x detail 0x%08x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: trace point 0x%02x detail 0x%08x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN13PMTraceWorker19tracePCIPowerChangeENS_8change_tEP9IOServicejj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: PMHaltWorker %p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: PMHaltWorker %p\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN12PMHaltWorker6workerEv"
        prototype = ""
        caller = "__ZN14IOPMrootDomain25handlePlatformHaltRestartEj"
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: PMHaltWorker free %p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: PMHaltWorker free %p\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN12PMHaltWorker4freeEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "PMRD: All done for worker: %p (visits = %u)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: All done for worker: %p (visits = %u)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN12PMHaltWorker4mainEPvi"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: %s driver %s (0x%llx) took %u ms\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "PowerOff/Restart handler completed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN12PMHaltWorker4workEPS_"
        prototype = ""
        caller = "__ZN12PMHaltWorker4mainEPvi"
    }
    new {
        args = 0
        anchors {
            new {
                string = "PowerOff/Restart still waiting on handler"
                segment = "__TEXT"
                section = "__cstring"
                caller = "halt_log_enter"
            }
            new {
                string = "PMRD: %s still waiting on %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "%s still waiting on %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN12PMHaltWorker12checkTimeoutEPS_Py"
        prototype = ""
        caller = "__ZN14IOPMrootDomain25handlePlatformHaltRestartEj"
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: %s acknowledged without worker property\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: %s acknowledged without worker property\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain29acknowledgeSystemWillShutdownEP9IOService"
        prototype = ""
        caller = "__ZN9IOService18systemWillShutdownEj"
    }
    new {
        args = 0
        anchors {
            new {
                string = "DK matching"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "___ZN14IOPMrootDomain33acquireDriverKitMatchingAssertionEv_block_invoke"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Over-release of driverkit matching assertion @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "___ZN14IOPMrootDomain33releaseDriverKitMatchingAssertionEv_block_invoke"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "SWWdogTriggeredRestart"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SWWdogLogsValid"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "DesktopMode"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "DisplayIdleForDemandSleep"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IOPMDriverWakeEvents"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "AppStatistics"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IdleSleepPreventers"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SystemSleepPreventers"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "IdleSleepPreventersWithID"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "SystemSleepPreventersWithID"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZNK14IOPMrootDomain12copyPropertyEPKc"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: system wake events: %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "system wake events: %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN14IOPMrootDomain22acceptSystemWakeEventsEj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "AOP.OutboxNotEmpty"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "spu_gesture"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "trackpadkeyboard"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Reason"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Details"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "claimSystemWakeEvent(%s, %s, 0x%x) 0x%x %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: claimSystemWakeEvent(%s, 0x%x, %s, 0x%llx) aot %d phase 0x%x add %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain20claimSystemWakeEventEP9IOServicejPKcP8OSObject"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: cpu assertion held for %llu ms by 0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: cpu assertion held for %llu ms by 0x%llx\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN19PMAssertionsTracker22reportCPUBitAccountingEv"
        prototype = ""
        caller = "__ZN14IOPMrootDomain24handleOurPowerChangeDoneEP9IOServiceP11IOPMActionsPK11IOPMRequestmj"
    }
    new {
        args = 1
        anchors {
            new {
                string = "DriverPMAssertions"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN19PMAssertionsTracker17publishPropertiesEv"
        prototype = ""
        caller = "__ZNK14IOPMrootDomain19serializePropertiesEP11OSSerialize"
    }
    new {
        args = 1
        anchors {
            new {
                string = "PMRD: assertionsUser 0x%llx->0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: assertionsUser 0x%llx->0x%llx\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN19PMAssertionsTracker28handleSetUserAssertionLevelsEPv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "CreatedTime"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "ModifiedTime"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Level"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Assertions"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN19PMAssertionsTracker19copyAssertionsArrayEv"
        prototype = ""
        caller = "__ZN19PMAssertionsTracker17publishPropertiesEv"
    }
    new {
        args = 0
        anchors {
            new {
                string = "DesignCapacity"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "MaxErr"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "ManufactureDate"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "BatteryHealth"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "HealthConfidence"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "CapacityEstimated"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "ChargeStatus"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "Temperature"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "AdapterDetails"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "ChargerConfiguration"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "AdapterID"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "Watts"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "AdapterRevision"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "SerialNumber"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "FamilyCode"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "Current"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "Description"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "PMUConfiguration"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "Source"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "ErrorFlags"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "SharedSource"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "CloakedSource"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "BatteryInvalidWakeSeconds"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "PostChargeWaitSeconds"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
            new {
                string = "PostDischargeWaitSeconds"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN8OSSymbol17withCStringNoCopyEPKc"
            }
        }
        symbol = "__ZN12IORootParent10initializeEv"
        prototype = ""
        caller = "iokit_post_constructor_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOPMAOTAnalytics possibleCount: %u, confirmedPossibleCount: %u, rejectedPossibleCount: %u, expiredPossibleCount: %u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
        }
        symbol = "__ZN14IOPMrootDomain15reportAnalyticsEv"
        prototype = ""
        caller = "__ZL27reportAnalyticsTimerExpiredPvS_"
    }
    new {
        args = 2
        anchors {
            new {
                string = "starting sleep"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "notifying applications"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "notifying clients about upcoming system capability changes"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "creating hibernation file or while calling rootDomain's clients about upcoming rootDomain's state changes"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "calling power state change callbacks"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "calling rootDomain's clients about rootDomain's state changes"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "notifying clients about current system capabilities"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "calling Quiesce/Sleep action callbacks"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "halting all non-boot CPUs"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "executing platform specific code"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "writing the hibernation image"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "in EFI/Bootrom after last point of entry to sleep"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "calling Wake action callbacks"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "starting non-boot CPUs"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sending kIOMessageSystemWillPowerOn message to kernel and userspace clients"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "calling rootDomain's clients about upcoming rootDomain's state changes"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "calling rootDomain's clients about completed rootDomain's state changes"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "informing clients about current system capabilities"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "sending asynchronous kIOMessageSystemHasPoweredOn message to userspace clients"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "entering darkwake on way to sleep"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "entering fullwake from darkwake"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Sleep transition timed out after %d seconds"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Wake transition timed out after %d seconds"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = " while "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = " Suspected bundle: "
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = " Thread 0x%llx."
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain14getFailureDataEPP6threadPcm"
        prototype = ""
        caller = "__ZN14IOPMrootDomain13takeStackshotEb"
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: Sleep Wake failure in EFI\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "Sleep Wake failure in EFI\n\nFailure code:: 0x%08x 0x%08x\n\nPlease IGNORE the below stackshot\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: No sleep wake failure string\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: Ignoring zero byte SleepWake failure string\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: Deleting stackshot on successful wake\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "/var/log/SleepWakeFailureString.txt"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: Failed to save SleepWake failure string to file. error:%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: Saved SleepWake failure string to file.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: No SleepWake blob to read beyond chunk %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: Could not read the property :-(\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "PMRD: Concatenated length for the SWD blob %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "PMRD: Failed to save SleepWake zipped data to file. error:%d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: Saved SleepWake zipped data to file.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "No stackshot data\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: No buffer allocated to save failure stackshot\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "bounded_array_ref: n + m is larger than the size of any bounded_array_ref"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN9os_detail21panic_trapping_policy4trapEPKc_113_4"
            }
            new {
                string = "bounded_array_ref: invalid slice provided, the indices are of bounds for the bounded_array_ref"
                segment = "__TEXT"
                section = "__cstring"
                caller = "__ZN9os_detail21panic_trapping_policy4trapEPKc_113_4"
            }
            new {
                string = "PMRD: No sleep wake failure string\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: Ignoring zero byte SleepWake failure string\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: Deleting stackshot on successful wake\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: Failed to save SleepWake failure string to file. error:%d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: Saved SleepWake failure string to file.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain20saveFailureData2FileEv"
        prototype = ""
        caller = "__ZN14IOPMrootDomain18dispatchPowerEventEjPvy"
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: Deleting any sleepwake failure data in nvram\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZN14IOPMrootDomain15deleteStackshotEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "Power button pressed during wake transition after %u ms.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: Taking snapshot. bytesRemaining: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: stack_snapshot_from_kernel returned 0x%x. pid: %d bufsize:0x%x flags:0x%llx bytesWritten: %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: Insufficient buffer size for only kernel task\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: Failed to get stackshot(0x%x) bufsize:0x%x flags:0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "Failed to get stackshot(0x%x) bufsize:0x%x flags:0x%llx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: Failed to update NVRAM %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "PMRD: Failed to update NVRAM with leftovers\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "PMRD: Successfully saved stackshot to NVRAM\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "PMRD: Compressed failure stackshot of kernel+dexts is too large size=%d bytes\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "PMRD: Compressed failure stackshot of only kernel is too large size=%d bytes\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "\nFailure code:: 0x%08x %08x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: Failed to write SleepWake failure string\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: Shutting down due to repeated Sleep/Wake failures\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "PMRD: Calling panic prevented by swd_panic boot-args. Calling restart"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "PMRD: PMRD inited the zlib allocation routines\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "PMRD: ZERR %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "PMRD: Total output size %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "PMRD: Taking snapshot. bytesRemaining: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "PMRD: stack_snapshot_from_kernel returned 0x%x. pid: %d bufsize:0x%x flags:0x%llx bytesWritten: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "PMRD: Failed to write SleepWake failure string\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain13takeStackshotEb"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: Failed to allocate Memory descriptor for sleepWake debug\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: SleepWake debug buffer size:0x%x spindump offset:0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: Failed to allocate Memory descriptor for sleepWake debug\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: SleepWake debug buffer size:0x%x spindump offset:0x%x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain22sleepWakeDebugMemAllocEv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: Failed to open the file %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "PMRD: Bailing as this is not a regular file\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "PMRD: Failed to save sleep wake log. err 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "PMRD: Saved %d bytes to file %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: Saved %d bytes to file %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN14IOPMrootDomain22sleepWakeDebugSaveFileEPKcPci"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: disk_sync_callout ps=%u\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: disk_sync_callout finish\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "PMRD: disk_sync_callout ps=%u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "PMRD: disk_sync_callout finish\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZL17disk_sync_calloutPvS_"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: Print buffer exhausted for sleep preventers list\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "IOLog"
            }
            new {
                string = "PMRD: Print buffer exhausted for sleep preventers list\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZL26makeSleepPreventersListLogRK11OSSharedPtrI5OSSetEPcm"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: %s handler %p took %u ms\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "PowerOff/Restart message to priority client"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZL26platformHaltRestartApplierP8OSObjectPv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: Alloc in zipping %d items of size %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "PMRD: Offset %zu\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZL12swd_zs_allocPvjj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PMRD: No space to GZIP... not writing to NVRAM\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "__ZL11swd_zoutputP10z_stream_sPhj"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "cpu_boot_thread"
                segment = "__TEXT"
                section = "__cstring"
                caller = "bsd_setthreadname"
            }
        }
        symbol = "__Z15IOCPUInitializev"
        prototype = ""
        caller = "iokit_post_constructor_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "PE_cpu_start_from_kext unimplemented @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN12IODARTMapper5startEP9IOService.cold.4"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "PE_cpu_halt unimplemented @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__Z18IOPCIRangeOptimizeP10IOPCIRange.cold.6"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s>turning off power to cluster %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "PE_cpu_power_disable"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "PE_cpu_power_disable"
        prototype = ""
        caller = "processor_doshutdown"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s>turning on power to cluster %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "PE_cpu_power_enable"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "PE_cpu_power_enable"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IOCPUSleepKernel enter\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "IOCPUSleepKernel exit\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__Z16IOCPUSleepKernelv"
        prototype = ""
        caller = "__ZN16IOPlatformExpert11sleepKernelEv"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Can't initialize PassthruInterruptController @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "ml_processor_register failed: %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Error finding interrupts for CPU %d @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Error registering IPIs @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Error registering PMI @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZL15cpu_boot_threadPvi"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "assertions"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "statistics"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "diagnostic_api"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "cpu-factor"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "target-is-fpga"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pe_init_debug"
        prototype = ""
        caller = "PE_init_platform"
    }
    new {
        args = 0
        anchors {
            new {
                string = "random-seed"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "no random seed @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "pe_gen.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "PE_get_random_seed"
        prototype = ""
        caller = "early_random_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "consistent-debug-root"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "PE_consistent_debug_inherit"
        prototype = ""
        caller = "arm_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "timebase-frequency"
                segment = "__TEXT"
                section = "__cstring"
                caller = "SecureDTGetPropertyInternal"
            }
            new {
                string = "bus-frequency"
                segment = "__TEXT"
                section = "__cstring"
                caller = "SecureDTGetPropertyInternal"
            }
            new {
                string = "memory-frequency"
                segment = "__TEXT"
                section = "__cstring"
                caller = "SecureDTGetPropertyInternal"
            }
            new {
                string = "peripheral-frequency"
                segment = "__TEXT"
                section = "__cstring"
                caller = "SecureDTGetPropertyInternal"
            }
            new {
                string = "fixed-frequency"
                segment = "__TEXT"
                section = "__cstring"
                caller = "SecureDTGetPropertyInternal"
            }
        }
        symbol = "pe_identify_machine"
        prototype = ""
        caller = "PE_init_platform"
    }
    new {
        args = 0
        anchors {
            new {
                string = "pe_arm_init_interrupts: args: %p\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "pe_arm_map_interrupt_controller: soc_phys:  0x%lx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "master"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pe_arm_map_interrupt_controller: found interrupt-controller\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "pe_arm_map_interrupt_controller: gPicBase: 0x%lx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "pe_arm_map_interrupt_controller: failed to find the interrupt-controller.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pe_arm_map_interrupt_controller: found timer\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "pe_arm_map_interrupt_controller: gTimerBase: 0x%lx\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
            new {
                string = "pe_arm_map_interrupt_controller: failed to find the timer.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "kprintf"
            }
        }
        symbol = "pe_arm_init_interrupts"
        prototype = ""
        caller = "PE_init_platform"
    }
    new {
        args = 0
        anchors {
            new {
                string = "iBoot version: %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "BootCLUT"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Pict-FailedBoot"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "-noprogress"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "progress-dy"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "/chosen/iBoot"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "start-time"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "debug-wait-start"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "load-kernel-start"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "populate-registry-time"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "PE_init_iokit"
        prototype = ""
        caller = "kernel_bootstrap_thread"
    }
    new {
        args = 1
        anchors {
            new {
                string = "BBBBBBBBGGGGGGGGRRRRRRRR"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "debug-enabled"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "firmware-version"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dram-vendor-id"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "PE_init_platform"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Error!! Current Magic 0x%X, expected value 0x%x\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "PE_update_panic_crc"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "socd-trace-ram"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "PE_init_socd_client"
        prototype = ""
        caller = "socd_client_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "unaligned acccess to socd trace ram @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "pe_init.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "socd_client_trace"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "embedded-panic-log-size"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "iBoot didn't extract panic log from previous session crash, this is bad\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "PE_create_console"
        prototype = ""
        caller = "arm_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Platform Expert not initialized @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "pe_kprintf.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "PE_init_kprintf_config"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "disable-uart-irq"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Unable to find the 'defaults' devicetree node. @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "serial-device"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Unable to find a devicetree node with phandle %x @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "The serial device devicetree node doesn't have a 'compatible' string @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Unable to find serial device driver for '%s' @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "uart-1,samsung"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "Unable to find the 'reg' property on the Apple UART devicetree node @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Unable to find the 'reg' property on the Dock Channels devicetree node @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "max-aop-clk"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "enable-sw-drain"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "dock-wstat-mask"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "serial_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "On-demand serial mode selected.\nWaiting for user input to send logs.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "serial_set_on_demand"
        prototype = ""
        caller = "arm_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Unable to find a configuration for the UART that would result in a nominal baud rate close enough to %u @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "apple_uart_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pe_arm_init_debug: failed to initialize gSocPhys == 0\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "cpu-debug-interface"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "pe_arm_init_debug: failed to find cpu-debug-interface\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "pe_arm_init_debug"
        prototype = ""
        caller = "PE_init_platform"
    }
    new {
        args = 0
        anchors {
            new {
                string = "MAC Framework successfully initialized\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "mac_policy_initbsd"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "AppleUserConsent Policy"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "policy's name is not set @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "policy's full name is not set @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "policy's managed label namespaces exceeds maximum @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "policy's OPs field is NULL @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "Module %s does not support late loading.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "calling mpo_policy_init for %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "calling mpo_policy_initbsd for %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "Security policy loaded: %s (%s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "mac_policy_register"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Security policy unload: %s (%s)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "mac_policy_unregister"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Free of NULL MAC label @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "mac_labelzone_free"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "label backref mismatch: labelp:%p label:%p l_owner:%p @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "mac_label_verify_panic"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "cannot set mac label to ~0 @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "panic_label_set_sentinel"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: MAC hook returned no error, but status is claimed to be fatal? path: '%s', fatal_failure_desc_len: %ld, fatal_failure_desc:\n%s\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "mac_proc_check_launch_constraints"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mac_process.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mac_proc_check_launch_constraints"
        prototype = ""
        caller = "process_signature"
    }
    new {
        args = 0
        anchors {
            new {
                string = "mac_vnode_check_signature: MAC hook returned no error, but status is claimed to be fatal? path: '%s', fatal_failure_desc_len: %ld, fatal_failure_desc:\n%s\n @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "mac_vfs.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mac_vnode_check_signature: %s: code signature validation failed fatally: %s"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "mac_vnode_check_signature: %s: failure to allocate exit reason for validation failure: %s\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mac_vnode_check_signature: %s: fatal failure is missing its description.\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mac_vnode_check_signature: %s: failed to copy reason string (kcdata_memcpy error: %d, length: %ld)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mac_vnode_check_signature: %s: failed to allocate space for reason string (os_reason_alloc_buffer error: %d, kcdata error: %d, length: %ld)\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "mac_vnode_check_signature"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "vn_setlabel: null v_mount\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "vn_setlabel: null v_mount with non-VNON\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
            new {
                string = "%s: mac_vnode_label_store failed %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vn_setlabel"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "vn_setlabel: vop setlabel failed %d\n"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "vn_setlabel"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "file_check_mmap increased max protections @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "mac_file.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "mac_file_check_mmap"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "mac_exc_action_check_exception_send: no exc_action label for process @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "mac_mach.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
            new {
                string = "mac_exc_action_check_exception_send: no exc_action label for process"
                segment = "__TEXT"
                section = "__cstring"
                caller = "printf"
            }
        }
        symbol = "mac_exc_action_check_exception_send"
        prototype = ""
        caller = "exception_deliver"
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"Unable to recycle a chunk\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
            new {
                string = "firehose_buffer.c"
                segment = "__TEXT"
                section = "__cstring"
                caller = ""
            }
        }
        symbol = "__ZN17AppleSmartBattery18setChargeRateLimitEP8OSObject.cold.1"
        prototype = ""
        caller = "firehose_buffer_tracepoint_reserve_slow"
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"TB_ASSERT: \" \"msg_buf->position >= msg_buf->reserved\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN18IODARTMapperClient5startEP9IOService.cold.2_0"
        prototype = ""
        caller = "__tb_forwarding_connection_message_forward"
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"TB_ASSERT: \" \"end <= msg_buf->size\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "delete_buffers_triage"
        prototype = ""
        caller = "__tb_forwarding_connection_message_forward"
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"TB_ASSERT: \" \"original_buffer->connection_owned\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "sched_clutch_thread_remove.cold.2"
        prototype = ""
        caller = "_tb_reply_splitter_add_reply"
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"TB_ASSERT: \" \"success\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__add_accumulator.cold.1"
        prototype = ""
        caller = "__add_accumulator"
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"TB_FATAL: \" \"overflow detected when multiplying\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "_tb_message_accumulator_accumulate.cold.2"
        prototype = ""
        caller = "_tb_message_accumulator_accumulate"
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"TB_ASSERT: \" \"accumulator->total_size >= total\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "key_output.cold.2"
        prototype = ""
        caller = "_tb_message_accumulator_accumulate"
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"TB_ASSERT: \" \"!init_err\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN12IODARTMapper5startEP9IOService.cold.2"
        prototype = ""
        caller = "_tb_message_accumulator_accumulate"
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"TB_ASSERT: \" \"tb_message_get_state(message) == TB_MESSAGE_STATE_RECEIVED\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "buf_brelse.cold.1"
        prototype = ""
        caller = "___tb_service_connection_create_block_invoke"
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"TB_ASSERT: \" \"tb_message_get_disposition(message) == TB_MESSAGE_DISPOSITION_QUERY\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "os_reason_set_description_data.cold.2"
        prototype = ""
        caller = "___tb_service_connection_create_block_invoke"
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"TB_ASSERT: \" \"buffer\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "compressor_memory_object_last_unmap"
        prototype = ""
        caller = "___tb_service_connection_create_block_invoke"
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"TB_ASSERT: \" \"buffer->payload != NULL\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "___tb_service_connection_create_block_invoke.cold.3_0"
        prototype = ""
        caller = "___tb_service_connection_create_block_invoke"
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"TB_ASSERT: \" \"query->state == TB_MESSAGE_STATE_READY\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "device_pager_data_initialize"
        prototype = ""
        caller = "_tb_connection_send_query"
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"TB_ASSERT: \" \"query->disposition == TB_MESSAGE_DISPOSITION_QUERY\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "_tb_connection_send_query.cold.3"
        prototype = ""
        caller = "_tb_connection_send_query"
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"TB_ASSERT: \" \"transport_buffer->connection_owned\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN25IOSkywalkNetworkBSDClient21adjustInterfaceEnableEv.cold.1_0"
        prototype = ""
        caller = "_tb_connection_dealloc_destruct_owned_transport_message_buffer"
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"TB_ASSERT: \" \"0 && \\\"invalid transport type for static initialisation\\\"\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN26IOUnifiedAddressTranslator20mapHardwareResourcesEv.cold.10"
        prototype = ""
        caller = "__os_semaphore_signal"
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"TB_ASSERT: \" \"transport_buffer->wrapping == false\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN14OSEntitlements10getXMLBlobEv.cold.2_1"
        prototype = ""
        caller = "__tb_connection_message_construct"
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"TB_ASSERT: \" \"tpt_buf->wrapping == false\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "proc_apply_resource_actions.cold.1"
        prototype = ""
        caller = "__tb_connection_message_destruct"
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"TB_ASSERT: \" \"self->state == TB_MESSAGE_STATE_UNINITIALIZED\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN22AppleMCA2Cluster_T803025initClusterPreflightGatedEv.cold.3"
        prototype = ""
        caller = "_tb_message_construct"
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"TB_ASSERT: \" \"(disposition == TB_MESSAGE_DISPOSITION_REPLY || disposition == TB_MESSAGE_DISPOSITION_QUERY)\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN17AppleUSBIORequest4freeEv.cold.1_0"
        prototype = ""
        caller = "_tb_message_configure_recieved"
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"TB_FATAL: \" \"overflow detected when subtracting\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "bank_init.cold.4"
        prototype = ""
        caller = "_tb_message_measure_subrange"
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"TB_ASSERT: \" \"start <= msg->transport_buffer->size\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN19IOPCIHostBridgeData4initEv.cold.4_0"
        prototype = ""
        caller = "_tb_message_subrange"
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"TB_ASSERT: \" \"end <= msg->transport_buffer->size\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN16AppleT8006GPIOIC15claimWakeEventsEv.cold.1_0_0"
        prototype = ""
        caller = "_tb_message_subrange"
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"TB_FATAL: \" \"tb_message_encode_f32_v2\" \": %d\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "_tb_message_encode_f32"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"TB_FATAL: \" \"tb_message_encode_f64_v2\" \": %d\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "_tb_message_encode_f64"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"TB_ASSERT: \" \"end <= tpt_buf->size\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "_tb_message_encode_buffer.cold.2"
        prototype = ""
        caller = "_tb_message_encode_buffer"
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"TB_FATAL: \" \"tb_message_decode_f32_v2\" \": %d\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "_tb_message_decode_f32"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"TB_FATAL: \" \"tb_message_decode_f64_v2\" \": %d\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "_tb_message_decode_f64"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"TB_ASSERT: \" \"kr == KERN_SUCCESS\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "ip6_ecn_egress.cold.1"
        prototype = ""
        caller = "__tb_xnu_transport_destruct_message_buffer"
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"TB_ASSERT: \" \"blocks->connection_message_handler\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN16EndpointInstance28initWithControllerAndOptionsEP21IOUSBDeviceControlleriiijjiP8IOMapper.cold.1"
        prototype = ""
        caller = "__tb_xnu_upcall_handler"
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"TB_ASSERT: \" \"response->state == TB_MESSAGE_STATE_READY\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN29AppleConvergedIPCRTIInterface5startEP9IOService.cold.1_0"
        prototype = ""
        caller = "___tb_afk_transport_create_block_invoke"
    }
    new {
        args = 0
        anchors {
            new {
                string = "\"TB_ASSERT: \" \"response\" @%s:%d"
                segment = "__TEXT"
                section = "__cstring"
                caller = "panic"
            }
        }
        symbol = "__ZN15IODMAController13getControllerEP9IOServicej.cold.1"
        prototype = ""
        caller = "__ZL30_tb_afk_transport_send_messageP14tb_transport_sP12tb_message_sPS2_21tb_connection_flags_t"
    }
    new {
        args = 0
        anchors {
            new {
                string = "stackshot: initial allocation failed: %d, allocating %u bytes of %u max, try %llu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "stackshot: final buffer size was insufficient at maximum size\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "stackshot: debugger call failed: %d, try %llu, buffer %u estimate %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "stackshot: initial buffer size was insufficient at maximum size\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "stackshot: succeeded, traced %u bytes to %u buffer (estimate %u) try %llu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "kern_stack_snapshot_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "stackshot: final allocation failed: %d, allocating %u bytes of %u max, try %llu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "stackshot_collect_kcdata"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Coalition [%lld] caught causing excessive I/O (flavor: %d). Task I/O: %lld MB. [Limit : %lld MB per %lld secs]. Triggered by process [%d]\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ERROR %#x returned from send_resource_violation(disk_writes, ...)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "SENDING_NOTIFICATION__THIS_COALITION_IS_CAUSING_TOO_MUCH_IO"
        prototype = ""
        caller = "coalition_io_rate_exceeded"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Failed to get memory error port - mcc"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mcc_memory_error_event_queue_invoke"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s[%d] task_info: possibly invalid task_info_count %d > TASK_VM_INFO_COUNT=%d on platform %d sdk %d.%d.%d - please use TASK_VM_INFO_COUNT"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "task_info"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "process %s[%d] caught allocating too many mach ports. \t    Num of ports allocated %u; \n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "SENDING_NOTIFICATION__THIS_PROCESS_HAS_TOO_MANY_MACH_PORTS"
        prototype = ""
        caller = "task_port_space_ast"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Memory pressure corpse purge for pid %d.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "task_purge_all_corpses"
        prototype = ""
        caller = "memstat_approaching_fg_band"
    }
    new {
        args = 0
        anchors {
            new {
                string = "corpse for pid %d disabled via SPI\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "task_generate_corpse_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s[%d] Corpse failure, too many faults %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s[%d] Corpse failure, too many %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s[%d] Corpse allowed %d of %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "task_crashinfo_get_ref"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "Failed to allocate event for VM API telemetry."
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "vm_sanitize_send_telemetry"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_reclaim: failed to initialize vmdr buffer - reclaim is disabled (%llu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "vm_reclaim: failed to allocate VA for reclaim buffer (%d) - %s [%d]\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "vm_reclaim: indices were not zero-initialized\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "vm_reclaim: failed to initialize buffer on dying task %s [%d]"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "vm_reclaim: tried to overwrite existing reclaim buffer for %s [%d]"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "vm_deferred_reclamation_buffer_init_internal"
        prototype = ""
        caller = "_Xmach_vm_deferred_reclamation_buffer_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_reclaim: enquequeing %d for asynchronous reclamation.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "vm_deferred_reclamation_reclaim_from_task_async"
        prototype = ""
        caller = "memorystatus_on_suspend"
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_reclaim: Unable to copy head ptr from 0x%llx: err=%d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "reclaim_copyin_head"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_reclaim: Unable to copy tail ptr from 0x%llx: err=%d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "reclaim_copyin_tail"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_reclaim: Unable to copy busy ptr from 0x%llx: err=%d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "reclaim_copyin_busy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "vm_reclaim: Userspace modified head or busy pointer! head: %llu (0x%llx) != busy: %llu (0x%llx) | tail = %llu (0x%llx)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "vm_reclaim: Unable to copyin %llu entries in reclaim buffer at 0x%llx to 0x%llx: err=%d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "vm_reclaim: Unable to deallocate 0x%llx (%u) from 0x%llx err=%d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "vm_reclaim: unable to free(reusable) 0x%llx (%u) for pid %d err=%d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "vm_reclaim: attempted to reclaim entry with unsupported behavior %uh"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "reclaim_chunk"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "vm_reclaim: Unable to copy %llu to busy ptr at 0x%llx: err=%d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "reclaim_copyout_busy"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "vm_reclaim: Unable to copy %llu to head ptr at 0x%llx: err=%d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "reclaim_copyout_head"
        prototype = ""
        caller = "reclaim_chunk"
    }
    new {
        args = 0
        anchors {
            new {
                string = "NSPACE SNAPSHOT not handled"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "NSPACE TRACK not handled"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "NSPACE no port"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "NSPACE resolve_path call"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "NSPACE resolve failure: %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "NSPACE process %s (pid %d) is decorated as no-materialization (op %lld; %s)"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "vfs_materialize_item"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "NSPACE send_nspace_resolve_cancel failure: %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nspace_resolver_req_wait"
        prototype = ""
        caller = "vfs_materialize_item"
    }
    new {
        args = 0
        anchors {
            new {
                string = "bpfopen: bpf%d kalloc_type bpf_d failed"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "bpf%u opened by %s.%u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bpfopen"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "bpfattach - %s with dlt %d is already attached"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bpf_attach"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "bpfwrite: len %d if %s less than copy_len %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "bpfwrite: bad len %d if %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "bpfwrite: len %u - hlen %u too big if %s write_size_max %u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "bpfwrite: len %u - hlen %u too big if %s mtu %u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "bpfwrite mbuf_allocpacket len %d error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "bpfwrite uiomove hlen %d error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "bpfwrite bpf_copy_uio_to_mbuf_packet error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "bpf_copy_uio_to_mbuf_packet: len %d error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bpf_movein"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: uuids not found error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: processes not matching error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: d_to is closing error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: d_from is closing error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: bufsizes not matching error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: bpf_setif() failed error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bpf_setup"
        prototype = ""
        caller = "bpfioctl"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: ifnet_allocate failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: bridge_ifnet_set_attrs failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: ifnet_attach failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: ifnet_set_lladdr_and_type failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: failed error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: ifnet_set_mtu failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s sdl len %d index %d family %d type 0x%x nlen %d alen %d slen %d addr %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_clone_create"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: ARP %s short frame %lu < %lu"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: ARP %s size %lu mbuf_pullup fail"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: ARP %s htype not ethernet"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: ARP %s hlen not ethernet"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: ARP %s ptype not IP"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: ARP %s plen not IP"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "is_valid_arp_packet"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: mbuf_copydata udphdr failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: mbuf_copydata dp_flags failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s %s DHCP dp_flags 0x%x UDP cksum 0x%x"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: short IPv6 payload length %d < %lu"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: failed to pullup icmp6 header"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: failed to pullup icmp6 + payload"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: short nd_ns %d < %lu"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: invalid ND6 NS option"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: bad ND6 DAD packet"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: short nd_na %d < %lu"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: invalid ND6 NA option"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: target lladdrlen %d != %lu"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: short ND6 %s %d < %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: invalid ND6 %s option"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s %s %s ip6len %d icmp6len %d lladdr offset %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_mac_nat_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: bridge_get_ip_proto failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: IP checksum HW %svalid"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: IP checksum SW %svalid"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: IPv%c %s checksum HW 0x%x %svalid"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: IPv%c %s checksum SW %svalid (0x%x) hlen %d paylen %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_verify_checksum"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: non-TCP (%d) IPv%c frame %d bytes"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: fragmented TSO packet?"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: m_pullup %d failed"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_get_tcp_header"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: ifp %s cmd 0x%08lx (%c%c [%lu] %c %lu)"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: ifp %s has address"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s SIOCSIFLLADDR error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s invalid MTU: %u(%s) != %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_ioctl"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: ifnet_get_address_list(%s) failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: ifaddr_address_family unknown %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "bridge_mac_nat_enable"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s0x%llx type: %u flags: 0x%x len: %u data: 0x%llx maxlen: %u datastart: 0x%llx next: 0x%llx%s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s<NULL>%s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%spktlen: %u rcvif: 0x%llx header: 0x%llx nextpkt: 0x%llx%s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "brlog_mbuf"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%02x%s"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "brlog_mbuf_data"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: IPv4 checksum 0x%x"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: bad tcp header length %u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: IPv%c %s set checksum 0x%x"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_offload_checksum"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: %s.%dbrhf_arp_too_small"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s.%dbrhf_arp_pullup_failed"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s.%dbrhf_arp_bad_hw_type"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s.%dbrhf_arp_bad_pro_type"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s.%dbrhf_arp_bad_hw_len"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s.%dbrhf_arp_bad_pro_len"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s.%dbrhf_arp_bad_op"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s.%dbrhf_arp_bad_sha"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s.%dbrhf_arp_bad_spa"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_host_filter_arp"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "%s: %s.%dbrhf_dhcp_too_small"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s.%dbrhf_dhcp_bad_op"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s.%dbrhf_dhcp_bad_htype"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s.%dbrhf_dhcp_bad_hlen"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s.%dbrhf_dhcp_bad_chaddr"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s.%dbrhf_dhcp_bad_ciaddr"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_dhcp_filter"
        prototype = ""
        caller = "bridge_iff_input"
    }
    new {
        args = 2
        anchors {
            new {
                string = "%s: zalloc_nolock failed"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: added %02x:%02x:%02x:%02x:%02x:%02x on %s count %u hashsize %u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_rtupdate"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: %s new size %u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_rthash_delayed_resize"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "%s: large non IPv4/IPv6 packet"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_interface_input"
        prototype = ""
        caller = "bridge_iff_input"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: %s doesn't support LRO"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s %s failed (cap 0x%x) %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s %s success (cap 0x%x)"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_set_lro"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: ifnet_set_offload(%s, 0x%x) failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: ifnet_set_tso_mtu(%s, AF_INET, %u) failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: ifnet_set_tso_mtu(%s, AF_INET6, %u) failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bridge_set_tso"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "%s: %s MAC-NAT input translate to %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: %s MAC-NAT input for %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "bridge_mac_nat_input_list"
        prototype = ""
        caller = "bridge_input_list"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: %s is not attached"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "if_updown"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "interface %s management set %s by %s:%d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ifnet_set_management"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "null_proto_input unexpected packet on %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "null_proto_input"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "eventhandler_invoke(\"ifnet_event\")"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "intf_event_callback"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kern_nexus_interface_remove_netagent(%s) returned %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ifnet_remove_netagent"
        prototype = ""
        caller = "bridge_ioctl_add"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s:%d %s Failed for ioctl %lu as interface is not attached"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d %s unknown ioctl %lu"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ifnet_ioctl_async"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: interface %s (%u) available\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: interface %s (%u) unavailable)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "if_state_update"
        prototype = ""
        caller = "ifioctl_ifreq"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%3lu: %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "log_hexdump"
        prototype = ""
        caller = "dlil_input_packet_list_common"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d %s ifnet_ioctl returned %d for ioctl %lu"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d %s ifnet_ioctl returned successfully for ioctl %lu"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ifnet_ioctl_event_callback"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: dropping short packet %d < %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ether_demux"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: proto_register_plumber failed for AF_INET error=%d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: proto_register_plumber failed for AF_INET6 error=%d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: proto_register_plumber failed vlan_clone_attach error=%d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "vlan_family_init"
        prototype = ""
        caller = "ether_family_init"
    }
    new {
        args = 2
        anchors {
            new {
                string = "%s: %s: unable to prepend VLAN header"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s: m_pullup VLAN header failed"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s: needed to m_pullup VLAN header"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s: %s tag %d bytes %d (%s)"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "vlan_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: %s: propagated link event to vlans"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "vlan_parent_signal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: %s: ifnet_set_promiscuous(%s, %d) failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s: ifnet_set_promiscuous(%s, %d) succeeded"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "vlan_set_promisc"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: last vlan on %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "vlan_unconfig"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: if_fake: copy_mbuf(): packet too large %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: if_fake: Large mbuf fragment %d > %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "copy_mbuf"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: ifnet_set_offload(%s, 0x%x) failed, %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: ifnet_set_offload(%s, 0x%x) succeeded"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "feth_ifnet_set_attrs"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: set TSO MTU IPv4 failed on %s, err %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: set TSO MTU IPv6 failed on %s, err %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "feth_set_tso_mtu"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: %s: ifnet_stat() failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s: interface advisory report failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "feth_if_adv"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: %s ring %d flags 0x%x"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s peer fakeif %s is detaching"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s peer fakeif %s channel not connected, expn: %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s no peer fakeif (peer %p)"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s no peer"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "feth_nx_sync_tx"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: %s err=%d getting packetid"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s err=%d getting nx_port_id"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "feth_get_packet_notification_details"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: not enough room"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "feth_add_packet_trailer"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: %s: TX refill failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s: TX refilled"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s: threadcall waking up waiter"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "feth_async_doorbell"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: %s: invalid qset_idx %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "feth_nx_qset_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: %s: invalid tx qidx %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s: invalid rx qidx %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "feth_nx_queue_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: invalid llink_idx idx %d (max %d) on peer %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: invalid qset_idx %d (max %d) on peer %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: NULL default queue (llink_idx %d, qset_idx %d) on peer %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "feth_rx_queue_submit"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: free_provider_instance failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: deregister_provider %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "feth_detach_netif_nexus"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: if_redirect_request_copyin failed: error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: NULL delegate name\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: delegate %s not found\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s's family %d not compatible with ethernet functional type\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: low latency %s cannot be a delegate\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s's family %d not compatible with cellular functional type\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: delegate %s cannot be redirect\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: user_addr(0x%llx) or len(%llu) < %lu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: copyin failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: reserved[0]=0x%llu, reserved[1]=0x%llureserved[2]=0x%llu, reserved[3]=0x%llu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: cannot configure the same delegate\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: failed to get self reference\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: failed to get delegate reference\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: failed to set delegate ifp: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: failed to get mac addr from %s, error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: delegate %s detached during setup\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "redirect_ioctl"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: %s: classifier info missing\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: %s: l4len(%u) < icmp6len(%lu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "redirect_rx_cb"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: %s ring %d flags 0x%x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s is not usable\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s has no delegate\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: delegate interface is being detached\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: nexus adapter is not present\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: enqueue failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "redirect_nx_sync_tx"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: %s: Tx refill (sync) %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s: Tx refilled (sync)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s: schedule async refill\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "redirect_nx_tx_doorbell"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: %s: Tx refill failed %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s: Tx refilled\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s: threadcall waking up waiter\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "redirect_async_doorbell"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: cannot %s advisory on %s because it is not usable\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: advisory is already %s on %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: delegate is not set on %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "redirect_nx_intf_adv_config"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: free_provider_instance failed %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: deregister_provider failed %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "redirect_detach_netif_nexus"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: proto_register_plumber failed for AF_INET error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: proto_register_plumber failed for AF_INET6 error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: bond_clone_attach error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bond_family_init"
        prototype = ""
        caller = "ether_family_init"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: interface %s doesn't support mtu %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: (%s, %s) hwassist values don't match 0x%x != 0x%x, using 0x%x instead"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: (%s, %s): multicast_list_program failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: (%s, %s): SIOCSIFFLAGS failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: (%s, %s): if_siflladdr restore failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: (%s, %s): promiscous mode disable failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: name too large"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: SIOCGIFDEVMTU %s failed, %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bond_add_interface"
        prototype = ""
        caller = "bond_ioctl"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: [%s] Receive PORT_DISABLED"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: [%s] Receive PORT_DISABLED: link timer started"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: [%s] Receive PORT_DISABLED: link timer completed, marking UNSELECTED"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bondport_receive_machine_port_disabled"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: [%s] Mux WAITING"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: [%s] Mux WAITING: Standby"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: [%s] Mux WAITING: Port is already ready"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: [%s] Mux WAITING: Timer already set"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: [%s] Mux WAITING: No waiting"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: [%s] Mux WAITING: 2 seconds"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: [%s] Mux WAITING: Ready"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: [%s] Mux WAITING: All Ports Ready"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bondport_mux_machine_waiting"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: [%s] periodic_transmit Start"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: [%s] periodic_transmit: Need To Transmit"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "bondport_periodic_transmit_machine"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: (%s, %s): if_siflladdr (%s) failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "bond_remove_interface"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: %s failed, invalid dst sa_len %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s failed, mask sa_len %d too large\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: removing route to %s->%s->%s, flags 0x%x, ifaddr %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: removed route to %s->%s->%s, flags 0x%x, ifaddr %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: added route to %s->%s->%s, flags 0x%x, ifaddr %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "rtinit_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s - for interface index %u with flags %x"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - for matching interface with flags %x"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - *matched non-Skywalk* [filter match: %d]"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s - nstat get ifflags %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s - nstat get progressdigest returned %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s - *matched Skywalk* [filter match: %x %x]"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "progress_indicators"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "%s - NSTAT_DEBUG_SOCKET <pid %d>: NSTAT: Collecting stats"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - NSTAT_DEBUG_SOCKET <pid %d>: NSTAT: <pid %d> Collected stats - domain <%s> owner <%s> ctxt <%s> bundle id <%s> is_tracker %d is_non_app_initiated %d is_silent %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nstat_inp_domain_info"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "%s - nstat_client_send_event() %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - nstat_client_send_event() used when updates not supported"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nstat_client_send_event"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "%s - nstat_client_send_update() %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - nstat_client_send_counts() %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nstat_client_send_goodbye"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s - mbuf_allocpacket failed"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - resorting to ctl_enqueuedata"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nstat_accumulate_msg"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s - src->nts_provider->nstat_copy_descriptor: %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - src->nts_provider->nstat_counts: %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nstat_client_append_update"
        prototype = ""
        caller = "nstat_client_send"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s - nstat_userland_tu_copy_descriptor  returned %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s - nstat_userland_tu_counts  returned %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "nstat_userland_get_snapshot"
        prototype = ""
        caller = "get_pcblist_n"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: unexpected protocol %u for inp %p"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "if_ports_used_add_inpcb"
        prototype = ""
        caller = "inpcb_get_if_ports_used"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: unexpected protocol %u for nfi %p"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "if_ports_used_add_flow_entry"
        prototype = ""
        caller = "__netns_get_if_local_ports_block_invoke"
    }
    new {
        args = 2
        anchors {
            new {
                string = "%s: called PKT_F_WAKE_PKT not set from %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: unexpected protocol family %u from %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: unexpected wake fragment from %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: pkt with unassigned TCP header from %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: pkt with unassigned UDP header from %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: unexpected IP protocol %u from %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "if_ports_used_match_pkt"
        prototype = ""
        caller = "fsw_receive"
    }
    new {
        args = 1
        anchors {
            new {
                string = "sysctl_wake_pkt_event_notify proc %s:%u val %u last_wake_phy_if_delay_wake_pkt %d last_wake_phy_if_family %u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "sysctl_wake_pkt_event_notify"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "sysctl_wake_pkt_event_delay_if_families proc %s:%u npi_wake_packet_event_delay_if_families 0x%x -> 0x%x"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "sysctl_wake_pkt_event_delay_if_families"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: wakeuuid not set not adding port: %u flags: 0x%xif: %u pid: %u epid %u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: zalloc() failed for port: %u flags: 0x%x if: %u pid: %u epid %u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: num %u for port: %u flags: 0x%x if: %u pid: %u epid %u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: already added port: %u flags: 0x%x if: %u pid: %u epid %u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "net_port_info_add_entry"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s net_port_info if_index %u arch %s family %s proto %s local %s:%u foreign %s:%u pid: %u epid %u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "net_port_info_log_npi"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "utun_output - ctl_enqueuembuf failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "utun_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "utun_framer - ifnet_output prepend failed\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "Received app uuid error %d for %s%d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "Cannot set proc uuid for %s%d, size %d < %zu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "utun_framer"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s, tx refill failed %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "utun_netif_tx_doorbell: ifnet_disable_output returned error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "utun_netif_tx_doorbell"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "utun_cleanup_family - invalid protocol family %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "utun_cleanup_family - failed to create %s socket: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "utun_remove_address - ifaddr_address failed: %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "utun_remove_address - SIOCDIFADDR failed: %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "utun_remove_address - ifaddr_address failed (v6): %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "utun_remove_address - SIOCDIFADDR_IN6 failed: %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "utun_cleanup_family"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "utun_ctl_rcvd: ctl_getenqueuepacketcount returned error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "utun_ctl_rcvd: ifnet_enable_output returned error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "utun_ctl_rcvd"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "utun_attach_inet - ifnet_attach_protocol %d failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "utun_attach_proto"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "ipsec_output: first mbuf length shorter than IP header length: %d.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec_output: Bad ip header length %d.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec_output: ipsec4_output error %d.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec_output: first mbuf length shorter than IPv6 header length: %d.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec_output: ipsec6_splithdr returned NULL\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec_output: ipsec6_output error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec_output: Received unknown packet version %d.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ipsec_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ipsec_cleanup_family - invalid protocol family %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec_cleanup_family - failed to create %s socket: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec_remove_address - ifaddr_address failed: %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "ipsec_remove_address - SIOCDIFADDR failed: %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "ipsec_remove_address - ifaddr_address failed (v6): %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "ipsec_remove_address - SIOCDIFADDR_IN6 failed: %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "ipsec_cleanup_family"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipsec_attach_inet - ifnet_attach_protocol %d failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "utun_attach_proto_0"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: necp_session_action find fd error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_session_action unknown action (%u)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_session_action"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: DATA-TRACE: IP Output: RESULT - MATCHED (ID %d BoundInterface %d LastInterface %d Proto %d) Policy %d Result %d Parameter %d Route Rule %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: DATA-TRACE: IP Output: RESULT - NO MATCH (ID %d BoundInterface %d LastInterface %d Proto %d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_ip_output_find_policy_match"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: DATA-TRACE: IP6 Output: RESULT - MATCHED (ID %d BoundInterface %d LastInterface %d Proto %d) Policy %d Result %d Parameter %d Route Rule %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: DATA-TRACE: IP6 Output: RESULT - NO MATCH (ID %d BoundInterface %d LastInterface %d Proto %d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_ip6_output_find_policy_match"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: necp_session_get_policy invalid input (%zu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_session_get_policy policy_id copyin error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Failed to find policy with id %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_session_get_policy buffer not large enough (%zu < %u)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_session_get_policy size too large to copy (%u)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_session_get_policy TLV copyout error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_session_get_policy"
        prototype = ""
        caller = "necp_session_action"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: necp_session_delete_policy invalid input (%zu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_session_delete_policy policy_id copyin error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_session_delete_policy failed to find policy with id %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_session_delete_policy"
        prototype = ""
        caller = "necp_session_action"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: necp_session_list_all size too large to copy (%u policies)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_session_list_all buffer not large enough (%zu < %u)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_session_list_all TLV copyout error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_session_list_all"
        prototype = ""
        caller = "necp_session_action"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: necp_session_set_session_priority invalid input (%zu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_session_set_session_priority priority copyin error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Session does not hold necessary entitlement to claim priority level %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_session_set_session_priority"
        prototype = ""
        caller = "necp_session_action"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: necp_session_register_service invalid input (%zu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_session_register_service uuid copyin error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_session_register_service"
        prototype = ""
        caller = "necp_session_action"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: necp_session_unregister_service invalid input (%zu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_session_unregister_service uuid copyin error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_session_unregister_service"
        prototype = ""
        caller = "necp_session_action"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: necp_session_add_domain_filter invalid input (%zu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_session_add_domain_filter buffer not large enough (%zu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_session_add_domain_filter allocate filter error (%zu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_session_add_domain_filter filter copyin error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_session_add_domain_filter size mismatch (%zu != %zu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_session_add_domain_filter ID copyout error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_session_add_domain_filter"
        prototype = ""
        caller = "necp_session_action"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: necp_session_remove_domain_filter invalid input (%zu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_session_remove_domain_filter uuid copyin error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_session_remove_domain_filter"
        prototype = ""
        caller = "necp_session_action"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s (process %s:%u) %s no match"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_address_matches_drop_dest_policy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: QoS Marking : Interface match %d for Rule %d Allowed %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: QoS Marking: C:%d WF:%d W:%d E:%d Cn:%d Cmpn:%d VPN:%d for Rule %d Allowed %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: QoS Marking: Rule %d ifp %s Allowed %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_update_qos_marking"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "necp_route_is_interface_type_allowed %s:%d %s not allowed on management interface %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_log_interface_not_allowed"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: Route Allowed: No interface for route, using default for Rule %d Allowed %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Route Allowed: Interface match %d for Rule %d Deny LQM Abort\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Route Allowed: Interface match %d for Rule %d Allowed %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Route Allowed: C:%d WF:%d W:%d E:%d Cmpn:%d VPN:%d for Rule %d Allowed %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Route Allowed: Using default for Rule %d Allowed %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_route_is_allowed_inner"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: %s (process %s:%u) not permitted\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s (process %s:%u) bad newlen %lu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s (process %s:%u) sysctl_io_opaque() error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s (process %s:%u) bad entry_count %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s (process %s:%u) NECP_SESSION_PRIORITY_UNKNOWN bad entry_count %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s (process %s:%u) priority %u entry_count 0\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s (process %s:%u) bad level %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s (process %s:%u) AF_INET bad prefix %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s (process %s:%u) AF_INET bad sin_len %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s (process %s:%u) AF_INET bad sin_port %u, not zero\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s (process %s:%u) AF_INET6 bad prefix %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s (process %s:%u) AF_INET6 bad sin6_len %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s (process %s:%u) AF_INET6 bad sin6_port %u, not zero\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s (process %s:%u) AF_INET6 bad sin6_flowinfo %u, not zero\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s (process %s:%u) AF_INET6 bad sin6_scope_id %u, not zero\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "sysctl_handle_necp_drop_dest_level"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: necp_client_action find fd error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_action unknown action (%u)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_client_action"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: NECP_SOCKET_PARAMS_LOG <pid %d>: NECP ATTRIBUTES SOCKET - domain <%s> owner <%s> context <%s> tracker domain <%s> account <%s> <so flags - is_tracker %X non-app-initiated %X app-approved-domain %X\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Set on socket: Domain <%s> Domain owner <%s> Domain context <%s> Tracker domain <%s> Account <%s> \n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_set_socket_domain_attributes"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: NECP CLIENT FLOW TRACE <pid %d %s> <flow %s>: Collecting stats\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: NECP CLIENT FLOW TRACE <pid %d %s> <flow %s>: Collected stats - domain <%s> owner <%s> ctxt <%s> bundle id <%s> is_tracker %d is_non_app_initiated %d is_silent %d\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_find_domain_info_common"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: Incorrect length (got %zu, expected %zu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_copy client_id copyin error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_copy request flow divert TLV copyout error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_client_copy"
        prototype = ""
        caller = "necp_client_action"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: necp_client_copy parameters copyout error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_copy result copyout error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_copy group members copyout error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_client_copy_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: necp_client_copy assigned results tlv_header copyout error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_copy assigned results copyout error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_copy protocol control event results tlv_header copyout error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_client_fillout_flow_tlvs"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: req tcp stats, failed to get route details for pid %d curproc %d %s\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: req tcp stats, necp_client flow_registration flow_stats missing for pid %d %s curproc %d %s\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Collected stats - TCP - epid %d uid %d euuid %s persona id %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_request_tcp_netstats"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: req udp stats, failed to get route details for pid %d curproc %d %s\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: req udp stats, necp_client flow_registration flow_stats missing for pid %d %s curproc %d %s\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Collected stats - UDP - epid %d uid %d euuid %s persona id %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_request_udp_netstats"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: req quic stats, failed to get route details for pid %d curproc %d %s\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: req quic stats, necp_client flow_registration flow_stats missing for pid %d %s curproc %d %s\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Collected stats - QUIC - epid %d uid %d euuid %s persona id %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_request_quic_netstats"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: necp_client_request_nexus copyin client_id error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_request_nexus process not found for pid %d error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_request_nexus copyin bufreq error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_request_nexus copyout bufreq error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Request nexus error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_client_request_nexus"
        prototype = ""
        caller = "necp_client_action"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: Copyin client_id error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Parameters copyin error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Parameters copyout error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_client_agent_use"
        prototype = ""
        caller = "necp_client_action"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: necp_client_update_cache copyin client_id error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_update_cache no flow error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_update_cache copyin cache buffer error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_update_cache copyin ecn cache buffer error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: necp_client_update_cache copyin tfo cache buffer error (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "necp_client_update_cache"
        prototype = ""
        caller = "necp_client_action"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: mbuf_tag_id_find_internal failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: ctl_register failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "netagent_init"
        prototype = ""
        caller = "bsd_init"
    }
    new {
        args = 3
        anchors {
            new {
                string = "%s: Register message size could not be read, error %d data_size %zu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Failed to register agent: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "netagent_handle_register_message"
        prototype = ""
        caller = "netagent_ctl_send"
    }
    new {
        args = 3
        anchors {
            new {
                string = "%s: Update message size could not be read, error %d data_size %zu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "netagent_handle_update_message"
        prototype = ""
        caller = "netagent_ctl_send"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: Failed to read uuid for assign message: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Failed to read assign message: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "netagent_handle_assign_nexus_message"
        prototype = ""
        caller = "netagent_ctl_send"
    }
    new {
        args = 0
        anchors {
            new {
                string = "eventhandler_invoke(\"in6_clat46_event\")"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "in6_clat46_event_callback"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d unit %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "pktap_clone_create"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s:%d %s: kauth_authorize_generic(KAUTH_GENERIC_ISSUSER) - error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "pktap_ioctl"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d pass %s match type %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d pass %s match name %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d skip %s match type %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d skip %s match name %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d %s no match\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "pktap_filter_evaluate"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "%s:%d mbuf_copydata tcp v4 failed for %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d mbuf_copydata udp v4 failed for %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d in_pcblookup_hash no pcb %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d unknown ip_p %u on %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d mbuf_copydata tcp v6 failed for %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d mbuf_copydata udp v6 failed for %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d in6_pcblookup_hash no pcb %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d unknown ip6.ip6_nxt %u on %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "pktap_fill_proc_info"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "%s:%d unsupported protocol %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d %s: header %d > %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "pktap_bpf_tap_packet"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: ignore v1 query on IGIF_LOOPBACK ifp %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: process v1 query on ifp %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "igmp_input_v1_query"
        prototype = ""
        caller = "igmp_input"
    }
    new {
        args = 0
        anchors {
            new {
                string = "in_pcb_check_management_entitled %s:%d not management entitled %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "in_pcb_check_management_entitled"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: unable to insert route to %s;%s, flags=0x%x, due to existing ARP route %s->%s flags=0x%x, attempting to delete\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "in_addroute"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: Resetting TFO-data loss to 0 from %u on heur %lx\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Resetting TFO-req loss to 0 from %u on heur %lx\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Resetting TFO-data RST to 0 from %u on heur %lx\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Resetting TFO-req RST to 0 from %u on heur %lx\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Resetting ECN-loss to 0 from %u and synrst from %u on heur %lx\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s disabling heuristics for 12 hours"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_heuristic_reset_counters"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s disable ECN until %u now %u on %lx for SYN-loss\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s disable MPTCP until %u now %u on %lx\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s disable ECN until %u now %u on %lx for drop-RST\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s disable ECN until %u now %u on %lx for drop-Rxmit\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s disable ECN until %u now %u on %lx for SYN-RST\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_heuristic_inc_counters"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "already processed AccECN field/options for this ACK"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_process_accecn"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: sysctl_io_string() error %d, req->newlen %lu, sizeof(keystring) %lu"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: strlen(keystring) %lu != TCP_FASTOPEN_KEYLEN * 2 %u, newlen %lu"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: sscanf() != 1, error EINVAL"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_sysctl_fastopenkey"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: %u > %u TSO 0 tunnel_ifp %s hwassist mismatch with ifp %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %u > %u TSO 0 tunnel_ifp %s hwassist mismatch with inp_last_outifp %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %u > %u TSO 0 tunnel_ifp %s hwassist mismatch with inp_boundifp %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %u > %u TSO %d ifp %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_set_tso"
        prototype = ""
        caller = ""
    }
    new {
        args = 5
        anchors {
            new {
                string = "Segment start (%u) is not same as retransmitted start sequence number (%u)"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_seg_sent_insert"
        prototype = ""
        caller = "tcp_output"
    }
    new {
        args = 0
        anchors {
            new {
                string = "bytes_retransmitted (%u) can't be smaller than retransmited segment length (%u)"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_mark_seg_lost"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "RB tree still contains segments while time ordered list is already empty"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "Segment ACKed list shouldn't contain any segments as they are removed immediately after being ACKed"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_segs_sent_clean"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "pacer rate shouldn't be 0, CCA is %s (cwnd=%u, smoothed rtt=%u ms)"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_pacer_get_packet_tx_time"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "bytes_retransmitted (%u) can't be smaller than already retransmited segment length (%u)"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "tcp_seg_delete_acked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "bytes_lost (%u) and/or bytes_retransmitted (%u) can't be smaller than already lost/retransmitted segment length (%u)"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_seg_mark_sacked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: probe_if_index %u conflicts with %u, tcps_probe_if_conflict %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: timer list already running for if_index %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: timer will fire sooner than needed for if_index %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_interface_send_probe"
        prototype = ""
        caller = "if_state_update"
    }
    new {
        args = 0
        anchors {
            new {
                string = "connect address error %d for %s process %s:%u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_log_address_error"
        prototype = ""
        caller = "tcp_usr_connect_common"
    }
    new {
        args = 0
        anchors {
            new {
                string = "16 {curProtocol: 100, prevProtocol: %hhu, prevUUID: %02X%02X%02X%02X-%02X%02X-%02X%02X-%02X%02X-%02X%02X%02X%02X%02X%02X, localPort: %hu, remotePort: %hu, tcpSeq: %u, length: %u, pid: %hu, logSeqn: %hhu}"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mpkl_tcp_send"
        prototype = ""
        caller = "tcp_usr_send"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: error %d for proc %s[%u] out ifp is not set\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: error %d for proc %s[%u] if_tcp_kao_max %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_set_keep_alive_offload"
        prototype = ""
        caller = "tcp_ctloutput"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Prague CC: Cubic origin point should be greater than 0"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_prague_ack_rcvd"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "new CE count (%u) can't be less than current CE count (%u)OR newly ACKed (%u) can't be less that current ACKed (%u)"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%u packets were newly CE marked"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "one RTT hasn't elapsed, not doing CWR"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "one RTT hasn't elapsed, not updating alpha"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "currently in loss recovery, no need to do CWR"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_prague_process_ecn"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "tcp_rtt_info (%s:%d) [%s:%u<->%s:%u] interface: %s (skipped: %lu)\nso_gencnt: %llu t_state: %s process: %s:%u base_rtt: %u ms rttcur: %u ms srtt: %u ms rttvar: %u ms rttmin: %u ms rxtcur: %u rxtshift: %u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_log_rtt_info"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "tcp_rt_rtt (%s:%d) [%s:%u<->%s:%u] interface: %s (skipped: %lu)\nso_gencnt: %llu t_state: %s process: %s:%u rt_rmx: RTV_RTT: %d ms rtt: %u ms rttvar: %u ms"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_log_rt_rtt"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "tcp_rtt_change (%s:%d) [%s:%u<->%s:%u] interface: %s (skipped: %lu)\nso_gencnt: %llu t_state: %s process: %s:%u srtt: %u ms old_rtt: %u ms rttvar: %u old_rttvar: %u ms "
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_log_rtt_change"
        prototype = ""
        caller = "tcp_xmit_timer"
    }
    new {
        args = 0
        anchors {
            new {
                string = "tcp_keepalive (%s:%d) [%s:%u<->%s:%u] interface: %s (skipped: %lu)\nso_gencnt: %llu t_state: %s process: %s:%u snd_una: %u snd_max: %u SO_KA: %d RSTALL: %d TFOPRB: %d idle_time: %u KIDLE: %d KINTV: %d KCNT: %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_log_keepalive"
        prototype = ""
        caller = "tcp_timers"
    }
    new {
        args = 0
        anchors {
            new {
                string = "tcp %s: [%s:%u<->%s:%u] interface: %s (skipped: %lu)\nso_gencnt: %llu t_state: %s process: %s:%u SYN in/out: %u/%u bytes in/out: %llu/%llu pkts in/out: %llu/%llu rtt: %u.%u ms rttvar: %u.%u ms base_rtt: %u ms error: %d so_error: %d svc/tc: %u flow: 0x%x"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "tcp %s: [%s:%u<->%s:%u] interface: %s (skipped: %lu)\nso_gencnt: %llu t_state: %s process: %s:%u SYN in/out: %u/%u bytes in/out: %llu/%llu pkts in/out: %llu/%llu rtt: %u.%u ms rttvar: %u.%u ms base_rtt: %u ms error: %d so_error: %d svc/tc: %u flow: 0x%x\nso_qlimit: %d so_qlen: %d so_incqlen: %d "
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_log_connection"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "tcp listen: [%s:%u<->%s:%u] interface: %s (skipped: %lu)\nso_gencnt: %llu t_state: %s process: %s:%u so_qlimit: %d error: %d so_error: %d svc/tc: %u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_log_listen"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "tcp_connection_summary [%s:%u<->%s:%u] interface: %s (skipped: %lu)\nso_gencnt: %llu t_state: %s process: %s:%u Duration: %u.%03u sec Conn_Time: %u.%03u sec bytes in/out: %llu/%llu pkts in/out: %llu/%llu pkt rxmit: %u ooo pkts: %u dup bytes in: %u ACKs delayed: %u delayed ACKs sent: %u\nrtt: %u.%03u ms rttvar: %u.%03u ms base rtt: %u ms so_error: %d svc/tc: %u flow: 0x%x"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "tcp_connection_summary [%s:%u<->%s:%u] interface: %s (skipped: %lu)\nso_gencnt: %llu t_state: %s process: %s:%u flowctl: %lluus (%llux) SYN in/out: %u/%u FIN in/out: %u/%u RST in/out: %u/%u AccECN (client/server): %s/%s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_log_connection_summary"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "tcp drop incoming control packet tcp control %s %s%s%s%sreason: %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_log_drop_pkt"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "tcp (%s:%d) [%s:%u<->%s:%u] interface: %s (skipped: %lu)\nso_gencnt: %llu t_state: %s process: %s:%u bytes in/out: %llu/%llu pkts in/out: %llu/%llu %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_log_message"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "tcp (%s:%d) [%s:%u<->%s:%u] interface: %s (skipped: %lu)\nso_gencnt: %llu t_state: %s process: %s:%u flow %s %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_log_fsw_flow"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "tcp_state_changed [%s:%u<->%s:%u] interface: %s (skipped: %lu)\nso_gencnt: %llu t_state: %s process: %s:%u "
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_log_state_change"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "tcp (%s:%d) [%s:%u<->%s:%u] interface: %s (skipped: %lu)\nso_gencnt: %llu t_state: %s process: %s:%u bytes in/out: %llu/%llu pkts in/out: %llu/%llu rxmit pkts/bytes: %u/%u%s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tcp_log_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "udp %s: [%s:%u<->%s:%u] interface: %s (skipped: %lu)\nso_gencnt: %llu so_state: 0x%04x process: %s:%u bytes in/out: %llu/%llu pkts in/out: %llu/%llu error: %d so_error: %d svc/tc: %u flow: 0x%x"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "udp_log_connection"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "udp_connection_summary [%s:%u<->%s:%u] interface: %s (skipped: %lu)\nso_gencnt: %llu so_state: 0x%04x process: %s:%u Duration: %lu.%03d sec Conn_Time: %lu.%03d sec bytes in/out: %llu/%llu pkts in/out: %llu/%llu rxnospace pkts/bytes: %llu/%llu so_error: %d svc/tc: %u flow: 0x%x"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "udp_connection_summary [%s:%u<->%s:%u] interface: %s (skipped: %lu)\nso_gencnt: %llu so_state: 0x%04x process: %s:%u flowctl: %lluus (%llux) "
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "udp_log_connection_summary"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(%u): Detaching, ref count = %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_detach"
        prototype = ""
        caller = "sofreelastref"
    }
    new {
        args = 1
        anchors {
            new {
                string = "(%u): flow_divert_init failed (%d), cannot use flow divert\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Failed to get the key unit from the token: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Failed to get the control socket unit from the token: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Failed to get the aggregate unit from the token: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): HMAC verfication failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_token_set"
        prototype = ""
        caller = "sosetoptlock"
    }
    new {
        args = 1
        anchors {
            new {
                string = "(%u): Send buffer is NULL, but size is supposed to be %lu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): failed to find type MT_DATA in the mbuf chain.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "(%u): mbuf_copym() data_len = %lu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): sent %lu bytes of buffered data\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_send_buffered_data"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(%u): mbuf_copyback(hdr) failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_packet_init"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(%u): no provider, cannot send packet\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): flow_divert_send_packet: ctl_enqueuembuf returned an error: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_send_packet"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(%u): flow_divert_append_target_endpoint_tlv() failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): flow_divert_packet_append_tlv(FLOW_DIVERT_TLV_IS_FRAGMENT) failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): flow_divert_packet_append_tlv(FLOW_DIVERT_TLV_DATAGRAM_SIZE) failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_send_datagram_packet"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "(%u): Invalid target address, family = %u, length = %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_append_target_endpoint_tlv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(%u): sending close, how = %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): failed to create a close packet: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): failed to add the error code TLV: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): failed to add the how flag: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_send_close_if_needed"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(%u): Removing from group %d, ref count = %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_pcb_remove"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(%u): Destroying, app tx %llu, tunnel tx %llu, tunnel rx %llu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_pcb_destroy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(%u): Connecting\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): No destination address available when creating connect packet\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Destination address is not valid when creating connect packet\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Failed to dup the remote endpoint\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): failed to get a local IPv6 address: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): failed to get a local IPv4 address: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): target address has an unsupported family: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Delaying sending the connect packet until send or receive\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Sending saved connect packet\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_connect_out_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(%u): Constrained is denied\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_check_no_constrained"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(%u): Got %s from token\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Failed to add source proc info: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): failed to find the real proc record for %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Looking for process with UUID %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_create_connect_packet"
        prototype = ""
        caller = "flow_divert_connect_out_internal"
    }
    new {
        args = 1
        anchors {
            new {
                string = "(%u): Found multiple processes with UUID %s with different signing identifiers\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Failed to find a process with UUID %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_find_proc_by_uuid_callout"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(%u): Found process %d with signing identifier %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_find_proc_by_uuid_filter"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "(%u): Signature of proc is invalid\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): %s did not match\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): %s matched\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): failed to append the signing ID: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): failed to append the cdhash: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): failed to get the cdhash\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): failed to append app audit token: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_add_proc_info"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(%u): Failed to append %s: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_append_domain_name"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(%u): Failed to copy the connect packet\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_send_connect_packet"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "(%u): provider is no longer accepting writes, cannot send data\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Using remote address from CFIL saved state: %p\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): implicit connect\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): app wrote %lu bytes\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): sbappendstream failed with pkt_data, send buffer size = %u, send_window = %u\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): sbappendstream failed with remaining_data, send buffer size = %u, send_window = %u\n\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): flow_divert_send_datagram_packet failed with error %d, send data size = %lu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): sbappendaddr failed. send buffer size = %u, send_window = %u, error = %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): sbappendrecord failed. send buffer size = %u, send_window = %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): flow_divert_send_datagram_packet failed with error %d, send data size = %lu, dropping the datagram\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_data_out"
        prototype = ""
        caller = "flow_divert_implicit_data_out"
    }
    new {
        args = 0
        anchors {
            new {
                string = "(%u): No valid group is available, cannot init flow divert\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Created\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): pcb insert failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "(%u): Failed to create a unique hash\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "flow_divert_pcb_init_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "(%u): Group %u already contains a PCB with hash %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Group %u is defunct, cannot insert\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_pcb_insert"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(%u): Length of %u TLV (%u) is larger than remaining packet data (%lu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_packet_get_tlv"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "(%u): Failed to lookup group for control unit %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): HMAC in token does not match computed HMAC\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_packet_verify_hmac"
        prototype = ""
        caller = "flow_divert_token_set"
    }
    new {
        args = 1
        anchors {
            new {
                string = "(%u): failed to append the type (%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): failed to append the length (%u)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): failed to append the value\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_packet_append_tlv"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(%u): No active groups, flow divert cannot be used for this socket\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Cannot lookup group with invalid control unit (%u)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): No active non-in-process groups, flow divert cannot be used for this socket\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Group for control unit %u is NULL, flow divert cannot be used for this socket\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): No active in-process groups, flow divert cannot be used for this socket\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Group for control unit %u not found, flow divert cannot be used for this socket\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Cannot access group for control unit %u, mismatched PID (%u != %u)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_group_lookup"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(%u): Destroying group %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_group_destroy"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(%u): Closing\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_close"
        prototype = ""
        caller = "flow_divert_disconnectx"
    }
    new {
        args = 0
        anchors {
            new {
                string = "(%u): app read bytes, space = %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Sent a read notification\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): failed to create a read notification packet: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_rcvd"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(%u): Can't send more\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_shutdown"
        prototype = ""
        caller = "flow_divert_data_out"
    }
    new {
        args = 0
        anchors {
            new {
                string = "(%u): Pre-connect read: sending saved connect packet\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_preconnect"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(%u): failed to create a properties update packet: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): failed to add the traffic class: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_ctloutput"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "(%u): Flow divert connect fail, unit mismatch %u != %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_kctl_connect"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "(%u): got a bad packet, length (%lu) < sizeof hdr (%lu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): mbuf_copydata failed for the header: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): got a %s message from group %d for an unknown pcb: %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): failed to get the key size: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Invalid key size: %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Skipping (re)initialization of defunct group %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): failed to get the token key: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): group %u order is %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Invalid prefix count (%d) or an error occurred while reading the prefix count: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Failed to get the length of the signing identifier at offset %d: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Overflow while incrementing number of bytes\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): No signing identifiers\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Overflow while computing the number of nodes\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Overflow while computing the number of maps\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Invalid bytes count (%lu), nodes count (%lu) or maps count (%lu)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Nodes count = %lu, child maps count = %lu, bytes_count = %lu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Trie memory size (%lu) is too big (maximum is %u)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Failed to allocate %lu bytes of memory for the signing ID trie\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Failed to get the length of the signing identifier at offset %d while building: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Failed to read the signing identifier at offset %d: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): No place to put signing ID for insertion\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Ran out of trie nodes while splitting an existing node\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Ran out of child maps while splitting an existing node\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Ran out of trie nodes while inserting a new leaf\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Ran out of bytes while inserting a new leaf\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Ran out of child maps while inserting a new leaf\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): flow_divert_packet_init failed: %d, cannot send flow states\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): flow_divert_handle_flow_states_request: group send queue is not empty\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Failed to add a flow state: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): flow_divert_handle_flow_states_request: ctl_enqueuembuf returned an error: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): failed to get the connect result: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): received connect result %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): failed to get the send window: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): No control unit provided in the connect result\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): No local address provided\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): No output if index provided\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): No application data provided in connect result\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): socket is not attached any more, ignoring connect result\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): TCP socket is not in the connecting state, ignoring connect result\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Got %u bytes of app data from the connect result\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Failed to copy %u bytes of application data from the connect result packet\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Failed to allocate a buffer of size %u to hold the application data from the connect result\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Connect result contains an invalid control unit: %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): sending connect result\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): failed to create a connect result packet: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Next control unit is the same as the current control unit, disabling flow divert\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): No more valid control units, disabling flow divert\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Group for control unit %u does not exist\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "(%u): Moving from %u to %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "(%u): Failed to send the connect packet to %u, disabling flow divert\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Skipped all flow divert services, disabling flow divert\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Failed to connect using the socket's original protocol: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Failed to copy the mbuf chain in the socket's send buffer\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Failed to send queued TCP data using the socket's original protocol: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Failed to get the remote address from the buffer\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "(%u): Buffered record does not contain any data\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "(%u): Buffered data does not have a packet header\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "(%u): Failed to send queued UDP data using the socket's original protocol: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "(%u): failed to get the close error: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): failed to get the close how flag: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): close received, how = %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): socket is not attached any more, ignoring close from provider\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): socket is not attached any more, ignoring inbound data\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Receive buffer is full, will send read notification when app reads some data\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Remote address is invalid\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): app cannot receive any more data, dropping %lu bytes of data\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): socket has an unsupported type: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): received %lu bytes of data\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): failed to dup the socket address.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): failed to append %lu bytes of data: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): failed to get the read count: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): received a read notification for %u bytes\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): socket is not attached any more, ignoring read notification\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): received a properties update\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): No output if index provided in properties update\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): No application data provided in properties update\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): socket is not attached any more, ignoring properties update\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Failed to copy %u bytes of application data from the properties update packet\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): Failed to allocate a buffer of size %u to hold the application data from the properties update\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_kctl_send"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "(%u): failed to scope to %d because inp_bindif returned %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): failed to derive a new local address from %d because in_pcbladdr returned %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_scope"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "(%u): trying ctl_enqueuembuf again\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "(%u): flow_divert_kctl_rcvd: ctl_enqueuembuf returned an error: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "flow_divert_kctl_rcvd"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%u sysctl net.inet.tcp.mptcp_preferred_version: %d -> %d)"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "sysctl_mptcp_version_check"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s - %lx: mismatched address ids %d %d \n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: dup SYN_ACK %d %d \n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_set_raddr_rand"
        prototype = ""
        caller = "tcp_do_mptcp_options"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s - %lx: skt_unit is still 0\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: Couldn\\'t find proc for uuid %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: asked symptoms about pid %u, taskprio %u, prio %u, err %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_ask_symptoms"
        prototype = ""
        caller = "mptcp_check_subflows_and_add"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s - %lx: unable to create subflow socket error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: necp_client_register_socket_flow failed with error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: state changed during unlock: %u flags %#x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: so_set_effective_pid failed with error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: so_set_effective_uuid failed with error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: sopt %s val %d interim record removed\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "mptcp_subflow_socreate"
        prototype = ""
        caller = "mptcp_subflow_add"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s - %lx: Cell should be set (count is %u), but it's zero!\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: Setting cellicon failed with %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: successfully set the cellicon\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_set_cellicon"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "%s - %lx: copyout failed: %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: Asking for too many ifindex: %u subcount %u, mpts? %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_getconninfo"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s - %lx: ADD_ADDR length for v4 but version is %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: ADD_ADDR length for v6 but version is %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: Received ADD_ADDRv0\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_do_add_addr_opt_v0"
        prototype = ""
        caller = "tcp_do_mptcp_options"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s - %lx: Received ADD_ADDR with echo bit\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: ADD_ADDR addr: %x invalid HMAC\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: ADD_ADDR addr: %s invalid HMAC\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s - %lx: Received ADD_ADDRv1\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mptcp_do_add_addr_opt_v1"
        prototype = ""
        caller = "tcp_do_mptcp_options"
    }
    new {
        args = 0
        anchors {
            new {
                string = "ah_schedule %s: error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ah_schedule"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "ah4_calccksum: invalid IP option (type=%02x)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ah4_calccksum: invalid IP option (type=%02x len=%02x)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ah4_calccksum"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ah_hmac_mature: no key is given.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ah_hmac_mature: unsupported algorithm.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ah_hmac_mature: invalid key length %d.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ah_hmac_mature"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ah_none_mature: protocol and algorithm mismatch.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ah_none_mature"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "IPv6 AH input: AH with IPv6 jumbogram is not supported.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "IPv6 AH input: no key association found for spi %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "IPv6 AH input: non-mature/dying SA found for spi %u; "
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "IPv6 AH input: unsupported authentication algorithm for spi %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "sum length too short in IPv6 AH input (%u, should be at least %u): %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "sum length mismatch in IPv6 AH input (%d should be %u): %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "replay packet in IPv6 AH input: %s %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "IPv6 AH input: couldn\\'t alloc temporary region for cksum\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "checksum mismatch in IPv6 AH input: %s %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "authentication failed in IPv6 AH input: %s %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec tunnel protocol mismatch in IPv6 AH input: %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ah6_input"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ah6_output: first mbuf too short\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ah6_output: md is not in chain\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ip6_output: AH with IPv6 jumbogram is not supported\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ah6_output: internal error: sav->replay is null: SPI=%u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ah6_output: unsupported algorithm: SPI=%u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ah6_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "esp_schedule %s: unsupported key length %d: needs %d to %d bits\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "esp_schedule %s: implicit IV not allowed\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "esp_schedule %s: error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "esp_schedule"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "esp_cbc_mature: algorithm incompatible with 4 octets IV length\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "esp_descbc_mature: no key is given.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "esp_descbc_mature: unsupported algorithm.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "esp_descbc_mature: invalid key length %d.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "esp_descbc_mature: weak key was passed.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "esp_descbc_mature"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "esp_cbc_encrypt %s: payload length must be multiple of %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "esp_cbc_encrypt"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d payload length %zu must be a multiple of ESP_CBC_DES_BLOCKLEN, SPI 0x%08x"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "esp_cbc_des_decrypt_data"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "esp_cbc_mature: algorithm incompatible with esp-old\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "esp_cbc_mature: algorithm incompatible with derived\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "esp_cbc_mature: no key is given.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "esp_cbc_mature: unsupported algorithm.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "esp_cbc_mature %s: weak key was passed.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "esp_cbc_mature"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d payload length %zu must be a multiple of ESP_CBC_3DES_BLOCKLEN, SPI 0x%08x"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "esp_cbc_3des_decrypt_data"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "esp_gcm_mature: algorithm incompatible with esp-old\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "esp_gcm_mature: algorithm incompatible with derived\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "esp_gcm_mature: no key is given.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "esp_gcm_mature: unsupported algorithm.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "esp_gcm_mature %s: invalid algo %d.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "esp_gcm_mature"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "19 {curProtocol: 80 spi: 0x%X, espSeq: %u, PayloadProtocol: 100, localPort: %hu, remotePort: %hu, tcpSeq: %u, tcpLen: %hu}"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "esp_input_log"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "esp4_output: first mbuf too short\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "esp4_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "esp6_output: first mbuf too short\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "esp6_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "esp_cbc_encrypt %s: payload length must be multiple of %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "esp_cbc_encrypt_aes"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: gcm reset failure\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: iv generation failure\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: iv set failure\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: packet encryption ESP header AAD failure\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: packet encryption IV AAD failure\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: failed to encrypt\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "esp_gcm_encrypt_aes"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: failed to set IV\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: packet decryption ESP header AAD failure\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: packet decryption IV AAD failure\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: failed to decrypt\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "esp_gcm_decrypt_aes"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d ChaChaPoly chacha20poly1305_verify failed %d, SPI 0x%08x"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "esp_chachapoly_decrypt_finalize"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s:%d ChaChaPoly Packet too short %d < %u, SPI 0x%08x"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d chacha20poly1305_decrypt failed %d, SPI 0x%08x"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s:%d not enough mbufs %d %d, SPI 0x%08x"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "esp_chachapoly_decrypt"
        prototype = ""
        caller = ""
    }
    new {
        args = 3
        anchors {
            new {
                string = "ipsec4_set_policy: invalid direction=%u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ipsec4_set_policy"
        prototype = ""
        caller = "ip_ctloutput"
    }
    new {
        args = 3
        anchors {
            new {
                string = "ipsec6_set_policy: invalid direction=%u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ipsec6_set_policy"
        prototype = ""
        caller = "ip6_ctloutput"
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipsec_hdrsiz: unknown protocol %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec_hdrsiz: unknown AF %d in IPsec tunnel SA\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ipsec_hdrsiz"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "replay counter made %d cycle. %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ipsec_updatereplay"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipsec4 interface kpipe output: source buffer shorter than ip header, %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec4 interface kpipe output: failed to find outbound sav\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec4 interface kpipe output: sah is NULL\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec4 interface kpipe output: buflet size shorter than hlen %u, SPI=%x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ipsec4_interface_kpipe_output"
        prototype = ""
        caller = "ipsec_kpipe_sync_rx"
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipsec6 interface kpipe output: source buffer shorter than ipv6 header, %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec6 interface kpipe output: failed to find outbound sav\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec6 interface kpipe output: sah is NULL\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec6 interface kpipe outputbuflet size shorter than hlen %u, SPI=%x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ipsec6_interface_kpipe_output"
        prototype = ""
        caller = "ipsec_kpipe_sync_rx"
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipsec6_tunnel_validate invalid nxt(%u) protocol"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ipsec6_tunnel_validate"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nat keepalive: invalid address family %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ipsec_send_natt_keepalive"
        prototype = ""
        caller = "key_timehandler"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: ifnet_get_local_ports_extended(%s) failed %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ipsec_get_local_ports"
        prototype = ""
        caller = "ipsec_sleep_wake_handler"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: unknown ipsec protocol %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: IPsec with IPv6 jumbogram is not supported\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ipsec6_update_routecache_and_output"
        prototype = ""
        caller = "ipsec4_output_internal"
    }
    new {
        args = 2
        anchors {
            new {
                string = "ipsec6_output_trans: unknown ipsec protocol %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec6_output_trans: IPsec with IPv6 jumbogram is not supported\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ipsec6_output_trans_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipsec6_output_tunnel: unsupported inner family, spi=%u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec6_output_tunnel: unknown ipsec protocol %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ipsec6_output_tunnel: IPsec with IPv6 jumbogram is not supported\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ipsec6_output_tunnel_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ipsec: monitoring sleep wake"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ipsec_monitor_sleep_wake"
        prototype = ""
        caller = "key_newsav"
    }
    new {
        args = 1
        anchors {
            new {
                string = "ENOBUFS in icmp6_error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "icmp6_error_flag"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ICMP6 redirect sent from %s rejected; must be from linklocal\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ICMP6 redirect sent from %s rejected; hlim=%d (must be 255)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ICMP6 redirect rejected; no route with inet6 gateway found for redirect dst: %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ICMP6 redirect rejected; not equal to gw-for-src=%s (must be same): %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ICMP6 redirect rejected; no route found for redirect dst: %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ICMP6 redirect rejected; redirect dst must be unicast: %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ICMP6 redirect rejected; neither router case nor onlink case: %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "icmp6_redirect_input: invalid ND option, rejected: %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "icmp6_redirect_input: lladdrlen mismatch for %s (if %d, icmp6 packet %d): %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "icmp6_redirect_input"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "eventhandler_invoke(\"in6_event\")"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "in6_event_callback"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: IID derived from HW interface.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: IID from alterate HW interface %s.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: borrowed IID from %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: IID from PRNG.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: IID: %02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "in6_select_iid_from_all_hw"
        prototype = ""
        caller = "in6_ifattach_aliasreq"
    }
    new {
        args = 3
        anchors {
            new {
                string = "%s src %s dst %s ifscope %d is_direct %d select_srcif %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s %s->%s ifscope %d->%d ifa_if %s ro_if %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s %s->%s ifscope %d->%d ifa_if %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s %s->%s ifscope %d ifa_if %s"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s %s->%s ifscope %d ifa_if NULL"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s->%s ifscope %d ro_if %s != ifa_if %s (cached route cleared)"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s->%s ifscope %d ro_if %s (no ifa_if found)"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s %s->%s ifscope %d ifa_if %s ro_if %s (error=%d)"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "selectroute"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: unable to insert route to %s:%s, flags=0x%x, due to existing ND6 route %s->%s flags=0x%x, attempting to delete\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "in6_addroute"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: ignore v2 query on ifp %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: input v2 query on ifp %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: GS query throttled\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: process v2 group query on ifp %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: v2 general query response scheduled in T+%d seconds on ifp %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "mld_v2_input_query"
        prototype = ""
        caller = "mld_input"
    }
    new {
        args = 0
        anchors {
            new {
                string = "Reinit'd ND information for interface %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nd6_ifattach"
        prototype = ""
        caller = "in6_ifattach_prelim"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: timer scheduled in T+%llus.%lluu (demand %d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: timer scheduled in T+%llus.%lluu with %llus.%lluu leeway (demand %d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: fast timer scheduled in T+%llus.%lluu (demand %d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: not scheduling timer: timers %d, fast_timer %d, T+%llus.%lluu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: not scheduling timer: timers %d, fast_timer %d, T+%llus.%lluu with %llus.%lluu leeway\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nd6_sched_timeout"
        prototype = ""
        caller = ""
    }
    new {
        args = 5
        anchors {
            new {
                string = "%s: route %s on %s%d gateway address not AF_LINK\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: route %s on %s%d sdl_alen == 0\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nd6_lookup_ipv6"
        prototype = ""
        caller = "ether_inet6_pre_output"
    }
    new {
        args = 1
        anchors {
            new {
                string = "nd6_ns_input: invalid hlim (%d) from %s to %s on %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_ns_input: bad DAD packet (wrong ip6 dst)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_ns_input: NS packet from non-neighbor\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_ns_input: bad NS target (multicast)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_ns_input: invalid ND option, ignored\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_ns_input: bad DAD packet (link-layer address option)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_ns_input: lladdrlen mismatch for %s (if %d, NS packet %d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_ns_input: duplicate IP6 address %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_ns_input: src=%s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_ns_input: dst=%s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_ns_input: tgt=%s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nd6_ns_input"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nd6_ns_output: source can't be determined: dst=%s, error=%d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_ns_output: no preferred source available: dst=%s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_ns_output: preferred source available is optimistic: dst=%s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nd6_ns_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "nd6_na_input: on ND6ALT interface!\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_na_input: invalid hlim (%d) from %s to %s on %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_na_input: invalid target address %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_na_input: a solicited adv is multicasted\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_na_input: invalid ND option, ignored\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_na_input: lladdrlen mismatch for %s (if %d, NA packet %d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nd6_na_input"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "nd6_na_output: source can't be determined: dst=%s, error=%d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nd6_na_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: host route to %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Successfully deleted host route to %s for interface %s.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Failed to delete host route to %s for interface %s with error :%d.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nd6_alt_node_absent"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: sending unsolicited NA\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nd6_unsol_na_output"
        prototype = ""
        caller = "nd6_dad_timer"
    }
    new {
        args = 2
        anchors {
            new {
                string = "%s: ignoring duplicate NA on replicated interface %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: ignoring duplicate NA on %s [DAD not in progress]\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: ignoring duplicate NA on %s [eh_src != tgtlladdr]\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: no DAD structure for %s on %s.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: duplicate IPv6 address %s [processing NA on %s]\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nd6_dad_na_input"
        prototype = ""
        caller = "nd6_na_input"
    }
    new {
        args = 1
        anchors {
            new {
                string = "%s: sending NS who has %s on ALL\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: sending NS who has %s on ALL (except %s)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: Sending cloned NS who has %s, originally on %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "nd6_prproxy_ns_output"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "nd6_rs_input: invalid hlim (%d) from %s to %s on %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_rs_input: RS packet from non-neighbor\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_rs_input: invalid ND option, ignored\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_rs_input: lladdrlen mismatch for %s (if %d, RS packet %d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nd6_rs_input"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "nd6_ra_input: invalid hlim (%d) from %s to %s on %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_ra_input: src %s is not link-local\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_ra_input: invalid ND option, ignored\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "RA with a lower CurHopLimit sent from %s on %s (current = %d, received = %d). Ignored.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: invalid option len %d for route information option, ignored\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: invalid prefix length %d in the route information option, ignored\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: using reserved preference mask, ignored\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: received RA with route opt, prefix %s/%u pref %u lifetime %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "nd6_ra_input: invalid option len %d for prefix information option, ignored\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "nd6_ra_input: invalid prefix len %d for prefix information option, ignored\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: invalid prefix %s, ignored\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "nd6_ra_input: no SLAAC on prefix %s [not RFC 4193]\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "%s: no SLAAC on prefix %s [6to4]\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "nd6_ra_input: bogus mtu option mtu=%d sent from %s, ignoring\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_ra_input: bogus mtu mtu=%d sent from %s; exceeds maxmtu %d, ignoring\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_ra_input: mtu option mtu=%d sent from %s; maxmtu unknown, ignoring\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "nd6_ra_input: lladdrlen mismatch for %s (if %d, RA packet %d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nd6_ra_input"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "prelist_update: failed to make the prefix %s/%d on-link on %s (errno=%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "prelist_update: nd6_prelist_add failed for %s/%d on %s errno=%d, returnpr=0x%llx\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "prelist_update: failed to create a temporary address, errno=%d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "prelist_update"
        prototype = ""
        caller = "nd6_ra_input"
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s: is now the default interface (was %s)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "No default interface set\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: scoped %s/%d on %s has no matching unscoped prefix\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: failed to make %s/%d scoped onlink on %s, errno=%d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: error promoting %s/%d to %s from %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s: %s/%d promoted, previously on %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "nd6_setdefaultiface"
        prototype = ""
        caller = "nd6_ioctl"
    }
    new {
        args = 0
        anchors {
            new {
                string = "protocol family mismatched %d != %d\n."
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_gettunnel"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "key_checksa_present: invalid sav->state (state: %d SA: %d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_checksa_present"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "register custom ipsec: invalid address\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "register custom ipsec: address family mismatched\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "register custom ipsec: address struct size mismatched\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "register custom ipsec: invalid ipsec token\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "register custom esp: invalid proto %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "register custom esp: SA exists\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_reserve_custom_ipsec"
        prototype = ""
        caller = "flow_req_prepare_namespace"
    }
    new {
        args = 0
        anchors {
            new {
                string = "key_setsadbaddr: bad prefix length %zu"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_setsadbaddr"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "key_parse: upper layer protocol mismatched.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_parse: address family mismatched.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_parse: address struct size mismatched.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_parse: unsupported address family.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_parse: illegal prefixlen.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_validate_address_ext_pair"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "key_getsaddbaddr: mhp is NULL\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_getsaddbaddr: ext_len(%zu) < sizeof(struct sadb_address) + sizeof(struct sockaddr)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_getsaddbaddr: ext_len(%zu) < sizeof(struct sadb_address) + sa->sa_len(%u)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_getsaddbaddr"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "key_checkspidup: address family mismatched.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_checkspidup"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "key_mature: illegal range of SPI %u.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_mature: invalid flag (derived) given to old-esp.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_mature: invalid flag (derived) given to AH SA.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_mature: protocol and algorithm mismated.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_mature: Invalid satype.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_mature: unknown authentication algorithm.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_mature: invalid AH key length %d (%d-%d allowed)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_mature: no satisfy algorithm for AH\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_mature: unknown encryption algorithm.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_mature: invalid ESP key length %d (%d-%d allowed)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_mature: no satisfy algorithm for ESP\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_mature"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "key_getnewspid: to allocate policy id is failed.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_getnewspid"
        prototype = ""
        caller = "key_spdadd"
    }
    new {
        args = 2
        anchors {
            new {
                string = "key_setdumpsastats: length too nbug: %u"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "key_setsadbsastat: length is too big: %zu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "key_setdumpsastats"
        prototype = ""
        caller = "key_getsastat"
    }
    new {
        args = 1
        anchors {
            new {
                string = "key_send_delsp: length too big: %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "key_delsp_for_ipsec_if"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d set net_mpklog_enabled to %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "sysctl_net_mpklog_enabled"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "%s:%d set net_mpklog_type to %u (%s)"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "sysctl_net_mpklog_type"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ktrace: manually setting owning process"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ktrace_set_owning_pid"
        prototype = ""
        caller = "kperf_sysctl_bless_handler"
    }
    new {
        args = 0
        anchors {
            new {
                string = "ktrace: promoting background tool"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ktrace_reset_internal"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "ktrace: changing state from %d to %d, owned by %s[%d]"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "ktrace_set_owning_proc"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "ERROR: Must provide a login name for a new persona!"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ERROR: Invalid type: %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "ERROR: too many active personas!"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "persona_alloc"
        prototype = ""
        caller = "kpersona_alloc_syscall"
    }
    new {
        args = 0
        anchors {
            new {
                string = "build_userspace_exit_reason: failed to allocate exit reason\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "build_userspace_exit_reason: exit reason with namespace %u, nonzero payload but zero length\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "build_userspace_exit_reason: failed to allocate signal reason buffer\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "build_userspace_exit_reason: failed to allocate space for reason string\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "build_userspace_exit_reason: failed to copy in payload data with error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "build_userspace_exit_reason: failed to allocate space for payload data\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "build_userspace_exit_reason"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "memorystatus: WARNING %s [%d] is receiving an entitled debugging memory limit. This is intended only for debugging and can result in unstable device behavior."
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "memorystatus_act_on_entitled_developer_task_limit"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "memorystatus_list_add(): adding pid %d with priority %d.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "memorystatus_add"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "memorystatus: setting %s(%d) to priority %d, inserting at %s\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "memstat_update_priority_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "memorystatus: changing (%s) pid %d: priority %d, user_data 0x%llx\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "memorystatus_update: effective change specified for pid %d, but change already occurred.\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "memorystatus_set_priority"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "memorystatus_list_remove: removing pid %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "memorystatus_remove"
        prototype = ""
        caller = "proc_prepareexit"
    }
    new {
        args = 1
        anchors {
            new {
                string = "memorystatus: Denying dirty-tracking opt-in for managed %s [%d]\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "%s [%d] enrolled in ActivityTracking tracked %d / idle-exit %d / defer %d / dirty %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "memorystatus_dirty_track"
        prototype = ""
        caller = "proc_dirtycontrol"
    }
    new {
        args = 1
        anchors {
            new {
                string = "memorystatus_dirty_set(): %d %d 0x%x 0x%x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "memorystatus_dirty_set"
        prototype = ""
        caller = "proc_dirtycontrol"
    }
    new {
        args = 1
        anchors {
            new {
                string = "memorystatus_dirty_clear(): %d 0x%x 0x%x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "memorystatus_dirty_clear"
        prototype = ""
        caller = "proc_dirtycontrol"
    }
    new {
        args = 0
        anchors {
            new {
                string = "memorystatus_on_ledger_footprint_exceeded: failed to warn %s [%d] (exiting, or no handler registered?).\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "task_exceeded footprint: failed to allocate jetsam reason\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "task_exceeded_footprint: failed to kill the current task (exiting?).\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "memorystatus_on_ledger_footprint_exceeded"
        prototype = ""
        caller = "task_footprint_exceeded"
    }
    new {
        args = 0
        anchors {
            new {
                string = "memorystatus_allowed_vm_map_fork: corpse for pid %d blocked by jetsam).\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "memorystatus disallowed vm_map_fork %lld  %lld\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "memorystatus_allowed_vm_map_fork"
        prototype = ""
        caller = "task_duplicate_map_and_threads"
    }
    new {
        args = 2
        anchors {
            new {
                string = "%lu.%03d memorystatus: killing_top_process_elevated%d pid %d [%s] (%s %d) %lluKB - memorystatus_available_pages: %llu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "memorystatus_kill_elevated_process"
        prototype = ""
        caller = "memorystatus_thread"
    }
    new {
        args = 0
        anchors {
            new {
                string = "memorystatus_perform_idle_demotion()\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "memorystatus_perform_idle_demotion() found %s [%d]\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
            new {
                string = "memorystatus_perform_idle_demotion() found stuck process %d [%s], moving to JETSAM_PRIORITY_AGING_BAND1_STUCK\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "memorystatus_perform_idle_demotion"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "memorystatus: new limit on pid %d (%dMB %s)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "memorystatus: error (%d) setting memlimit in ledger for %s [%d]\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "_memstat_write_memlimit_to_ledger_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "memorystatus: setting memlimit for %s [%d], Active(%dMB %s), Inactive(%dMB, %s)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "memstat_set_memlimits_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "memorystatus: jetsam is approaching JETSAM_PRIORITY_FOREGROUND\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "memorystatus: purging kernel memory caches\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "memorystatus: recovered %llu pages from pmap\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "memorystatus: purging all corpses\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "memorystatus: no corpses to purge\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "memorystatus: reclaiming all deferred user memory\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "memorystatus: trimming kernel zone allocator\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "memstat_approaching_fg_band"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "kill_idle_exit_proc: failed to allocate jetsam reason\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "memorystatus: killing_idle_process pid %d [%s] jetsam_reason->osr_code: %llu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "memorystatus_idle_exit_from_VM"
        prototype = ""
        caller = "memorystatus_update_vm_pressure"
    }
    new {
        args = 2
        anchors {
            new {
                string = "%lu.%03d memorystatus: killing_specific_process pid %d [%s] (%s %d) %lluKB - memorystatus_available_pages: %llu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "memorystatus_kill_process_sync"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "memorystatus_init_jetsam_snapshot_stats: host_statistics64 failed with %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "memorystatus_init_snapshot_vmstats"
        prototype = ""
        caller = ""
    }
    new {
        args = 1
        anchors {
            new {
                string = "memorystatus: WARNING snapshot buffer is full, count %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "memorystatus_update_jetsam_snapshot_entry_locked: failed to update pid %d, priority %d, count %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "memorystatus_update_jetsam_snapshot_entry_locked"
        prototype = ""
        caller = ""
    }
    new {
        args = 2
        anchors {
            new {
                string = "memorystatus_get_priority_list: returning %lu for size\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "memorystatus_cmd_get_priority_list"
        prototype = ""
        caller = "memorystatus_control"
    }
    new {
        args = 0
        anchors {
            new {
                string = "memorystatus_get_jetsam_snapshot: returned inputsize (%ld), snapshot_size(%ld), listcount(%ld)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "memorystatus_get_on_demand_snapshot: returned inputsize (%ld), snapshot_size(%ld), listcount(%ld)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "memorystatus_get_at_boot_snapshot: returned inputsize (%ld), snapshot_size(%ld), listcount(%d)\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "memorystatus_cmd_get_jetsam_snapshot"
        prototype = ""
        caller = "memorystatus_control"
    }
    new {
        args = 0
        anchors {
            new {
                string = "memorystatus: process %s [%d] opted in to both Management and ActivityTracking\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "memorystatus_set_process_is_managed"
        prototype = ""
        caller = "memorystatus_control"
    }
    new {
        args = 0
        anchors {
            new {
                string = "memorystatus_bg_pressure_eligible: pid %d, state 0x%x\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = "_os_log_internal"
            }
        }
        symbol = "memorystatus_update_vm_pressure"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "eventhandler_invoke(\"protoctl_event\")"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "protoctl_event_callback"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "sendit_x: mbuf_packet_from_uio error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "sendit_x: sockargs error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "sendit_x: sosend_list error %d\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "mbuf_packet_from_uio: mbuf_allocpacket %zu error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "mbuf_packet_from_uio: len %d error %d"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "sendit_x"
        prototype = ""
        caller = "sendmsg_x"
    }
    new {
        args = 1
        anchors {
            new {
                string = "TRACKER - %s:%d No tracker attribute of type %d found in parameters\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "TRACKER - %s:%d Wrong size for tracker attribute type %d size %zu <got size %zu>\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "TRACKER - %s:%d Exceeded max size (%zu) - tracker attribute type %d size %zu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "TRACKER - %s:%d Failed to get value for tracker attribute type %d size %zu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "tracker_retrieve_attribute"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "TRACKER - %s:%d Missing remote address\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "TRACKER - %s:%d Invalid address family <%d>\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "fill_hash_entry"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "SOFLOW - %s:%d <pid %d so %llx> ifflagsp set to 0x%X\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "SOFLOW - %s:%d <pid %d so %llx> Collected NSTAT counts: rxpackets %llu rxbytes %llu txpackets %llu txbytes %llu\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "SOFLOW - %s:%d <pid %d so %llx> Collected NSTAT metadata: eupid %llu epid %d euuid %x%x%x%x-%x%x%x%x-%x%x%x%x-%x%x%x%x outifp %d properties 0x%X lport %d fport %d laddr %s faddr %s rcvbufsize %u rcvbufused %u traffic_class %u\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "soflow_nstat_provider_request_vals"
        prototype = ""
        caller = ""
    }
    new {
        args = 0
        anchors {
            new {
                string = "eventhandler_deregister event_type=ifnet_event"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "eventhandler_deregister event_type=protoctl_event"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "fsw_uninit"
        prototype = ""
        caller = "nx_fsw_dom_terminate"
    }
    new {
        args = 0
        anchors {
            new {
                string = "EXT_PANICLOG: instance is NULL\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "EXT_PANICLOG: init failed\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
            new {
                string = "EXT_PANICLOG: Handle alloc failed\n"
                segment = "__TEXT"
                section = "__os_log"
                caller = ""
            }
        }
        symbol = "__ZN20IOExtensiblePaniclog14createWithUUIDEPhPKcj29ext_paniclog_create_options_tPPS_"
        prototype = ""
        caller = ""
    }
}